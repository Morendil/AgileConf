--
-- PostgreSQL database dump
--

SET client_encoding = 'UTF8';
SET standard_conforming_strings = off;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET escape_string_warning = off;

SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: session_speakers; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE session_speakers (
    session_id integer NOT NULL,
    speaker_name text NOT NULL
);


ALTER TABLE public.session_speakers OWNER TO postgres;

--
-- Name: sessions; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE sessions (
    id integer NOT NULL,
    title text,
    description text,
    stage character varying(50),
    type character varying(50),
    year integer
);


ALTER TABLE public.sessions OWNER TO postgres;

--
-- Name: sessions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE sessions_id_seq
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;


ALTER TABLE public.sessions_id_seq OWNER TO postgres;

--
-- Name: sessions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE sessions_id_seq OWNED BY sessions.id;


--
-- Name: sessions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('sessions_id_seq', 140, true);


--
-- Name: speakers; Type: TABLE; Schema: public; Owner: postgres; Tablespace: 
--

CREATE TABLE speakers (
    name text NOT NULL
);


ALTER TABLE public.speakers OWNER TO postgres;

--
-- Name: id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE sessions ALTER COLUMN id SET DEFAULT nextval('sessions_id_seq'::regclass);


--
-- Data for Name: session_speakers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY session_speakers (session_id, speaker_name) FROM stdin;
8716	Jeff Gothelf
8736	Jennitta Andrea
8739	Jonathan Rasmusson
8741	David Dalka
8745	Leah Buley
8747	Patrick Kua
8750	Willem Larsen
8751	Skip Angel
8752	Max Guernsey
8760	Bob Galen
8764	Yi Lv
8765	Yi Lv
8773	Jonathan Rasmusson
8774	Abby Fichtner
8780	Jim  Highsmith
8782	Karl Scotland
8785	Ahmed Sidky
8785	Greg Smith
8797	Lisa Crispin
8797	Janet Gregory
8798	Joe Fecarotta
8800	Samantha Laing
8801	Craig Smith
8801	Adrian Smith
8808	Karl Scotland
8810	Michael DePaoli
8821	Leeann Berner
8823	David Chilcott
8831	Paul Dolman-Darrall
8832	Karen Greaves
8838	Jenni Jepsen
8840	Karen Greaves
8845	Roger Brown
8845	Mark Levison
8848	Mary Poppendieck
8849	Bas Vodde
8854	Pollyanna Pixton
8855	Richard Lawrence
8857	Carlton  Nettleton
8858	Gil Broza
8858	Luiz Claudio Parzianello
8859	Carlton  Nettleton
8860	Jonny LeRoy
8860	Matt Simons
8867	George Dinwiddie
8873	Ravindar Gujral
8873	D. André Dhondt
8876	Carsten Jakobsen
8876	Mary Poppendieck
8877	Thushara Wijewardena
8881	Carsten Jakobsen
8881	Tom Poppendieck
8883	Venkat Subramaniam
8887	Portia Tung
8887	Jenni Jepsen
8888	Pete Behrens
8890	John Maxwell
8900	Michael Kaiser
8900	Guy Royse
8901	Aaron Sanders
8902	Pat Maddox
8902	Elizabeth Keogh
8912	Craig Smith
8912	Greg Smith
8917	Howard Deiner
8918	Sanjiv Augustine
8918	arlen bankston
8920	Dan LeFebvre
8921	Israel Gat
8923	Markku Åhman
8923	Timo Punkka
8924	Israel Gat
8925	Emmanuel Gaillot
8925	Jonathan Perret
8933	Ted Layher
8933	Kealy Opelt
8939	Tom Perry
8945	Jason Little
8950	Mike Cottmeyer
8950	Dennis Stevens
8954	Tim McCoy
8955	Mike Cottmeyer
8967	Chris Sims
8968	Amr Noaman
8968	Mohamed Amr
8969	Dean Leffingwell
8970	Julien Mazloum
8972	Jim Ungar
8972	Todd Zaki Warfel
8973	Adam Light
8975	Ken Power
8976	Johanna Rothman
8976	William Rowden
8977	Satoshi Kuroiwa
8977	Kazumasa Ebata
8985	Ken Clyne
8985	Julie Chickering
8989	Simon Bennett
8991	Ken Clyne
8991	Eric Willeke
8994	Mike Russell
9001	Brian Sobus
9008	Jason Fair
9011	Tom Perry
9021	Gary Bernhardt
9021	Jeremy Lightsmith
9025	Karl Scotland
9025	Eric Willeke
9029	Patrick Debois
9029	Julian Simpson
9033	Timo Punkka
9038	Amr Elssamadisy
9042	David Bland
9047	Lyssa Adkins
9047	Michael Spayd
9048	Elizabeth Keogh
9048	Katherine Kirk
9051	Sonya Lowry
9051	Lars Skaar
9052	Doug Bradbury
9056	Lisa Ho
9056	Tracy Beeson
9066	Agustín Villena
9066	Philippe Camacho
9068	Judy Wankerl
9074	Julian Simpson
9077	Gerry Kirk
9082	Eric Sink
9083	Ainsley Nies
9083	Diana Larsen
9088	Mary Gorman
9088	Ellen Gottesdiener
9089	Ralph Miarka
9089	Marc Bless
9091	Gerry Kirk
9095	Lyssa Adkins
9104	Christian Vindinge Rasmussen
9104	Cathrine Lippert
9108	Mary Gorman
9111	Michele Sliger
9112	Perry Reid
9117	Martin Heider
9117	Bernd Schiffer
9128	Ellen Gottesdiener
9128	Janet Gregory
9140	Christopher Avery
9140	Ashley Johnson
9143	Carol Morton
9143	Clement "James" Goebel
9167	Angela Druckman
9167	Jimi Fosdick
9170	Alistair McKinnell
9172	Bob Payne
9172	Michael Kaiser
9173	Ronen Rubinfeld
9173	Mik Kersten
9176	Dan Mezick
9178	Michael Sahota
9182	Jean Tabaka
9185	Marc Bless
9185	Olaf Lewitz
9186	Kenny Rubin
9192	David Hussman
9197	Lars Skaar
9207	David Hussman
9207	Tim McCoy
9210	Simon Orrell
9210	Jaron Lambert
9212	Damon Poole
9213	Declan Whelan
9213	Bryan Beecham
9215	neil johnson
9219	Jean Tabaka
9219	Julie Chickering
9228	Val Scott
9228	William Rowden
9231	Jeremy Lightsmith
9238	Michael Elbaz
9241	William Krebs
9265	Jim McCarthy
9269	Alan Shalloway
9271	John Haniotis
9314	Scott Dunn
9316	Scott Dunn
9328	Steven "Doc" List
9347	Jon Innes
9454	Matt Block
9504	Ian Ratner
9504	Jack Harvey
9544	Steve Ropa
9544	Joel Tosi
9574	Robert Martin
9604	Marian Willeke
9615	Shane Hastie
9615	Steve Adolph
9655	Robert Martin
9701	Don McGreal
9764	Keith Nottonson
9906	Michael McCullough
9906	Don McGreal
9925	Jon Stahl
9964	Tsuyoshi Ushio
9964	Emerson Mills
10005	Michael Keeling
10005	Mike Velichansky
10030	Scott Ambler
10113	James Grenning
10150	Bas Vodde
10150	James Grenning
10201	Eewei Chen
10202	Charles Suscheck
10580	Dean Wampler
10596	Elisabeth Hendrickson
10636	Nick Horney
10636	Jim  Highsmith
10686	Nancy Van Schooenderwoert
10782	Joseph Wilk
10877	Francisco Trindade
10877	Patrick Kua
10905	Micah Martin
10905	Colin Jones
10908	Brian Marick
10908	Michael Feathers
10914	Arlo Belshee
10915	Micah Martin
10918	Hugh Beyer
10932	Ryan Polk
10951	Angela Harms
10957	Dale Emery
10959	Arlo Belshee
10959	James Shore
11028	Mike Prior
11031	Cory James Hohs
11031	Elena M Yatzeck
11037	Lynn Langit
11037	Llewellyn Falco
11055	Kathleen  Rilliet
11055	Hubert Smits
11062	Dale Emery
11074	Chet Hendrickson
11074	Ron Jeffries
11103	Lynn Cowan
11104	Jez Humble
11105	Jez Humble
11108	Daniel Brolund
11110	Denny de Waard
11110	Jeff Sutherland
11121	Stephen Denning
11122	Stephen Denning
11136	Sami Honkonen
11136	Arto Eskelinen
11137	Charles Roman
11137	Sanjiv Augustine
11140	Tim Ottinger
11141	Nafis Ahmad
11141	Jeff Sutherland
11142	Bill Wake
11144	Patti Mandarino
11146	Esther Derby
11147	Esther Derby
11152	Bill Wake
11165	Michael Spayd
11166	Leslie Ekas
11166	Scott Will
11176	Dave Nicolette
11210	Andrea Provaglio
11212	Michael Hill
11215	Xavier Quesada Allue
11219	Ali Zewail
11254	George Schlitz
11254	Sean Buck
11266	Pradyumn Sharma
11270	Chris OConnor
11272	Harold Shinsato
11272	Chris Sims
11304	Don Gray
11305	Nanette Brown
11305	Robert Nord
11309	Zhon Johansen
11321	Greg Williams
11326	Derek  Neighbors
11327	Darius Kumana
11327	Jeremy Sutherland
11343	Belkis Vasquez
11344	Meghann Drury
11344	Ken Power
11350	Catherine Clark
11352	Mauricio Aniche
11352	Guilherme Silveira
11369	Steve Andrews
11370	Raj Mudhar
11376	Allison Corbett
11379	Jeff Langr
11382	Richard Cheng
11391	Tim Ottinger
11393	Jeff Langr
11431	D. André Dhondt
11431	Ravindar Gujral
11432	Ken Power
11436	Ken Power
11440	Gourav Tiwari
11440	Zainab Alikhan
11447	Michael Feathers
11449	David Bulkin
11449	Barninder Khurana
11452	Michael Feathers
11455	Jason Tanner
11473	Michael  Meissner
11479	James Shore
11482	Mike Suarez
11482	Isel Fernandez Diez
11493	Carol Smith
11494	David Bulkin
11494	Bob Payne
11502	Derek W. Wade
11517	Jason Dean
11536	Jeff Patton
11537	Clement "James" Goebel
12633	Christian Hassa
12637	candi rai
12637	Marc-Elian Begin
12639	Andrew Hunt
12642	Alan Padula
12643	Nils Brede Moe
12643	Torgeir Dingsøyr
12644	Nils Brede Moe
12644	Torgeir Dingsøyr
12646	Børge Haugset
12646	Geir Kjetil Hanssen
12647	Steve Adolph
12647	Philippe Kruchten
12648	Judith Brown
12648	Gitte Lindgaard and Robert Biddle
12649	Tiago Silva
12649	Angela Martin
12650	Laura Bocock
12650	Angela Martin
12652	Mia Horrigan
12653	Mali Senapathi
12653	Ananth Srinivasan
12655	xiaofeng wang
12656	Meghann Drury
12656	Kieran Conboy and Ken Power
12657	B Veeresh Thummadi
12657	Omri Shiv and Kalle Lyytinen
12659	Gayane Azizyan
12659	Miganoush Magarian and  Mira Kajko-Mattsson
12661	Theodore Hellmann
12661	Frank Maurer
12662	Claudia Melo
12662	Daniela S. Cruzes, Fabio Kon and Reidar Conradi
12665	Lene Pries-Heje
12665	Jan Pries-Heje
12666	Mia Horrigan
12692	Barbara Fredrickson
12693	Kevlin Henney
12694	Linda Rising
12706	Edwin Wong
12709	Drew Jemilo
12711	Bill Gaiennie
12712	Brad Swanson
12715	Dean Wampler
12715	Venkat Subramaniam
12716	Anders Ramsay
12718	Patrick Phillips
1	Kuryan Thomas
1	Arlen Bankston
2	James Grenning
3	Martin Fowler
4	Pramod Sadalage
4	Peter Schuh
5	Joshua Kerievsky and Diana Larsen
6	Paul Hodgetts
7	Chet Hendrickson
7	Ann Anderson
7	Ron Jeffries
8	Bret Pettichord and Brian Marick
9	Kuryan Thomas
9	Arlen Bankston
10	James Grenning
11	Martin Fowler
12	Pramod Sadalage
12	Peter Schuh
13	Joshua Kerievsky and Diana Larsen
14	Paul Hodgetts
15	Chet Hendrickson
15	Ann Anderson
15	Ron Jeffries
16	Bret Pettichord and Brian Marick
17	Bill Wake
18	Bill Wake
19	Bill Wake
20	Bill Wake
21	Bill Wake
22	Kuryan Thomas
22	Arlen Bankston
23	James Grenning
24	Lowell Lindstrom
25	Ken Schwaber
26	William Wake and Ron Jeffries
27	Michael Hill
28	Laurie Williams
28	Robert Kessler
29	Holger Breitling and Martin Lippert
30	Bret Pettichord and Brian Marick
31	Kuryan Thomas
31	Arlen Bankston
32	James Grenning
33	Lowell Lindstrom
34	Ken Schwaber
35	William Wake and Ron Jeffries
36	Michael Hill
37	Laurie Williams
37	Robert Kessler
38	Holger Breitling and Martin Lippert
39	Bret Pettichord and Brian Marick
40	BARRY BOEHM
41	Watts S. Humphrey
42	BARRY BOEHM
43	Alistair Cockburn
44	Dave West
45	Richard P. Gabriel
46	J. Frenando Naveda
47	Daniel Steinberg
48	Tom Kubit
49	Alan Airth
50	Alistair Cockburn
51	Gary Pollice
52	Granville Miller
53	Ken Schwaber -- Scott Ambler
54	Hakan Erdogmus
55	Ward Cunningham
56	Alistair Cockburn
57	Dave West
58	Richard P. Gabriel
59	J. Frenando Naveda
60	Daniel Steinberg
61	Tom Kubit
62	Alan Airth
63	Alistair Cockburn
64	Gary Pollice
65	Granville Miller
66	Ken Schwaber -- Scott Ambler
67	Hakan Erdogmus
68	Ward Cunningham
69	Scott Ambler
70	Brian Marick
71	Fernando Naveda
72	Bill Kleb
73	James Caristi
74	Randy Miller
75	Ken Auer
76	Steven Fraser and Rachel Reinitz
77	Zhon Johansen
78	Dave Thomas
79	Barry Boehm
80	Kuryan Thomas
80	Arlen Bankston
81	Ken Schwaber
82	William Wake and Ron Jeffries
83	Michael Hill
84	Laurie Williams
84	Robert Kessler
85	Holger Breitling and Martin Lippert
86	John Goodsen
87	Lisa Crispin
87	Tip House
88	Jutta Eckstein
89	Richard Hightower
90	James Grenning
91	Martin Fowler
92	Pramod Sadalage
92	Peter Schuh
93	Alistair Cockburn
94	Dave West
95	Richard P. Gabriel
96	J. Frenando Naveda
97	Daniel Steinberg
98	Tom Kubit
99	Alan Airth
100	Alistair Cockburn
101	Gary Pollice
102	Granville Miller
103	Ken Schwaber -- Scott Ambler
104	Hakan Erdogmus
105	Ward Cunningham
106	Brian Marick
107	Fernando Naveda
108	Bill Kleb
109	James Caristi
110	Randy Miller
111	Ken Auer
112	Steven Fraser and Rachel Reinitz
113	Zhon Johansen
114	Dave Thomas
115	Barry Boehm
116	Kuryan Thomas
116	Arlen Bankston
117	Ken Schwaber
118	William Wake and Ron Jeffries
119	Laurie Williams
119	Robert Kessler
120	Holger Breitling and Martin Lippert
121	John Goodsen
122	Lisa Crispin
122	Tip House
123	Jutta Eckstein
124	Richard Hightower
125	James Grenning
126	Martin Fowler
127	Pramod Sadalage
127	Peter Schuh
128	Joshua Kerievsky and Diana Larsen
129	Paul Hodgetts
130	Chet Hendrickson
130	Ann Anderson
130	Ron Jeffries
131	Lowell Lindstrom
132	Bret Pettichord and Brian Marick
133	David Stotts and Laurie Williams
134	Grigori Melnik
134	Adam Geras
134	Laurie Williams
135	Scott Henninger and Frank Maurer
136	Watts S. Humphrey
137	Duff O'Melia
138	Duff O'Melia
139	Scott Ambler
140	Michael Hill
\.


--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY sessions (id, title, description, stage, type, year) FROM stdin;
8716	Lean UX: Getting out of the deliverables business	Traditionally UX Design has been a deliverables practice. Wireframes, sitemaps, etc defined the practice of UX Design (IA, IxD, UI Design etc). While this work has helped define what a UX Designer does and their value, it has also put designers in the deliverables business   measured & compensated for the quality of their deliverables (instead of the success of the experiences they design).\\n\\nEnter Lean UX - the practice of bringing the experience to light faster, with less emphasis on deliverables and greater focus on the actual experience being designed.\\n	User Experience & Interaction Design	Talk	2011
8736	Critical Success Factors for Acceptance Test Driven Dev't	A good analyst knows what questions to ask to bring clarity to a murky subject. When they hear about Acceptance Test Driven Development (ATDD), a core practice on Agile projects, they ask: "Can examples capture functional requirements?, Where do user stories come from?, and Will my role become extinct? . When Jennitta Andrea worked on her first Agile project in 2000, she asked all of these questions and more. As a hands-on practitioner and keen observer of teams and processes, she has discovered success comes from knowing how ATDD is part of an eco-system of roles, practices, and tools.   	Agile Boot Camp	Talk	2011
8739	Agile In a Nutshell	If you ve been doing Waterfall delivery most of your career agile can be down right scary: changing requirements, adaptive planning, iterative development.  These are all intimidating things for managers and organizations used to doing things in discrete phases one stage at a time.  In this introductory talk, we will look at agile in simple terms explaining:\\n\\n- what agile is\\n- what working on an agile project is like\\n- some of it's myths\\n- which agile method is right for you, and\\n- three steps you can take to becoming more agile today.	Agile Boot Camp	Talk	2011
8741	The Potential For Agile Digital Marketing Business Strategy	David Dalka worked at BlackRock (BLK) during the 80 to 800 person hyper growth phase redefining data structures, agile financial analysis and reducing decision making cycle times. After 9/11 events, David started studying businesses that were failing after not adopting emerging best practices using digital, search marketing and emerging media techniques. He advocates that agile BlackRock style techniques be applied to marketing processes to optimize business performance. David will discuss emerging digital marketing business strategy. Senior business leaders are encouraged to attend!	Business & Project Management	Demonstration	2011
8745	Building a Practice as a UX Team of One	UX teams of one have unique challenges. Fewer resources. Creative isolation. Organizational ignorance. Sometimes even hostility. This workshop will explore the real life agile team situations that solo UX practitioners work in, and show what you can do about them.\\n\\nThe goal of this workshop is to give every attendee the tools to be relevant and effective by creating a personalized plan for their UX practice. Your plan will include the methods, soft skills, and strategies that will help you build support for UX and do your best work in an agile environment.	User Experience & Interaction Design	Tutorial	2011
8747	Tightening the Feedback Loop	Agile methods bring individuals working together in a more intimate environment than other methods. It requires different skills to make it work. Giving and receiving effective feedback is a powerful tool  to improve collaboration in teams and organisations yet our organisations teach us little about this important topic. We are surrounded by poor examples all the time.We'll explore some simple rules for giving and receiving feedback, observe how most people give ineffective feedback to others and illustrate examples of applying the rules to make it more effective.	Collaboration Culture & Teams	Talk	2011
8750	Fluency over Proficiency: Accelerating Agile Learning and "Hunting Fluency"	While we value proficient knowledge of Agile practices, we value more the fluent, skillful expression of these practices and principles in daily use. \\n\\nExperience team and individual learning in this interactive session, via a toolkit of accelerated learning and teaching techniques. Used together, these techniques comprise a coaching and peer-to-peer mentoring language that drives ever-tighter cycles of improvement. \\n\\nCome to this experiential workshop for immersion in accelerated learning using the Language Hunting fluency game system.\\n	Hands-on Learning	Workshop	2011
8751	What are we supposed to do with these managers NOW?	Your organization has begun the journey of adopting agile. Most of the practices learned focus on the team. However, how do those teams become self-organized? Isn t some kind of leadership useful to help them along? Since teams represent all functional groups, where does that leave manager? Do we need them any more? In this session, we will explore areas where management can be valuable such as team organization, team space, mentorship and process optimization. If you are a manager, there is a place in an Agile organization if you are willing to look at responsibilities in a different way.	Leadership	Talk	2011
8752	Goad Testing: Guaranteeing that Tests Make Distinctions	Test Driven Development has reached maturity.  Goad Testing takes you a level deeper, examining what tests really are and using the outcome of that exercise to derive new ways of keeping software - both production and test - healthy, flexible, and on-specification.\\n\\nMaking distinctions is a critical aspect of a test: It allows a test to serve as an executable specification.  Sometimes this ability is lost in the course of maintenance.  Goad testing is a way to prevent that from happening without introducing significant extra work or complexity.	New Horizons & New Voices	Demonstration	2011
8760	SHU-HA-RI Applied to Agile Leadership Driving Your Agile Evolution	Far too many agile instances either fail or are challenged because leadership team members don t sufficiently understand the fundamentals of agility nor how to map them towards effective execution. In this presentation, we ll explore a basic assessment model for determining Agile Leadership Maturity as a means of assessing and improving their understanding and your overall effectiveness. Not as a means of stereotyping leadership, but simply as a tool for understanding the leadership maturity landscape within your organization. Then we'll develop context-based strategies for improvement.	Adoption & Transformation	Workshop	2011
122	TEST DRIVE FOR TESTERS: WHAT, WHEN, AND HOW TESTERS DO FOR XP TEAMS	Summary\nThis tutorial shows testers, or anyone wearing the tester hat on an XP team, how testers contribute to the project, including what testers should do, when they should do it, and how they should do it.   You’ll do exercises that show you how to either work on an XP team as a tester yourself, or work productively with a tester on your team.\n\nAudience\nXP newbies and veterans, testers, programmers, coaches, customers, analysts and managers.  Anyone who might be expected to help with some aspect of acceptance testing on an XP team, and anyone who wants to help their XP team maintain a focus on quality.\n\nDuration: Half-day\n\nDescription\nWe’ll take a trip through an iteration of an XP project step by step and show what goals to reach for, which activities to engage in, and some helpful techniques for testers to use.  The exercises are built around an XP project to develop a simple web-based tracking application.  \n\nTutorial Outline\nWhat testers do during release planning and story writing:\nHow to identify hidden, questionable and incorrect assumptions\nHow to define acceptance tests to make assumptions explicit\nHow to accurately estimate time for acceptance test tasks\nHow to enable accurate story estimates\nHow to ask questions to identify potential problems \nWhat testers do during iteration planning\nHow to help team think of all tasks needed to complete a story, including those relating to infrastructure, packaging, environment, functional and acceptance testing\nHow to promote understanding between the customers and the development team\nHow to break out and accurately estimate tasks related to acceptance testing\nWhat testers do during the actual iteration\nHow your team can define detailed, but not too detailed, and effective acceptance tests, accounting for unusual and external events as appropriate\nHow to document tests so they are easily understood and changed by the customer\nHow to design and code effective and maintainable automated tests \n\n\nPresenter's Resume\n\nLisa Crispin has worked as a tester on Extreme Programming teams for a one and a half years.  Her article “Extreme Rules of the Road:  How an XP Tester can Steer a Project Toward Success” appeared in the July 2000 issue of STQE Magazine.  Her presentation “The Need for Speed:  Automating Acceptance Tests in an Extreme Programming Environment” won Best Presentation at Quality Week Europe in 2000.  Her papers “Testing in the Fast Lane:  Acceptance Test Automation in an Extreme Programming Environment” and “Is Quality Negotiable?” will be published in a collection called Extreme Programming Perspectives from Addison-Wesley.  She is co-writing a book Testing for Extreme Programming which will be published by Addison-Wesley in October 2002.  Her presentations and seminars on testing for Extreme Programming in 2001 included “XP Days” in Zurich, Switzerland, XP Universe in Raleigh, and STAR West; in 2002, the Software Test Automation Conference in San Jose and the Rocky Mountain Software Symposium in Denver.  Lisa can be contacted at lisa.crispin@att.net\n\nTip House is Chief Systems Analyst at the OCLC Online Computer Library\nCenter Inc., a non-profit organization dedicated to furthering access to\nworld's information, where he develops and supports test automation tools\nand document management systems for the Web. His main interest is software\ndevelopment, also includes a long-standing focus on software testing,\nsoftware measurement, and quality assurance. He has published numerous\npapers on these subject at development, measurement and testing conferences,\nincluding XP2001 in Sardinia, Italy. He co-author of the book Testing for\nExtreme Programming which will be published by Addison-Wesley in October\n2002, and his articles appear online in the April issue of Cepis Upgrade\nhttp://www.upgrade-cepis.org and at http://xptester.org. Tip has Certified\nQuality Analyst, Certified Software Quality Engineer, and Lead Ticket\nAuditor certifications, and managed the independent test function at OCLC\nduring their three year successful effort to become registered to the\nISO9000 standards. Tip can be reached at tip_house@oclc.org.\nSupporting Materials\n\nhttp://www.xptester.org has materials relating to the subject of this tutorial.  Our chapter from Extreme Programming Perspectives gives an overview of the test framework that we use; it’s available at http://www.xptester.org:4006/_ZABLE[0]_/tab/7/fastlaneSgl.doc.  \nLisa’s article for STQE Magazine and other related papers are available at http://groups.yahoo.com/group/agile-testing/files/.	Main conference	Tutorial	2002
8764	Manager as Scrum Master?	Self-managing is very important aspect in Agile change, in which manager transforms from command & control to leading and coaching. The experience report will share you a 3-year journey from one large-scale organizational Agile adoption, with the focus on the evolution of Scrum Master and manager role and the way they work together. It describes how the change regarding self-managing was introduced and adapted, then how they have tried to sustain the change by creating consistency between the values and principles behind Agile organization and the management capability to practice them.\\n	Insights - Experience Reports	Experience report	2011
8765	Apply systems thinking in large-scale Scrum transformation	In large-scale Scrum transformation, organizations experience gridlock after the initial success. System thinking is one important thinking tool that will help you see the dynamic view of the system and get over the challenges. Through the workshop, you will learn to recognize common system archetypes, so that you understand why you are getting certain undesirable effects; as well as common strategies to leverage in the situation, so that you direct your effort on the right place.	Adoption & Transformation	Workshop	2011
8773	The surprising science behind agile leadership	Not everyone is a fan of the self directed self organizing team. It flies in the face of traditional project management, and often conflicts with the traditional organization model. The benefits of self directed teams however are too big to ignore and now we have scientific proof as to why. \\n\\nIn this new talk on agile leadership, I explain:\\n\\n- how and why agile leadership works, \\n- the science behind why so many choose to work this way, and \\n- the impact it s going to have on you and your organization.	Leadership	Talk	2011
8774	Lean Startup: How Development Looks Different When You're Changing the World	How does development look different when you're creating things that no one has ever created before? Lean Startup is about creating from a BIG VISION, where we want to change the world & do something really significant. It combines Agile Development with _Customer_ Development so we can be disciplined about how we create our startups. Learning (rather than working software) becomes our most important measure of progress and agile practices are pushed to the next level. Come get a glimpse of the next level of agile and discover how development looks different when you're changing the world.	New Horizons & New Voices	Talk	2011
8780	Adaptive Leadership: Accelerating Organizational Agility	Leading agile organizations requires Adaptive Leadership that begins with understanding business agility and how practices like continuous delivery and a mindset of sustainable agility combine to create highly responsive IT organizations. Adaptive Leadership is two dimensional: Being and Doing Agile. Adaptive leaders embrace specific principles and practices, such as "doing" four key performance levers:  Do Less,   Speed-to-Value,   Quality,  and  Engage , and  Being  agile "adaptive", "riders of paradox", "exploring", and "facilitating." \\n\\n	Enterprise Agile	Tutorial	2011
8782	Dr W. Edwards Deming's famous Red Bead Experiment - For Software Teams	Participate in Dr W. Edwards Deming's famous Red Bead Experiment. This classic learning tool helps illustrate the impact that a system, and traditional management approaches, can have on individuals who work within an organisation. I will also relate this experiment to approaches to software development and the management of software development teams. \\n\\nThe experiment introduces many of Deming's ideas about management, including his 14 Points for Management. It also introduces the Statistical Process Control Chart.\\n\\nAfter the experiment there will be a discussion of the issues addressed. 	Open Jam	Demonstration	2011
8785	Becoming Agile in an Imperfect World	Taking a big bang approach to Agile is not a viable option for most organizations. Most successful adoptions of Agile are tailored to the strengths and limitations of the organization. This workshop will show you how to design a tailored roadmap to becoming Agile, despite the constraints around you. The roadmap includes 3 phases; Getting Ready, Piloting and Spreading Agile. If you re just starting your agile transition or in a transition stage, this workshop will equip you with practical techniques and strategies to move from your existing process without starting from scratch.\\n\\n	Adoption & Transformation	Tutorial	2011
8797	Hooray, We're Agile Testers! What's Next? Advanced Topics in Agile Testing	Your team successfully adopted Agile, you have traction on practices such as CI, TDD, maybe ATDD. Still, you see lots of room for improvement in testing. Do you sometimes miss or misunderstand customer needs? Is it sometimes hard to complete all testing activities each iteration? In this interactive tutorial, you'll practice ways to better understand and capture customer needs; collaborate more effectively and enjoyably with developers and other team members;  improve continuous integration and delivery; manage technical debt; plan and estimate in ways that ensure testing \\"keeps up\\". \\n\\n	Testing & Quality Assurance	Tutorial	2011
8798	Coaching at the Enterprise Level - Introducing the Agile Cafe	Agile coaches are leaders of change in an organization and we leverage things like training, direct coaching expertise on Agile, and facilitating peer-to-peer networks to help with this change.   There is a gap in the current literature on how to create such networks.  This talk will cover the Agile Cafe, my version of the World Cafe, in both theory & practice.   The World Cafe is a technique to gather groups of people together, ask them important questions, and draw out their knowledge.  Outcomes are shared knowledge, community creation, and visibility for Agile at the enterprise level.  \\n\\n	Coaching & Mentoring	Talk	2011
8800	Learning From Failure Overpowers Fear	You ve started with Agile, and you re doing ok, some lows, some deeper insights. During an agile transition most people come face to face with something they fear.  It may be a concept, thought, activity or belief that is challenged.\\nI m going to tell you about some fears and failures that teams, Product Owners and Scrum Masters encounter. Along the way you will hear about my agile transition journey and how embracing fear and failure has given me this overwhelming feeling of being free and full of energy!\\n\\n\\n\\n	Adoption & Transformation	Talk	2011
8801	The Speed To Cool: Agile Testing And Building Quality In	Ensuring that the approach to testing and quality is understood and appropriately valued in an agile world can be a struggle for many organisations, especially when resources are limited and our customers are expecting business value in a timely manner. In this session we will define what quality means and share a number of tools for measuring it, discuss approaches to improving the skills, empowerment and role of testing in the organisation and share why testing is the coolest role on the team and why it is everyones responsibility.	Testing & Quality Assurance	Talk	2011
8808	Designing a Kanban System for the Enterprise	Enterprise software and systems development typically involves complex mixes of teams, technologies, skills, architectures and organisational structures which must interact for the business to be successful. This tutorial will introduce an approach which designs the Enterprise as a Kanban System. The model is based on the central theme of Systems Thinking, the purpose of achieving Pull, Value and Capability, and aspects of Workflow, Visualisation, Work In Process, Cadence and Learning. The model is not a complete solution, but suggests key areas to consider when designing the Agile Enterprise.	Enterprise Agile	Tutorial	2011
8810	WIP and Kaizen:  Key Tools for Enabling Continuous Improvement 	Have you established an Agile or Lean software development approach including conducting retrospectives but you just don't seem to be able experience meaningful innovation and improvement in your process?  This talk will explore some of the reasons why this could be and provides a pragmatic approach to helping ensure your process can support innovation and continuous improvement\\n\\n\\n	Adoption & Transformation	Talk	2011
8821	Beyond Software: Adopting Agile Outside of Development	The challenges and benefits of adopting agile in software development are well known. Conceptually it makes a hell of a lot of sense for departments outside of dev to embrace agile as well. However, as organizations extend agile into sales, marketing, professional services and hr they need to leverage the experience of their software teams while understanding that not every agile practice translates exactly. This session will focus on how to help build an agile sales/marketing/professional services/hr team when no one has ever been on an agile sales/marketing/professional services/hr team.	Business & Project Management	Workshop	2011
8823	An Introduction to Non-Violent Communication (NVC) for Agile Coaches	NVC can dramatically improve our relationships by helping us focus our attention on\\n1) Empathic understanding of others without compromising our own values, and\\n2) Expressing our real feelings and needs openly and honestly, yet without blame or criticism.\\n\\nNVC delineates four components of communication:\\n     1) Observations free of evaluations;\\n     2) Feelings straight from the heart;\\n     3) Needs, values and longings; and\\n     4) Requests expressed clearly in positive action language.\\n\\nThis session will show how NVC can be an important addition to your Agile coaching tool kit.	Coaching & Mentoring	Workshop	2011
8831	Agile Decisions	Making the right choices is crucial. Decisions have generally been viewed as the prerogative of individuals - usually senior executive. The process employed, the information used, the logic relied on, have been left up to them, in something of a black box. Information goes in, decisions come out - and who knows what happens in between. Unlike other business processes, decision making has been rarely the focus of systemic thinking and analysis. This has left a significant opportunity to improve decision making as we would any other process through visibility, feedback and value.	Business & Project Management	Tutorial	2011
8832	Taming the customer support queue	In Aug 2010 we reduced the size of our development team. We needed to handle customer support issues and new development with the 3 remaining teams. We had over 600 open defects and the list was growing daily. On top of that our first clients were going live. Clearly some radical change was needed. We implemented Kanban. \\n\\nThe result? In Dec 2010 we had no open severity 1 issues. Our queue was down to 54 issues. SLAs are met in most cases, and our resolution rate exceeds our incoming rate.\\n\\nI d like to share our story, and inspire you to tame your support queue too!	Insights - Experience Reports	Experience report	2011
8838	Flirting With Your Customers	Flirting is about connecting. Some universities require their IT engineers take a flirting class not to attract a partner, but to learn how to interact better in the workplace. \\n\\nWe ve translated flirting techniques for use in a business setting. Discover how the  8 flirting steps  can help you  create stronger connections and greater understanding of your customers so that you work together better to deliver business value.  Flirting With Your Customers  creates the connections that can make a significant difference in your project s success.	Working with Customers	Workshop	2011
8840	Agile Management: creating a culture to help your team succeed	I'm the software development manager for a product company with 3 agile teams. My job is to foster the environment or culture that helps us be the best team we can be. In this talk I'll share a little about how I've done this, where I got my ideas, and how this works compared to other environments I've worked in which are.... well let's just say different :)\\n\\nI recently blogged about this: http://scrumcoaching.wordpress.com/2010/12/17/a-development-managers-strategy/	Agile Show & Tell - Lightning Talks	Talk	2011
8845	Creativity for Agile Teams	This is a refinement of our presentation at Agile2009. Creativity can manifest in several ways including creation of something new, refinement of something that exists and problem solving. How do we support, enable and enhance the creative abilities of Agile teams? There are many ways to shape the work environment for greater creativity. We will describe how creativity happens and can be enhanced by providing a safe, nurturing environment, enhancing group interactions, pacing activities that utilize different sensory modes and trusting in the power of subconscious integration.\\n	Collaboration Culture & Teams	Talk	2011
8848	Design Thinking	What does the US Military have in common with Apple? The both deal with increasing complexity by emphasizing design thinking. At Apple, design thinking starts by deciding, first of all, what NOT to do. In the military, design thinking precedes planning, and takes leaders through a series of steps that reframe their thinking about the environment they are dealing with. When you have competitors like Apple - or when your decisions are a matter of life or death - then you need to move beyond working software, beyond backlogs, even beyond agile - and focus like a laser on customers.	Working with Customers	Talk	2011
8849	Refactoring and Code Smells - An example of refactoring legacy code	Recognizing code smells and cleaning the code up by refactoring are essential skills of an agile developer. This session explains why these skills are so essential, introduces common code smells and shows refactorings that clean up the code. This will be demonstrated in the context of a piece of open-source legacy code (an accounting program in Java). I'll introduce code smells by identifying them in this piece of code, then apply refactorings to remove them. I'll keep identifying more code smells and refactor them until there is nearly nothing left of the original code.	Agile Boot Camp	Demonstration	2011
8854	Collaborating with Non-Collaborators	We understand the vital importance of collaboration among team members. However, how can we deal with non-collaborators people who won t work with us? Although we may not be able to change them, we may be able to work with them. This session describes how to identify non-collaborator and examine the system within which the non-collaborators work: their success factors, motivations and measurements. Using a Trust and Ownership Model, we considers tools and techniques to cope with each trait. Deal with non-collaborators by building a strategy that empowers you to collaborate no matter what.	Leadership	Tutorial	2011
8855	Teach Your Cucumber Scenarios to Speak "Business"	Cucumber can be a powerful tool to build a common, or ubiquitous, language between product people, developers, and testers. A common language leads to common understanding and, ultimately, more valuable software. Unfortunately, too many teams write Cucumber scenarios that use technical language and miss out on this benefit. In this interactive session, you'll learn how to use Cucumber to grow a ubiquitous language and how to refactor your existing scenarios to speak "business." (While the focus is on Cucumber, users of other tools will surely see ways to apply the lessons to their own tools.)	Testing & Quality Assurance	Tutorial	2011
8857	Removing Impediments with Drawings	Pictures convey ideas more clearly and have a greater impact than a simple conversation.  The ability to communicate, and perhaps sell, your ideas at a whiteboard is an essential skill for anyone on an Agile team.  In this hands-on session based on Dan Roam's book "The Back of the Napkin", we will learn the six types of diagrams used in business and how to select the right picture for your problem.  All you need for this session is an issue, your imagination and the ability to draw a circle, square, arrow and a stick figure.  Come on - give this a try.  It will be fun.	Coaching & Mentoring	Tutorial	2011
8858	Refactoring Conversation Smells	As an Agile practitioner, you probably communicate with many different people every day. Are all your conversations effective? Or do you sometimes find yourself or the other person explaining and re-explaining, arguing a position, fighting over  semantics , or cornered?\\n\\nThese conversations go awry in consistent ways, which arise from people's innate methods of processing and cataloguing information. Come to this tutorial to learn these "conversation smells" and systematic ways -- a simple set of patterns and questions -- to tackle them and get your conversations unstuck.	Collaboration Culture & Teams	Tutorial	2011
8859	Powerful Questions	Picking the right question or reframing an issue can introduce a profound shift in the conversation. In this hands-on workshop, we will discuss how to create your own powerful questions and practice this skill. Leave with a practical tool you can use with your Teams today.\\n\\n	Hands-on Learning	Workshop	2011
8860	Creaky Platforms: tackling legacy technology challenges	Yesterday s state-of-the-art system is today s legacy. The advent of SaaS, social, mobile, etc prevents the rapid rollout of new features. Large or small, aligning product or platform with ever-changing business strategy is critical.  \\n\\nLarge or small, it is critical to understand how to align product or platform with an ever-changing business strategy. \\n\\nWe discuss how to balance the cost pressures to use legacy assets with the need to keep up with the market. We also reveal how to remediate legacy systems quickly without investing in a massive and risky 'big-bang' re-platforming.\\n	Enterprise Agile	Talk	2011
8867	Team Swarming--Why and How	Agile teams are often asked to swarm over the work, applying as many people to each item of work as productively possible before starting the next.  Sometimes this magically works, and bystanders confidently describe the team as "gelled." Other times it looks like a train wreck, with people getting in each other s way and on each other s nerves. In the middle we find a continuation of the status quo. What re the advantages of swarming? How can we increase the odds of gaining those advantages? We ll explore the answers from your experience and mine.	Collaboration Culture & Teams	Workshop	2011
8873	Multi-sensory Kanban	NOTE: There is a size limit for 2MB for presentations, so tweet either @adhondt or @ravindar to get the full slide deck.\\n\\nVisual Kanban helps surface process problems--and our Multi-sensory Kanban surfaces even more by helping with soft skills, peer design, and increased collaboration outside the team. See, hear, feel, taste and smell your way to better system throughput with a hybrid of XP-style kanban story boards, Pomodoro-like audible timers, group scrums, and team meals/snacks.	Development Languages Practices & Techniques	Tutorial	2011
8876	Scaling Agile to the Enterprise with Lean	Lean is a journey, and Systematic began that journey five years ago. It started with an executive imperative, was kicked off with extremely successful Scrum pilots, spread to other teams using CMMI principles, then percolated up through middle management as success became obvious. This was certainly not easy! This is a story of a real lean journey taken by a large organization - the triumphs, the pitfalls, the honest results, the expansion as the company grew, the continuing saga of improvement. It's a story of lean theory, the struggle to implement that theory in practice, and the path ahead.	Enterprise Agile	Talk	2011
8877	Do you dare to ask your HR manager to practice KANBAN?	This is a true exercise.  We are a mid size software company in Sri Lanka.  Agile adoption of our development teams made our projects more profitable and sustainable. We got out of the  software factory  concept which is common in offshore business and built a professional software company. \\n But this didn t solve all our problems. With the rapid growth, we started to have a highly pressured situation in HR/operations depts. \\n This session covers how we introduced KANBAN to our HR/Op dept, the success, challenges and the difference I saw when applied them to dev teams.\\n	Insights - Experience Reports	Experience report	2011
8881	IEEE Best Paper - Lean as a Scrum Troubleshooter	Systematic has relentlessly improved how it does Scrum during the past 5 years using the A3 problem solving tool from Lean. This approach is behind  the learning and experience reported in the past 5 years. This talk will take a walk behind the scenes of years of successful experiences and show the management and mechanics driving this learning. The cumulative learning from major improvements are presented, including a small set of measures that for the past 3 years has proven to be very valuable in monitoring project progress while at the same time fostering a Lean mindset in the teams.	Insights - Experience Reports	Experience report	2011
8883	Test Driving and Unit Testing Thread Safety	It came as a shock to me when I tried to convince myself that the multithreaded code I was writing was not unit testable. It's too complex,  non-deterministic to be driven through tests, I told myself. I was so convinced I set out to show TDD does not apply here. But in the end, I proved myself wrong. In this zero-slides presentation, we will use TDD to drive the design of a multithreaded code. Along the way we'll hit some roadblocks, use those to learn some techniques and practices that'll help break the barriers. If you've confronted test driving for thread-safety this session is for you.	Development Languages Practices & Techniques	Talk	2011
8887	The Emperor's New Clothes - Meaningful Interactions in Stressful Situations	See the Emperor in all his glory! Which role will you play? We all interact with different types of characters in our daily lives which may lead to stressful situations. Together, we will learn how to communicate more effectively with others, especially at times of stress, by transforming our behavior from incongruence to congruence. We will learn to recognise incongruence by role-playing the 5 Coping Stances based on the Satir Model, then learn how to begin transforming our behavior from one of incongruence to congruence by thinking about interactions in terms of Self, Other and Context.	Hands-on Learning	Workshop	2011
8888	The Culture of Agility	Agility as a process is well understood today in feedback generating iterations or as a flow. Agility as a structure is becoming better understood through cross-functional teams working collaboratively. However, Agility as a culture has very little exposure - yet culture impacts every attempt at agility.\\n\\nThis session provides a language for organizational culture, its impact on agility, and examples where exposing culture has aided adoption. We explore cultures within single organizations, sub-cultures across boundaries within larger organizations, and cultures bridging a corporate merger.	Collaboration Culture & Teams	Tutorial	2011
8890	Embedded Testing Techniques	Contrary to widespread opinion, you *can* test on the target hardware. There are some challenges to doing so, though. This talk will focus on how I've been doing it since 2004.\\n\\nIn many cases, no modification to the target hardware is needed; in the remaining cases, the necessary modifications are quite minimal, well within the abilities of a programmer who's not afraid of soldering irons (adding one wire, usually).\\n\\nThe heavy-duty modifications will be to your test framework, and will be exclusively software. Example code from actual projects will be used to present them.	Agile for Embedded Systems Development	Talk	2011
8900	Selling the Investment to Pay Down Technical Debt - The Code Christmas Tree	Sharing our experience in making code complexity and unit coverage visible in the hallway adjoining our team room and the conversations that happened around it.  Not only did it help to focus the team on the high debt areas of the application, but its red (bad) and green (good) coloring combined with its high-foot-traffic location enabled executives in this Fortune 500 insurance company to invest in paying down debt as well.	Insights - Experience Reports	Experience report	2011
8901	Ten Tales of Positive Change	These tales relate successful attempts at making improvements. They are described mostly in the order in which they occurred, from my time working in an Agile culture. The tales are about: \\n\\nCreating the Motivation to Pair Program  \\nStaying Focused at Stand-up  \\nKeeping Progress High and Questions Low  \\nReassigning Points to Validate Estimation  \\nAdmitting to the Real Date  \\nDealing With an Overwhelming Amount of Work  \\nGauging the Rate of Progress  \\nFiguring Out How to Construct Teams  \\nFinding Predictability in the Velocity  \\nAllowing for Cross-Functional Teams  \\n	Insights - Experience Reports	Experience report	2011
8902	Deliberate Discovery Workshop	Ignorance is a constraint on many projects. We rarely know everything about our domain, processes, technology, politics, skills, expectations - the list goes on. As we progress we discover unexpected difficulties and find ourselves struggling to overcome them. Yet the unexpected always happens in different areas, no matter how much analysis we do. How much is enough? How can we target our greatest areas of ignorance to learn faster, and how can we keep our options open to cope with unknown unknowns? In this workshop we explore techiques for discovering, and handling, the unexpected.	Hands-on Learning	Workshop	2011
8912	Agile 2.0 - Rebooting A Raccoon In An Imperfect World	On this 10th anniversary of agile, our community is struggling to address the issue of how to take experienced agile practitioners to the next level, while still providing training and tools to support those who are beginning their journey. With the "agile" word getting so overloaded, the challenge is to continually innovate without assigning labels.\\n\\nIn this talk we will discuss how to use the best of traditional, lean and agile methods to suit any team and showcase numerous patterns that demonstrate the best process to use is often a mixture of traditional practices and new innovations.\\n	Adoption & Transformation	Talk	2011
8917	Reverting to Form   How to Make Sure That Agile  Sticks 	Whether the adoption of Agile takes place in a grass-roots  bottom-up  approach or a mandated  top-down  manner, it takes a change in culture, and a willingness to  give it a chance  that is the biggest determinate in making Agile stick in an organization.  In particular, it is the acceptance of using business value as a pivot point that can make an organization realize that Agile is their friend, so long as they are willing to avoid the pratfalls that can drive an organization back to where it started.	Adoption & Transformation	Talk	2011
8918	The Joy of Work:  Managing Performance, Innovation & Organizational Maturity	Do you find your work exciting and fulfilling?  Is your team rewarded for finding better ways to work? While many organizations have adopted Agile approaches at a project level, few have effectively aligned their HR processes with Agile values, or made finding better ways of working a truly rewarding and exciting proposition for their teams. Join us to explore the subject of creating a truly holistic performance management system that not only adheres to Agile principles, but actively promotes individual drive, team innovation and organizational maturity.	New Horizons & New Voices	Workshop	2011
8920	Sustaining Agility after the Coaches Leave	Transitioning to agile is hard. It involves learning new techniques, thinking in a different way, and stepping out of your comfort zone. No wonder so many agile transitions revert back to previous ways over time. A change in management or a loss of the agile champion is often a catalyst for this process. \\n\\nThis talk describes several mechanisms to help counteract these forces, and how to incorporate them into your organization. Presented through examinations of real-life examples, interactive exercises and open discussions, this talk provides guidance on how to create sustainable agility.\\n	Adoption & Transformation	Talk	2011
8921	'Super-Fresh' Code	The confluence of cloud computing, smart mobile devices, social networks and agile software methods transforms the nature of the business. The cloud enables offering everything as a service. Smart mobile devices consume those services and contribute to them in an  always on  mode. Social networks enable expert-sourcing on a per-task basis. When these three trends are combined in the right way with recent advances in Agile methods, the net result is  Super-Fresh  code. Such code serves as the source of competitive advantage for the modern company.\\n\\n	Business & Project Management	Workshop	2011
8923	Embedded TDD cycle - the first 3 years	James Grenning presented the embedded test-driven development (TDD) cycle already in 2004. Whispers on the hallways of conference hotels tell that somebody is actually implementing this idea. However, there are only few documented implementation details available. Schneider Electric s fire security team has been implementing TDD cycle as an integral part of the development process for 3 years. Come to learn from their real-life experience and mistakes in automated testing at different levels: unit testing, acceptance testing using simulation, and in real target hardware.	Agile for Embedded Systems Development	Talk	2011
123	SCALING AGILE PROCESSES: AGILE SOFTWARE DEVELOPMENT IN LARGE PROJECTS	Abstract\nOne saying is that, if you have a hundred people on a\ndevelopment team, get rid of at least eighty of them and\nkeep the top twenty (or less). As a result the chances for\nproject success will raise significantly. But maybe you\ndon’t have even twenty top ones and/or the company just\nhave these hundred people sitting around.\nIt seems like the only places where large projects with huge\nteams seem to really work are projects where everything is\nformalized, the requirements are fixed and, most\nimportantly, they don't change over time. A detailed plan\ncan be set up and every successive action will stupidly\nfollow the plan. Example are defense projects or projects\nwith a similar structure, such as in airlines or nuclear power\nplants.\nWe as software-engineers tend to question software\nengineering in the large not only because most of the agile\nprocesses claim to work only for small teams, also because\nmost of the failed projects are really large ones. (Well,\nmaybe nobody talks about failed small projects.) However,\nthere are more than enough projects that are large in some\nsense. So, the question arises, how to use aspects of agile\nsoftware development in large projects.\nWe don’t want to focus on every aspect of agile processes,\nbut on those who we encountered to be mainly different in\nlarge projects. The differences might be that some things\nhave to be implemented differently, because at a specific\nsize of the project things don’t work out the normal way\nanymore. Other differences are based on problems, which\npop up especially in large teams, or rather which won’t be\nproblems at all in small teams.\nThis tutorial is based on our experience coordinating – so\nfar successfully – a large (currently 160 people) project.\nAlthough we are still in the process of learning we would\nlike to share our experiences about how agile processes can\nserve large projects. And besides – chances are high, that at\nthe time XP Agile Universe 2002 is held, we have made\neven more valuable experiences.\n\nDuration, aims and audience\n\nDuration: Half-day tutorial\n\nAims:\n- Ideas on how to overcome the obstacles of agile\nsoftware development in the large\n- Know what the biggest problems of agile software\ndevelopment in the large are\n- Know how agile software development in the\nlarge could possibly work\nAudience\n- Those who tried to use agile methodologies in\nlarge projects and failed.\n- Those who tried to use agile methodologies in\nlarge projects and succeeded.\n- Those who didn’t try agile methodologies in large\nprojects but would like to do so.\n- Proponents of the linear (waterfall-) model who\nthink agile processes suck anyway\n- Proponents of agile processes who think an agile\nprocess would never work in the large\nProcess\n\nWe want to share our experiences as well as hear from the\naudience’s experience and questions. Probably we will use\ninteractive elements to work out patterns of agile\nprocessing in the large.\n\n\nContent outline\nLarge Projects and their environment\nLarge companies often run large projects. The organization\nof the companies forces the project to be run in a specific\nway. Often problems arise because of that. Some of the\norganizational departments have been introduced for non-agile\nprojects, which means they are for example not\nservice oriented, or human centered. They were invented\nfor controlling a project and supporting the organizational\nhierarchy.Theywerenot invented for supporting the needs\nof the different projects, so they don’t regard the projects as\ntheir customers.\nThis has different effects – often a project tries to ignore\nthose departments as good as possible. If this is not\npossible at all the project and the organizational\ndepartments fight against another, which costs of course a\nlot of time, energy and therefore money.\nThe only way out is to ask those other departments to come\non board of the project. – If you can’t fight your enemy you\nbetter work with them. – But beware; that it will take a\nwhile till the different teams will really work together.\nTypical organizational departments that don’t consider\nthemselves as a service to a project are: Project Planning\nand Controlling, Quality Assurance, Revision and the like.\nThe main difference with agile projects is here, that those\ndepartments are involved in the process from the very first\ntime.\nGetting Started\nWhat’s the best way to start an agile project with a large\nteam and what to start with?\nNot every change benefits from being introduced smoothly.\nSometimes it’s even better to change something so\nradically (shock-effect) that the real change you want to\nmake doesn’t seem so strange anymore compared to the\nexaggerated change.\nEspecially for large project continuous feedback is\nessential. For example cycles for iterations and releases\nhave to be much shorter than with smaller teams. The\nproblem is: If this tanker runs in the wrong direction, it is\nalmost impossible to change the course after a while.\nSo according to our experience the most important thing is\nto focus on all kinds of quick feedback: Organization,\nEnvironment, Running Software, Happiness of members of\nthe team, etc. This doesn’t sound too different from any\nother agile project, but establishing short feedback cycles is\nmuch more difficult that with small teams. But once this is\nestablished all other changes will follow more naturally\nCommunication\nInner team- and communication among teams have to be\nestablished.\nDifferent communication channels have to be ensured. It\nseems that as soon as one communication channel is\nestablished, it doesn’t work anymore. The main reason is\nthat a working communication channel is often overused\nwhich results in ignoring the channels. This means\nchannels have to be changed often over time.\nEvery person obtains information differently, using\ndifferent sensory modalities. Some people, the visuals,\nlearn most effective by watching; the auditories, by\nlistening and the kinesthetics, through action. Therefore,\nprovide different approaches to communicate. Accept\ndifferent communication media by addressing various\nsensory modalities.\nCustomer involvement\nThere hardly exists a single customer. Most often if the\nproject is really large, the amount of customers is in\nrelation to the size of the project.\nOften there are several customers, who are either invisible,\nlike for standard software, or it is a community of\ncustomers who have a similar – but not the same – interest\nin the project. Even worse the community of customers, is\noften competitive among themselves. This means it is hard\nto get them on-site, because there is no accepted\nrepresentative of the group and to speak with one voice. Of\ncourse the project can’t solve their competition problems,\nbut it can ask for regular feedback, which could of course\nsometimes be contradictory.\nThe best is to establish a substitute for the customer, which\nare domain experts and ideally have a history at the real\ncustomer-site.\n\nDifficulties in Planning\nEspecially for large projects it’s unusual to plan a projects\ntowards results. Typically the plan focuses on milestones,\nwhich do not reflect the highest priorities, biggest business\nvalue and the like. It’s often hard if not impossible to\nreplace such planning with elements such as planning\ngames or time boxes. However, it might be possible to\nintegrate both forms of planning.\n\nIntegration\nMost agile Processes require continuous integration with\ndaily (nightly) builds. This is often difficult with large\nteams because of several reasons.\n\nAbout the Author\nJutta Eckstein is an independent consultant and trainer from Munich,\nGermany. Her experience in agile processes is based on\nover ten years experience in developing object-oriented\napplications. Besides engineering software she has been\ndesigning and teaching OT courses in industry. Having\ncompleted a course of teacher training and led many 'train\nthe trainer' programs in industry, she focuses also on\ntechniques, which help teach OT, and is a main lead in the\npedagogical patterns project. She has presented work in her\nmain areas at OOPSLA, OT and EuroPLoP.\nShe is a member of the board of Hillside Europe e.V., the\nassociation to advance expert knowledge (in the shape of\npatterns) about practice-proven techniques for analysis,\narchitecture and programming of software systems as well\nas for the formation of organizational and team structures\nfor software development.\nShe is furthermore a member of the program committee of\nXP 2002, XP- and Agile Universe 2002, EuroPLoP 2002,\nOT2002 and OOPSLA 2002.\n\n\nSupporting Material\nThis tutorial is based on two main sources: One is the\nproject the author is working on at the moment. The other\nsource is a goldfish bowl the author runs together with\nsome other co-authors at OT 2002 (see www.ot2002.org).\nThe title of the goldfish bowl is: (Agile) Software-Engineering\nin the large - does it work at all?\n\n\nREFERENCES\n\n[1] Adaptive Software Development. Website\nhttp://www.adaptivesd.com\n[2] Agile Prozesse. Website. http://www.agilealliance.org.\n[3] Kent Beck. "Extreme Programming Explained –\nEmbrace Change". Addison-Wesley, Reading, Mass.,\n2000\n[4] Kent Beck, Martin Fowler. "Planning Extreme\nProgramming". Addison-Wesley, Reading, Mass.,\n2001\n[5] Crystal Clear. Website.\nhttp://www.crystalmethodologies.com Author: Alistair\nCockburn\n[6] Alistair Cockburn. "Surviving Object-Oriented\nProjects". Addison-Wesley 2001.\n[7] Alistair Cockburn. "Agile Software Development".\nAddison Wesley, 2001.\n[8] Extreme Programming. Website:\nhttp://c2.com/cgi/wiki?ExtremeProgrammingRoadmap\n[9] Peter DeGrace, Leslie Hulet Stahl. "Wicked Problems,\nRighteous Solutions – A Catalogue of Modern\nSoftware Engineering Paradigms". Prentice Hall,\nEaglewood Cliffs, New Jersey, 1990.\n[10] James A. Highsmith III. "Adaptive Software\nDevelopment – A Collaborative Approach to\nManaging Complex Systems". Dorset House, New\nYork, 2000.\n[11] Norman L. Kerth. "Project Retrospectives". Dorset\nHouse, New York, 2000.	Main conference	Tutorial	2002
8924	Technical Debt: Assessment and Reduction	Do you really govern the software development process in your IT organization or do its uncertainty and unpredictability leave you, your internal customers and your company's customers aghast? Will technical debt play havoc with deployment dates you committed to and keep your development and operations staff from responding quickly and effectively to customer requests? Do you know how much money is required to "pay back" your software's technical debt? Once you take this workshop you will know how to quantify technical debt, rein it in, and mitigate its unpleasant consequences.\\n	Testing & Quality Assurance	Workshop	2011
8925	The Kata In The Hat	Programming is insanely hard. It s discipline. It's learning your katas from inside out. It's overcoming fear that you might write something buggy in a piece of software that will cost its owner millions of dollars. It is also fun, however. And while we do talk about it, we seldom do code for fun, just as a celebration of how much we love our coder s life. This session is an attempt to change this. We re going to code for fun. With the secret hope that some of the attendees will like what they ll see, decide it s the coolest thing to do, and make it happen everywhere on the planet.	Development Languages Practices & Techniques	Demonstration	2011
8933	What's NXT? Agile Software/Hardware Integration	Developers never get to play with the cool toys. Now s your chance! This session explores architectural layering and unit testing strategies for a java application that controls a Lego® Mindstorms® NXT robot. Frequently teams that unit test utilize stub objects as substitutes for parts of the code that are not the focus of the test. Creating an architectural layer for the robot s hardware can be utilized for better unit tests and running the application without the hardware. Come get hands on and learn about these techniques using the robot and your pair partner.	Hands-on Learning	Tutorial	2011
8939	The Agile Leadership Kata: Discovering the Practice of Leadership	In software development, we use the term  practice  loosely compared to many other disciplines. It is as if by repeating the word  practice  we might somehow actually arrive at that professionalism that so many desire. How do you practice your skills as an agile team leader? What would that practice look like? \\n\\n\\nIn this tutorial, we will explore the techniques you can use to practice and hone your skills as a team leader. From individual exercises through collaborative games, we will explore how we can practice and improve our leadership skills.\\n	Leadership	Tutorial	2011
8945	How to Get Started with Agile When You Don't Know Where to Start	When transitioning to Agile, people often focus on how 'agile' you are instead of focusing on the reasons why you chose to 'go agile' in the first place. In this session we'll talk about a 3-step process to help you start or tune your adoption regardless if you're a 5 person or 5,000 person company. We'll talk about understanding the objectives for 'going agile', how to get educated about what that really means and how to create an execution strategy.  Attendees will create a worksheet to help them identify possible paths for transitioning based on their unique organizational parameters.	Adoption & Transformation	Workshop	2011
8950	Exploring Enterprise Agile Transformation Strategies	The goal of any enterprise agile adoption strategy is NOT to adopt agile. Companies adopt agile to achieve better business outcomes. Large organizations have no time for dogma and one-size-fits-all thinking when it comes to introducing agile practices. These companies need pragmatic guidance for safely and incrementally introducing structure, principles, and ultimately practices that will result in greater long term, sustainable business results. This talk will introduce a framework for safely, pragmatically, and incrementally introducing agile to help you achieve your business goals.  	Adoption & Transformation	Talk	2011
8954	Own Up: the Product Stewardship model for UX 	Who is your project's Product Owner? What does that even mean? Are they ultimately favoring the voice of the business, its customers, your end-users, or the technologists? Where is the UX voice in your team?\\n\\nUX designers are uniquely positioned to solicit and evaluate input from business stakeholders, developers, and the people (potentially) buying and using our products. The Product Stewardship model allows a business stakeholder to focus on business value while empowering a Product Steward to balance human goals, business needs, and technical constraints and opportunities.	User Experience & Interaction Design	Talk	2011
8955	Introduction to Agile Planning and Project Management	Agile introduces a number of tools and techniques designed to help the team figure out how much software we can build for the time we have, and the amount of money our customer is willing to spend.  This talk will introduce the fundamental concepts necessary to break down and estimate our product backlog, how to organize delivery of that backlog for early risk reduction and rapid customer feedback, and how to get stable throughput and predictability as you mature your agile practices.  This talk is for those looking to understand how (and why) agile methods lead to better business outcomes.	Agile Boot Camp	Tutorial	2011
8967	Agile Requirements: To User Stories and Beyond!	Can extensive written requirements be dispensed with in favor of lighter weight 'stories'? It sounds easier, but can it really be as good? We'll start this session by staging a showdown between traditional and agile requirements.  Participants will form teams, create requirements documents, do development (no technical skill or computers needed), and evaluate the results. Next, participants will learn by doing, as we build a 3-part model for agile requirements: User Story, Conversation, and Acceptance Criteria. Participants will leave with a solid understanding, and practical skills.	Agile Boot Camp	Tutorial	2011
8968	Process Increments: An Agile Approach to Software Process Improvement	Process Increments, is an iterative approach to manage process improvement projects. This approach builds upon Agile values and principles, and reuses some well known Agile techniques. It partitions the scope into user-story-like increments, and manages the project using agile estimating and planning techniques.\\n\\nThis approach has been applied to five enterprises transitioning from individual-driven/non-structured organization to a team-work/structured organization. The study shows sustained improvement velocity, good project visibility, and on-going learning experiences by project teams.	Insights - Experience Reports	Experience report	2011
8969	Scaling Software Agility: Advanced Practices for Large Enterprise	Dean Leffingwell describes how rapidly advancing agile methods are being successfully applied to enterprise-class software development. He describes emerging practices including: lean requirements practices that scale to the full needs of the enterprise, intentionally-emergent enterprise architectures, a kanban system for re-architecting large-scale systems, achieving strategic alignment and product development flow with the Agile Release Train, and strategies for agile portfolio management and governance.\\n\\nsee. www.scalingsoftwareagility.com for more information.	Enterprise Agile	Tutorial	2011
8970	From Development Agility to Business Agility	Scrum is an effective approach for Agile Development. Opportunity Engineering (OE) is a business approach that allows to leverage uncertain business opportunities. We will present an effective framework that uses existing Development Agility and OE to enable real Business Agility. This framework uses Scrum to discover the right product to build by assessing business value under conditions of high-uncertainty (where real profits are). These concepts being already used by successful Internet companies, this presentation shows a ready-to-use framework applicable to any industry.	Business & Project Management	Tutorial	2011
8972	Design by Community: Involving Everyone in UX Design using Design Studio	The Design Studio method lets the whole team get involved in sketching and critiquing product solutions.  It s emerged as one of the agile-UX best practices for rapid design ideation and building whole-team ownership.  This hands-on workshop is a good fit for all project roles - veteran and novice alike!  Everyone will learn by participating in a design studio - exploring ideas for a real product.  You ll learn the process mechanics along with tips and tricks from experienced practitioners - everything you ll need to try this on your own project.	User Experience & Interaction Design	Tutorial	2011
8973	Chasing the constraint beyond the development team	Successfully adopting agile methods creates a high likelihood that the constraint in your value chain will migrate from software development to another business process. As your agile journey proceeds, more agile won t necessarily deliver continued improvements! Unfortunately, systemic improvement often takes considerable time and effort, and your agile effort may be seriously impaired while you work to improve a constraint that lies beyond your control. This workshop will address methods for identifying, predicting, and responding to organizational constraints beyond the development team.	Business & Project Management	Workshop	2011
8975	The Agile Office: Cisco's Unified Communications Business Unit	Agile transition is a period not an event. Structures are needed that will ensure agile survives long after the initial transition period.  Mike Cohn's keynote at Agile 2010 mentioned the concept of an 'Agile Office'. At the time we were over 2 years into our agile journey and 9 months into a formal organization-wide agile transition program. We knew we needed to create the support structures necessary to make sure that agile survived after the transition period, but weren t yet sure what form that would take. In September 2010 we formally launched the Cisco UCBU Agile Office.	Insights - Experience Reports	Experience report	2011
8976	The Budgeting Black Hole: Predicting the Unpredictable	An organization cannot run well without a budget. But a budget doesn t have to be a frustrating futile exercise in prediction. Incremental budgeting, specific management actions, along with project portfolio management provides everyone the data they need.\\n\\nWe will explore incremental budgeting in the context of a project, where we will periodically deliver value to the organization. We will see which work actually delivers value and can help predict budgets, and which work does not deliver value that helps with budgets. 	Adoption & Transformation	Tutorial	2011
8977	Basic Principle of the TPS and its Practical Ideas for Agile Software Process!	TPS developed in the 1950 s is a business model and collection of tactical methods to pursue high quality, low cost and short lead-time. It emphasizes to eliminate non-value added activities (waste) and to construct continuous flow processes. The TPS tools such as Kanban, Andon are only the tip of the iceberg. TPS is people centric system. It is more critical issues how to0change culture to involve people in Kaizen. Several ideas for better agile software development are presented from my experience of enhanced TPS development at Toyota.	New Horizons & New Voices	Talk	2011
8985	Risk Management Game: Shared Accountability Through Collaborative Risk Analysis	As we scale, it is imperative that everyone remain involved.  We must not fall back on old habits.   Risk management is often viewed as a vestige of plan-driven approaches but our agile flavor has proven valuable for helping teams make hard decisions collaboratively and proactively.\\n\\nWe introduce our risk management game, a powerful, collaborative and fun exercise for better results through collaboration.  We demonstrate that release planning is more than just stuffing stories into iterations.   You will take away hands-on knowledge of a technique useful up and down your agile enterprise.	Enterprise Agile	Tutorial	2011
8989	Scrum as a Thinking Toolkit	Leave aside, for the moment, the How of Scrum, those familiar roles & rituals, and come with me on a journey to discover the Why of Scrum.\\n\\nTogether we ll break apart Scrum practices upon the anvil of principles and values arriving at a destination I call  Scrum Thinking ; a place from where you can apply the science & purpose behind Scrum to organise your work & solve problems in disciplines & circumstances typically considered unsuitable to the application of the Scrum practices as they are applied to Software Development.	Business & Project Management	Workshop	2011
8991	Putting  the Fun Back In Your Retrospectives	Retrospectives are a key mechanism of a continuously improving process.  However it is a challenge to implement them well.  Many are poorly facilitated and just downright dull.  It doesn't have to be this way.  Retrospectives can be a time for celebration, a time for fun and a time for team-building.\\n\\nIn this tutorial attendees will experience some of the techniques Rally coaches use to put the fun back in the retrospective including: Goldilocks and the Three Bears, The Break-Up Letter, Draw Me a Picture, Captions, Futurespectives, 5 Whys and Holding a Movie Conversation.	Collaboration Culture & Teams	Tutorial	2011
8994	Design Thinking - Does Your Company Need It to Survive?	Companies fail every day due to a lack of balance between  right now  need for profit and the need for R&D/innovation to survive and thrive long-term.  Design thinking has risen over the past decade as a loose body of thought addressing how to intentionally   by design   achieve this balance.  You should be acquainted with it because 1) your company may need it to survive; 2)  design thinking and agile address similar problems, and design thinking can be leveraged to improve agile success; and 3) agile is a great approach to practically implement design thinking for business success.	New Horizons & New Voices	Talk	2011
9001	Functional Management - There IS a place for it in Agile	With the adoption of Agile, many groups wonder whether functional managers are required any more. Even with self-organizing teams, functional managers are still an integral part of Agile, and their role has transformed into more of a coach than ever. This talk explores what I have seen as a traditional software manager and my experiences in leading Agile teams as their functional manager. It delves into the nuances that I have found that are required of this new form of manager, and how this needed leadership meshes well with and elevates self-directed teams.\\n\\n\\n 	Leadership	Talk	2011
9008	Fact or Fiction:  ERP Projects Can Be Delivered Using Agile?	Fact. ERP projects have successfully delivered quality products by leveraging lean and agile principles and techniques.  Learn about the common differences and challenges that are unique to an ERP initiative and its use of Agile.  Discover how there are varying models of how organizations have introduced Agile into their enterprise.  Transitioning from traditional waterfall to Agile is not easy....learn how to assess whether your Enterprise is ready for Agile.  Discover how other ERP customers have adopted Agile in their enterprise projects and the key lessons learned from their projects.  	Enterprise Agile	Tutorial	2011
9011	Silo Busting	Organizational silos are the source of the most pernicious dysfunctions you can find within any company. These divisions serve to isolate people in the organization within hyper-specialized roles. Ostensibly, we do this in order to help people succeed.\\n\\n\\nHowever, you can deliver a product successfully without compartmentalizing everyone and everything in an organization within an inch of its life. In this tutorial, we explore the causes of organizational silos, their impacts, and the strategies that you can employ to help mitigate their impact on your teams and within your organization.\\n	Adoption & Transformation	Workshop	2011
9021	Intro to Test Driven Design (TDD) & Pair Programming Dojo	If you ve never been on a team that s fully bought into Test Driven Development (TDD) and Pair Programming, then you re missing out.  These teams tend to learn much faster from each other, be more cohesive, write more modular software with fewer defects, refactor with confidence, and are generally more fun to be on.\\n\\nCome experience what it's like to work on a team that's using XP dev practices.\\n\\nBring a laptop with wifi, and expect to have some fun!\\n	Agile Boot Camp	Tutorial	2011
9025	Flow Games	Flow is a core part of Lean and an important concept for Agile teams and organisations to understand. Flow is what helps us deliver value, from concept to cash, as soon as possible. This session will use a selection of games to emphasise the importance of flow, and generate discussion on how to achieve flow through collaboration within and across teams.	Hands-on Learning	Workshop	2011
9029	Continuous Integration for the world: Agile code + Agile Infrastructure	With all the interest in Continuous Integration and  Delivery, we believe that organizations can greatly benefit from an 'Agile Infrastructure': this would enable frequent changes to happen both at the application level and at the infrastructural level. This session wants to explain and *demo* how the concept of 'Infrastructure as code' can help. We envision the OS and middleware build a second pipeline parallel, integrated in the traditional build process. \\n\\nThe concepts can be visualized as shown in this graphic: http://www.jedi.be/pages/ci-for-the-world/ci-for-the-world.png	New Horizons & New Voices	Demonstration	2011
9033	Agile Hardware and Co-design	Agile software development is getting attention also in embedded software development. Embedded system development on the other hand requires  different engineering disciplines working together. When embedded software team starts using agile methods, it affects also other disciplines. Agile development emphasizes continuous learning through experimenting and collaboration instead of following a detailed up-front plan. Agile embedded software team expects different behavior in system co-design. This talk discusses reasons and ways to adapt agile development to co-design of system development.\\n	Agile for Embedded Systems Development	Talk	2011
9038	Creating an Environment by Making, Keeping, and Amending Agreements	Software processes such as Scrum, XP, and Kanban are a set of practices that a team agrees to follow.  Making, keeping, and changing agreements is crucial to the success of any agile process.\\n\\nA team s agreements and their ability to make, keep, and renegotiate these agreements is fundamental to their success.  However, many times, team members are not all clear on their agreements.  They may not have the same understanding of the explicit agreements and are usually carrying around a set of implicit agreements that they expect their peers to execute.	Collaboration Culture & Teams	Tutorial	2011
9042	Dipping Your Toes Into Kanban	This lightning talk will illustrate how a real world agile team working within two week iterations began using work in progress limits to increase focus, foster collaboration and manage flow.	Agile Show & Tell - Lightning Talks	Talk	2011
9047	Agile Coaching Self-Assessment -- Where do you Stand on the Competencies?	As an agile coach, where do you stand? Where have you "got it down"? What more do you need to develop so that you can be the coach your teams truly need?  In this interactive workshop, thought-leaders in agile coaching Lyssa Adkins and Michael Spayd lead you through a self-assessment using an Agile Coaching Competency Model that covers both the *doing* and the *being* of agile coaching. You'll leave the session with a specific plan of action for improving your agile coaching and (likely) many insights about the nature and importance of agile coaching -- for yourself and for your teams. \\n\\n	Coaching & Mentoring	Workshop	2011
9048	Introduction to Behavior Driven Development	BDD helps development teams hold conversations about the behaviour of their system with non-technical stakeholders. BDD has changed from its early roots as a replacement to TDD and now encompasses Feature Injection, extending across the whole software lifecycle. In this tutorial we look at the original reasons for BDD, returning the focus to the language and conversations at its heart. We look at how BDD s patterns can be applied at multiple scales, from the initial project vision all the way to the code, to deliberately discover and address ignorance in every aspect of software development.	Working with Customers	Tutorial	2011
9051	Managing dependencies to create value	The normal dogma of agile execution is to avoid dependencies as they are perceived to disrupt flow and the ability to act with agility. But, why avoid a dependency that creates business value such as reusing customer information across products? Why add yet another framework which would increase the technical debt when there is one suitable already there?\\n\\nThis workshop will provide and refine a framework and practices to identify and manage the dependencies that truly create value while avoiding those that don't. This will ensure a more constructive way of dealing with dependencies.	Enterprise Agile	Workshop	2011
9052	How CSlim and Fitnesse Can Help You Test Your Embedded System	Imagine pushing a button and knowing within minutes that your entire embedded system works to its specifications. With open source tools, you can build into your embedded system the means to write automated tests that will aid communication between team members, verify your code, and allow the specification of functionality before it is implemented. This tutorial takes you through everything you need to write Fitnesse and CSlim tests in your C or C++ based embedded system. We'll also cover the bigger picture of how and why these tests are valuable. Bring a laptop!\\n	Agile for Embedded Systems Development	Tutorial	2011
9056	A Day in the Life of a Menlonian	Menlo Innovations is a fully agile shop. Our team is located in one open space - no cubes or offices. Our company s mission is to return the joy to inventing software. Everything about the space in which we work and the people we work with fosters collaboration and creativity. This talk will seek to answer the question  If we visited your team, what would we see that would blow us away?  We will simulate a day at Menlo by taking attendees through each hour of the day, showing them through photos and brief explanations what it is that makes Menlo such a unique environment to work in.	Agile Show & Tell - Lightning Talks	Talk	2011
9066	One earthquake, hundreds of volunteers and six days to build a website 	On February 27, 2010 Chile was struck by one of the most devastating earthquake. A team of of hundreds multidisciplinary professionals spontaneously arose to help people of our country. Although the abundance of talent, courage and determination, the team was not able to focus due to the stress, lack of information and chaos. We were called to coach this team and could experiment the power of agility in such an exceptional context. In only 6 days the team implemented a web portal and several other tools, helped by kanban, agile programming, holacracy and retrospectives.	New Horizons & New Voices	Talk	2011
9068	Agile Security:  They're Not Mutually Exclusive!	In the federal government, or in any industry where secure systems development is a concern, security requirements are typically considered at the end of development, right before transition into production.\\n    In this session, we will examine recent changes in security doctrine, and how these changes favor secure development and align well with agile methodologies.\\n    Based on work with the National Security Community over the last 3 years, the presenter will describe how to build security in throughout development, and how to put the emphasis on building a secure system.	Development Languages Practices & Techniques	Talk	2011
9074	Continuous Integration: The minimum viable product	What does it mean to 'do' Continuous Integration? It used to be enough to execute your unit tests in CI.  But the bar is steadily raising for engineering practices. In the last decade we've seen tremendous improvements in acceptance testing. JavaScript is now a platform in it's own right. Cloud computing is now vital. There's growing interest in deployment to prod.\\n\\nSo Continuous Integration is under more pressure than ever.  As the bar slowly raises for engineering practices, we ll present 2011's minimum viable feature set for Continuous Integration.	Development Languages Practices & Techniques	Talk	2011
9077	Democracy unleashed: bringing agility to citizen engagement	Empowered individuals. Creative, participatory decision making. Connectedness and care for each other. These words apply equally to an Agile organization as to a healthy community. What might happen if we applied Agile values and methods to transform communities? I will share my experiences over the past year and up to Agile 2011 to nurture engaged community in my home town - tools and methods, trials and triumphs, how Agile applied to community differs from organization. This is bleeding edge stuff, an area of opportunity for Agile consultants to do work that transforms the world.	Insights - Experience Reports	Experience report	2011
9082	Stories from my Experiences Learning Scrum	Stories of using Scrum as a distributed team to build a piece of software (Veracity) which helps distributed teams use Scrum.\\n\\nVeracity is an open source DVCS, somewhat like Git or Mercurial, except that it can manage record-and-field oriented data in the same "decentralized" manner as directory-and-file oriented data.  Its goal is to allow other kinds of team tools (such as agile planning) to be decentralized, not just version control.  Veracity includes a Scrum project module.\\n\\nNeither we nor Veracity are great at Scrum (yet!), but both are getting better with every iteration.	Insights - Experience Reports	Experience report	2011
9083	"It Depends on Context": You CAN get there from here, if you know where here is	Every Agile project must respond to organizational conditions and climate. Gaining awareness of context helps the core team and project community know how they fit into the larger organization. As a systems thinking approach, Agile Chartering and its focus on context enables better decision making, taking the whole system into account. In this session, we will share our experiences with chartering and demonstrate interactive tools and techniques for executive sponsors; portfolio, product, and project managers; and project teams to define and work with their specific project context. 	Business & Project Management	Demonstration	2011
9088	The Product Partnership: Using Structured Conversations to Deliver Value	A shared understanding of product needs is the basis for continual value delivery -- and requires a partnership of product stakeholders. In this tutorial attendees experience a technique that enables partners to collaboratively analyze needs and make just-in-time decisions on what to deliver next. The technique engages partners in structured conversions using seven question-sets to explore, evaluate, and decide on high-value options for the next cycle delivery. Attendees gain insights on how to use this technique to guide product need conversations at any level of agile product planning.   \\n	Working with Customers	Tutorial	2011
9089	Fear-Driven Impediments	In many cases fear is a reason for impediments of an agile team and can cause many effects: resistance to organizational change, procrastination of decisions, inability to surface the real issues in retrospectives. To successfully remove such impediments, the fears of all involved individuals must be understood. If fear is a reason to fail, it should be dealt with as fast as possible.\\n\\nExamples:  \\nI must not use TDD, my boss forbid it.  \\nI will be fired or removed from the team if I say  no .  \\nWe can t change this specific part of the organization because team X would get unhappy.	Collaboration Culture & Teams	Workshop	2011
9091	Whatever the problem, community is the answer	"What are the issues and organizations in this world too important to fail?" asked Lyssa Adkins at Agile 2010. Imagine if the Agile community banded together to tackle complex problems like a smart energy grid or reforming education. Our collective skills, knowledge and passion uniquely position us to make a difference. Whatever the problem, community is the answer. Come meet like-minded travellers. We'll use the engaging World Café conversation format to re-discover our gifts, the kind of world we seek, think beyond the usual debates, with actionable steps to make shifts on a massive scale.	Open Jam	Workshop	2011
9095	Creating a Team Culture to Navigate Conflict	Anyone who has spent solid time with an Agile team can attest to this one thing: conflict happens.  With Agile, we seek excellence and we see that conflicts arise one after the other. Harmony and disharmony are both normal.  But how can teams turn conflict into something productive and maybe even inspirational?  Models and tools to do just that are the core of this workshop.  Participants will leave the session with new ways of thinking about conflict on their teams as well as tools they can use right away to help their teams (and themselves) navigate conflict.	Collaboration Culture & Teams	Workshop	2011
9104	How Social Media in Agile Projects can drive innovation	According to Gartner Group: Companies that are trying to restrain their workforce Internet usages will be extinct within the next 5-10 years...\\n\\nChildren of today use Twitter, Facebook and much more as a normal part of their daily lives - It is their network and backbone! The social medias are to them, what email and phone was to us and our parents.\\n\\nWe call these children "Digital Natives"!\\n\\nHow do we overcome the need for exposure and social interaction - both regarding recruiting and keeping skilled people, BUT also in high regards how can we use social media in our agile projects?	New Horizons & New Voices	Talk	2011
9108	Business Rules Essentials for Quality Software	How and when do you elicit and specify business rules? Where do you look for business rule clues? How can you measure the value of business rules? What is the right level of business rule granularity for testing? When can you start testing business rules? Answering these questions is key to enable effective estimating, building and testing efforts. In this interactive session, you learn how a collaborative, cross-disciplinary approach to business rules provides just-enough, just-in-time detail to develop, test and deliver quality software.     	Testing & Quality Assurance	Tutorial	2011
9111	Facilitation & Communication in Agile Teams	While traditional projects expect most communication to take the forms of email and manager-led meetings, agile projects expect teams to self-organize, collaborate and participate in decision-making. But what is self-organization? How does it work? This 90-minute tutorial will focus on what it means to self-organize, how it occurs and how to help it along, and the hurdles that must be cleared in the process. See how the proper use of facilitation in agile meetings can be a key driver in the development of high-performing self-organizing teams. 	Agile Boot Camp	Tutorial	2011
9112	Everything I know about Leadership I learned from Russell Crowe	While the boss is the person you HAVE to follow, a leader is the person you WANT to follow.  But are leaders born or do they grown through the trials and tribulations of experience?  Who are the people you choose to follow and what are their leadership traits? \\n\\nIn this fun and interactive tutorial we will examine several familiar characters from popular films and discuss their effectiveness as leaders and how they use their own unique style to influence the people they lead. We will then discuss which styles are most effective when working with self-organizing, self-directing Agile teams.	Leadership	Tutorial	2011
9117	My Agile Suitcase	Imagine you are an agile consultant or coach. You are called by the inhabitants from waterfall island, who haven t heard about agility before and want to benefit from your advice. Which practices, principles and values would you pack in your agile suitcase for providing them guidance? What would you leave at home?\\nIn this session experienced agilists will deliver insights in their agile suitcases. Their short, concise and entertaining Pecha Kuchas may give you hints for your own suitcase. Afterwards you will work on your own agile suitcases. This may help you to travel lighter next time.	Coaching & Mentoring	Workshop	2011
9128	Agile Requirements Exploration with Tester Collaboration	Incorporating the testing mindset improves customer exploration of product needs. At the same time, agile test planning and delivery benefits from involvement in agile requirements analysis.  In this experiential tutorial, participants examine a subset of agile analysis models in tandem with specifying acceptance criteria to verify and validate requirements. Participants experience how incorporating the tester mindset during requirements exploration accelerates test planning and specification, enhances product quality, and uncovers missing, conflicting, erroneous and unnecessary requirements.	Testing & Quality Assurance	Tutorial	2011
9140	Coaching Success: Getting People to Take Responsibility & Demonstrate Ownership	Examine, practice, and apply thinking tools and communication strategies adopted by coaches worldwide for teaching, coaching, and inspiring ownership behavior the essence of personal agility.\\n\\nCome learn to apply and teach the Responsibility Process, to handle objections, and to know just what to do when another believes they're owning it and you believe they aren t.\\n\\nDoing so inspires far greater ownership behavior. You add more value as your charges take ownership. They learn, correct, and improve more easily, directly, and quickly. It's the empirical process at the individual level.	Coaching & Mentoring	Workshop	2011
9143	User Experience Teams Gone Agile	If an open collaborative space, short iterations, story-cards, and functional testing are good for software development, then why are software the developers the only ones who have to do it?  What would happen if user experience designers followed the same practices?  In this energetic hands-on tutorial you will explore practices that some user experience teams have adopted/adapted from agile developers.  The session will also share some success stories that demonstrate how these techniques resulted in greater project success.	New Horizons & New Voices	Tutorial	2011
9167	Negotiating Agile Contracts	Business managers and consultants alike are finding that their standard templates for corporate contracts do not support the Agile process.  Instead, these groups must work together to find a new way to define roles and responsibilities within an Agile framework.  This session will focus on practical considerations from both sides of the negotiation table those paying for the work and those providing it in developing these agreements. Session facilitators will help participants develop an Agile approach to writing contracts from requirements definition through project closure and auditing.	Working with Customers	Tutorial	2011
9170	Agile Transition in Trouble? Using the Kotter Change Model as a Diagnostic Tool	Agile transitions tend to imply organizational change. According to change expert John Kotter 70% of all major change efforts in organizations fail. Is it any wonder that so many agile transitions deliver only lukewarm results?\\n\\nThroughout the session, the speakers will use the lens of the 8 Step Kotter Change Model to share their experiences guiding four organizations through their agile transition.\\n\\nIn this session you will learn the 8 Step Kotter Change Model and see how it can be used to guide your agile transition.	Adoption & Transformation	Talk	2011
9172	Visual Portfolio Management - Putting the "Big" in Big visible tracking	In this interactive workshop we will explore the use of a Portfolio Alignment Wall (PAW) to track progress, visualize dependancies and increase collaboration on large portfolios. Experience the process of populating and managing the PAW through a portfolio simulation. \\n\\nWe combine Scrum-Of-Scrums, visual management, value streams and a simple set of rules to balance simplicity and sufficiency.  Bob and Mike have used this technique to manage delivery across 17 agile and waterfall teams, 11 major feature streams with cross team dependencies. 	Enterprise Agile	Workshop	2011
9173	Solving the 1-10-100 problem: Extending Continuous Delivery to QA and Ops	In many medium and large organizations, friction between Agile application development (Dev), Quality Assurance (QA), and Operation (Ops) teams kills productivity.  We ll discuss how the typical continuous delivery loop fails to take into account the need for bi-directional communication with QA.  The growing role of Ops in the application lifecycle means it needs to be connected to the same continuous delivery loop and be linked directly into Agile planning processes.  How does extending the collaboration loop to Ops potentially flatten the exponential 1-10-100 cost curve into a linear one?	Testing & Quality Assurance	Talk	2011
9176	Twelve Steps to Agility	**You're trying to do Agile & it isn't really taking.** You are running into problems at various levels, from naysayers on teams all the way up to C-level execs. At your company, everything is a  top priority  & frequent interruptions are the norm. \\n\\nExplaining  who does what when  is complicated, & there is no clear answer on how to simplify that story. Most meetings you attend are a waste of time in your view. You know Agile is part of the solution, but the results so far are NOT good.\\n\\n**You ask yourself: What steps can we can take now that are quick, cheap & effective?**	Adoption & Transformation	Workshop	2011
9178	Lean Fundamentals: Understanding Flow Through Games	The Lean concept of flow is the underpinning of Agile methodologies including Scrum and Kanban.\\n\\nThrough a series of games and simulations, you will get to experience the inefficiency of multi-tasking, measure the benefit of smaller batch size and start thinking about how bottlenecks impact your system.\\n\\nBy the end, you will understand flow and how it relates to agile practices such as stories and iterations.\\n\\nCome and learn through play.\\n\\n(We will play the Name Game and the Penny Flow Game)	Agile Boot Camp	Tutorial	2011
9182	Tell Me Why -- "The Golden Circle" of Agile Transformation	Simon Sinek s "Golden Circle" resonates with Agile adoptions. Often, we start with  What  as the core for our plans. Or, we may try to start with  How .  Why  can be conspicuous by its absence. I fell into this  What  trap when I was first guiding teams in Agile transformations. I hadn't first asked "Why" though I did embrace Lean principles for "How". I jumped to What the practices were: 5 steps of what to do, roadblocks to expect, and benefits to reap. In this tutorial, we'll create our own Agile "Golden Circles" of "Why How What" for successful transformations.	Adoption & Transformation	Tutorial	2011
9185	Lean Procrastination - How to Identify the Last Responsible Moment	Procrastination is the psychological behavior to needlessly and counter-productively defer tasks. Lean thinking recommends deferring decisions to the last responsible moment and delivering just-in-time. One is a burden, the other a management theory, yet both are concerned with deferring.\\n\\nMeet the Shu-Ha-Ri model of Lean Procrastination which gets you rid of management if applied to work you fully enjoy and master.\\n\\nPlay with us the new LRM complexity game to explore how complexity effects and changes the last responsible moment and how Lean Procrastination enhances flexibility.	Hands-on Learning	Workshop	2011
9186	Strategies for Agile Portfolio Management	Traditional portfolio management frequently uses principles that are at odds with agile thinking. For example, believing that people should be 100% utilized might lead to us to start many simultaneous projects leading to high levels of team-member multitasking. Managing a portfolio according to these principles all but guarantees a continuous stream of impediments that interfere with team-level agility and sub-optimizes delivered value. In this session I discuss strategies for aligning portfolio management with agile development to ensure a better end-to-end flow of value.	Business & Project Management	Tutorial	2011
9192	Collaboratively Chartering Success	How do you create the big picture for your projects or teams? If the big picture is missing, you are not alone but you are probably struggling. Collaborative chartering is a simple but powerful tool that bonds communities around "why they are building what they are building. Known to many project managers, but unknown to many agile teams, chartering builds the large context around product, community and a delivery cadence just to name a few. If you are looking to augment or replace kick off sessions, drop in and learn concretely how to get started in a valuable direction.	Business & Project Management	Workshop	2011
9197	Agile engineering practices and tools	Extreme Programming put strong emphasis on engineering practices to support agile execution and have in practice influenced how many of those practices have evolved. Scrum assumes such engineering practices are being used, without dictating specifically which practices. In this session, we will dive into the most important agile engineering practices and the kind of tools that supports them. We will also discuss the evolution of such tools, including those from both the open source community and commercial vendors.	Agile Boot Camp	Tutorial	2011
9207	Integrated Product Development	In this session, interaction designer Tim McCoy and agile coach and practitioner David Hussman introduce a new way of working. Integrated Product Development combines design skills with agile delivery. Drawing on their real world experience from a range of companies, David and Tim provide a cohesive and integrated process which iteratively draws out real value and context. You will learn goal driven design thinking that helps before and during iterative development. Stop in if you want to try tools that develop rich user experience during the iterative deliver better and timely products.	Hands-on Learning	Tutorial	2011
9210	Applying the Dreyfus Learning Model to Focus your Coaching Approach.	Acquiring any skill through instruction and experience (e.g. flying a plane, practicing yoga, or developing software using agile) involves progressing through common stages of learning. Understanding those stages, the behaviours people (and teams) exhibit at each stage, and how to effectively coach toward the next stage, is crucial for anyone tasked with assisting a team's agile transition. We will present the Dreyfus Model of Skill Acquisition, its 5 common learning stages as applied to agile transition, and coaching advice for each stage based on their common observable behaviours.	Coaching & Mentoring	Talk	2011
9212	Scrum and Kanban Like Chocolate and Peanut Butter	As you adopt Scrum across your enterprise, you will find that synchronizing the work of interdependent Scrum teams is a challenge. Kanban has a number of principles and practices that can aid this synchronization and thus smooth out your adoption.\\n\\nThis session will introduce Kanban from a Scrum perspective, show how the Lean practice of  One Piece Flow  is the key to both, and get into the nuts and bolts of specific practices and concepts from Kanban that can be adopted by an existing multi-team Scrum program.\\n\\n	Adoption & Transformation	Talk	2011
9213	Release your team's intelligent energy through five powerful conversations	With successful agile teams there is a vibrant team buzz present. Struggling teams often seem dispirited and anemic. As a Scrum Master, coach or manager, you'll learn the five key drivers of engagement: I fit, I'm clear, I'm supported, I'm valued, I'm inspired.\\n\\nYou will work with others, focusing on these drivers, to build the five key conversations that will tap & release the latent intelligent energy of the people on your teams.\\n\\nYou will also be able to apply the techniques in this session to your family or other group situations. Prepare to be energized and challenged! 	Coaching & Mentoring	Workshop	2011
9215	Applying Agile to IC Development... We're Not That Different After All!	Agile software development methods have been adapted to and applied in a number of other areas. ASIC/FPGA development, however, with its big bang development and delivery model is an area where agile is strangely absent. This talk examines how agile methods in the following areas may be used to gradually displace the big bang model:\\n\\n* feature based, incremental development\\n\\n* early/sustained collaboration between design, test, modeling and embedded software experts\\n\\n* regular retrospectives\\n\\nIncluded are ideas for how agile may best be introduced to hardware teams.	Agile for Embedded Systems Development	Talk	2011
9219	Enterprise Agile Visioning and Learning   from the Organization to the Person	Truly Agile organizations require new ways of creating and sharing knowledge.  In this session, Jean shares personal experiences and exercises in visioning & learning models. Each model targets a particular part of knowledge creation. For the organizational level, we look at PDCA coupled with Pascal Dennis's True North & Mother Strategies. For team learning, we work with ORID retrospectives. Finally, Peter Senge's personal visioning helps us dig into our own work within an Agile growth-oriented context. This regular cadence of visioning and learning truly sustains Enterprise Agile.	Enterprise Agile	Workshop	2011
9228	Distributed Scrum: Why some teams make it work well and others don't	How does a geographically-distributed team collaborate across distance, culture, and even language? What can an organization do to encourage successful teamwork? What technologies and practices increase collaboration?\\n\\nThis workshop will explore the patterns that enable companies to successfully deliver software with a distributed team. It will be co-presented by the VP Technology of a company that adopted Agile for teams in three time zones with two languages and cultures, and an Agile coach that assisted with the transition.\\n	Collaboration Culture & Teams	Workshop	2011
9231	Agile Isn't Enough	Agile isn't the destination, it isn't even everything you need to get there, at best it's a set of ideas that will help you find what you need along the way.   At this session, we'll explore other sources for some of the things you'll need.  \\n\\nWe'll look at a sampling of techniques, tools, and ideas from outside of agile that are extremely useful to agile teams :\\n\\n* Current Reality Tree - from Theory of Constraints\\n* Paper Prototyping - from IxD\\n* A/B Testing - from Lean Startup\\n* What's the next action? - from GTD\\n	New Horizons & New Voices	Workshop	2011
9238	To Deliver Faster, Build it in Reverse	Agile enables building a system in any order. To get business value faster, it may be better to deliver in the REVERSE order. Corporate waterfall starts with the foundation and the pipes, but on a large-scale Gap e-commerce program, we're flipping the approach:\\nStarting with the fulfillment of orders,  then the customer facing web site, from there to the content and data feeds and last to the tools and foundation.\\nIn the talk we'll discuss:\\n\\nAttributes of Agile that enable this approach\\n\\nBenefits / Disadvantages / Risks\\n\\nThe architecture requirements to support this reversed delivery\\n	Insights - Experience Reports	Experience report	2011
9241	Distributed 3d Conference Ready Rooms	Got Distance?\\n\\nCome learn about immersive tools for remote teams.  See how companies and government have used 3d platforms to save money and collaborate with distributed teams of 2 to 2,000.  \\n\\nVirtual Ready Rooms will be available throughout the conference for you to visit.     They are a speakers lounge where you can mingle with others.   We'll feature key platforms on rotating days.\\n\\nIn addition, a 60 minute slot will host a panel of Agile Luminaries in these virtual rooms.\\nGet ready at http://www.agiledimensions.com/blog/learn\\n\\nDo it.  Learn it.  Join us for Hands On Learning!  	Hands-on Learning	Demonstration	2011
9265	Routine Conflict Processing as a Cultural Norm	Regardless of the Agile techniques you employ, one thing is for sure: lots and lots of conflict is being generated. Questions about the current best idea, authority distribution,  identifying impediments, and impediment removal are just some of the sources of conflict and heat in Agile adoptions. \\n\\nConflict can kill your best intentions for your teams and organizations. Protocols- "structured interactions"-- are a useful tool for processing mistakes, differences and conflict. Attend this session to learn how to develop enterprise-wide norms for routinely processing conflict.	Collaboration Culture & Teams	Tutorial	2011
9269	Handling Product Management Across the Enterprise	The common model of a product owner works well for small to medium scale Agile adoption. However, for large scale Agile adoption one must expand the role to include a product manager that works with the business stakeholders while the product owner focuses on driving the teams. How proper product portfolio management that eases the handling of business dependencies by properly loading the backlogs of the teams involved is presented. The timeliness of this flow from business stakeholders to product managers to product owners to teams also demonstrates the need to keep backlogs to a minimum.	Enterprise Agile	Tutorial	2011
9271	Innovation Jams: Lessons in Agile Product Development - An Experience Report	Shortening time-to-market requirements have put software developers at product companies in a crunch. Many organizations need to cut their development time in half, yet the team is already working in overdrive. This talk reflects the experience of Accept Corporation in developing products in 3-4 day sprints dubbed  innovation jams . We ll share how we can make a set of new product features in under a week, using online customer submissions to guide development priorities and a process flow that accelerates collaboration so we can focus on coding.	Insights - Experience Reports	Experience report	2011
9314	Narrative Coaching	People problems - some we expect and have answers for, sometimes only ideas. Sometimes we just don t know. The narrative approach helps you collaboratively identify and draw out the solutions people have inside themselves.\\n\\nNarrative is a social or personal problem solving approach that shifts power and truth to the person wanting help. It strengthens areas of success. It is not prescriptive. It does not assume the coach has all the answers and needs only to talk with the client enough to identify the problem and prescribe a solution.	New Horizons & New Voices	Clinic	2011
9316	Planting the Power of Strengths-Based Teams	Why do you love or hate what you do? What difference does it make in productivity for your team? I'll share highlights from my experience with several groups, and Dan will share how the teams at Technicolor use it, as well as a quick how-to on ramping up teams on a strengths-based approach. We'll also cover several common strengths in IT and coaches, and how I've applied the test results to help team members find the niche on the team that plays to their strengths and brings out their best.	Agile Show & Tell - Lightning Talks	Talk	2011
9328	Facilitation Fun: BE the challenge you face!	Facilitation skills are essential for anyone. In fact, everyone facilitates whether they know it or not! Do you work on a team, manage an organization, or otherwise work with others? The opportunity to facilitate will come up.\\n\\nSteven  Doc  List leads you to explore the common patterns & antipatterns that come up in facilitation, for the facilitator and the participants. We ll have fun by taking on roles, and exploring the behaviors that work and that don t work. The session will include some time on specific activities and techniques that can be used for effective facilitation.	Open Jam	Tutorial	2011
9347	Integrating UX Into Agile: How To Ensure Your Sprints Result In Usable Software	Learn about the UXI Matrix, a modified version of the product backlog that integrates UX-related information to help the team consider UX impact when working the backlog. It helps you track user experience work and its impact. This is not a product. It s a simple set of techniques proven in multiple projects, that allow you to improve your ability to deliver great experiences to your customers in an Agile fashion. See the next generation in the evolution of the product backlog and find out how to overcome the weaknesses of traditional product backlogs that don t consider UX related work.	User Experience & Interaction Design	Demonstration	2011
9454	Evolving to Agile: A story of agile adoption at a small SaaS company	There are many sources of information about agile adoption in an enterprise environment.  However, I have not found similar material focusing on the challenges present at smaller companies.  This is the story of agile adoption at a small, organic growth, enterprise SaaS software company.  We will discuss what problems we were experiencing before adopting agile, what problems we experienced during adoption, and what problems we are still experiencing.  During the story we will also touch on what we did to address these problems, both successfully and unsuccessfully.	Insights - Experience Reports	Experience report	2011
9504	Vertical Slicing: Smaller is Better	Do your teams have trouble breaking down stories so that they always have demonstrable functionality at the end of a 2 or 3 week sprint?.  Enter "vertical slicing,"  the exercise of breaking a story down into smaller pieces that when completed individually, still offer demonstrable business value.   There is much mention of the concept of vertical slicing in literature, but there few published details on how to actually do it.  In this session, you will learn how we created a model for successful vertically sliced business value, and helped our teams toward hyper-productivity.	Insights - Experience Reports	Experience report	2011
9544	Moving development and testing out of their Proterozoic silos	For far too long development and testing have lived in silos, serving different masters. In most organizations, testing is the neglected child. 'Anyone can test' - and organizations hire accordingly.\\n\\nThe main message behind this session is how to handle testing organizationally and realize not only the skills needed for a successful testing organization but also how the interaction between development, product, and testing needs to evolve.\\n	Collaboration Culture & Teams	Workshop	2011
9574	The Origins of Agile	What is Agile Development, and how did it come about?  How was software done before agile, and why did we change?  In this talk we will trace the recent history of software processes starting with the grand misinterpretation that led to Waterfall and culminating with the revolution that led to the Agile Manifesto.  We'll talk about what software development was like before Agile, and what makes Agile so different. 	Agile Boot Camp	Talk	2011
9604	Agile in Academics	Our university bastardised Agile tools to give curriculum designers in an academic setting increased productivity and improved motivation. This allowed the designers to provide better quality and cutting edge courses in less time. The online educational team implemented and shared a personal kanban, dropped job descriptions, and saw massive improvements throughout. Scrum was then studied, dissected, and reassembled for our needs. Writers are now asking regularly to write for us, while designers have more free time for adding new dimensions to the curriculum in addition to normal expectations. 	Insights - Experience Reports	Experience report	2011
9615	Agile Thinking for Business Analysis   Going beyond user stories	The agile literature currently largely overlooks many of the existing tools and techniques of analysis, often with a focus on user stories as the primary tool for defining and presenting requirements in agile projects.  \\nThis workshop presents a variety of analysis techniques which can be used to identify and elaborate customer needs, to compliment the use of user stories and ensure that the right customer needs are effectively presented to the team at the right time in a way that ensures the right product gets built.  	Working with Customers	Tutorial	2011
9655	The Transformation Priority Premise	Transformations are like refactorings in that they are simple incremental changes to code.  They are unlike refactorings in that they change the behavior of code.  This talk presents a set of transformations sufficient to create any application.  It also suggests that when they are applied in a certain order developers can avoid many of the common problems with TDD such as painting yourself into a corner, or taking steps that are too large.  It also suggests that the ordering helps developers to find better algorithms.  See: http://cleancoder.posterous.com/the-transformation-priority-premise	Development Languages Practices & Techniques	Workshop	2011
9701	A Complete (and fun) Scrum Simulation	Whether you are new to Scrum or are looking for a quick and fun way to introduce Scrum concepts to others, this session is for you! Participants learn every Scrum role and activity by actually doing them in this fast paced simulation.(   \\nEach team starts by throwing together a very wide (and creative) backlog of features. A Product Owner reins in the backlog by prioritizing. The team commits to a micro-sprint&  and away we go! ( After three 'days' (minutes really) and lots of cutting, gluing, and discussing, the sprint ends with an actual product to demo and experiences to retrospect.	Agile Boot Camp	Tutorial	2011
9764	Yahoo! Sports: Sprint 100 & Beyond	Yahoo! Sports, the Web's leading sports' destination, began one week sprints and weekly releases with Sprint 100 in October 2010.  The experiences and learnings of the Yahoo! Sports team will demonstrate specific actions to take to overcome scrum fatigue and rejuvenate your teams.  Our exploration will focus on three transformative events: the implementation of daily code releases during the 2010 World Cup, the innovative Hacktacular event, and the data quality improvements of the Great Bug Sweep.  	Insights - Experience Reports	Experience report	2011
9906	Agile Game Incubator	Ever wanted to create a game but not sure how or where to start? \\nDo you prefer learning-by-doing? \\nDo you use games as a learning tool but haven't found the right game for a topic? \\n\\nLearn to create your own unique games for communicating complex topics and injecting some fun back into work. Come prepared with your own topics and ideas or join in on others'. \\nDon and Mike will kick things off by sharing their approach, valuable guidelines, and experience. They will facilitate the formation of teams around problem topics, then guide them through the creation of the ultimate Agile game!	Hands-on Learning	Workshop	2011
9925	Agile From the Top Down: Executives Practicing Agile	Organizations will have trouble sustaining a true Agile culture if the Sr. Management team does not live the same way.  IT Executives must practice what they preach. If they want teams to be transparent and agile, they need to practice themselves and lead by example. \\n\\nThis talk will share some Agile & Lean techniques, applied in a new way, to help organizations understand their constraints so they can transparently carry forward their journey to becoming Agile. \\n\\nYou can view the slides for my talk at jonstahl.com. I would upload a PDF of the slides but the file size is too large.\\n	Leadership	Talk	2011
9964	Agile Education by Object Game   most HISSATSU way to understand it.	Some people cannot understand  agile technique such as TDD and refactoring because these practices need "Object-Oriented" manner. This method can change non-OO brain into Object Oriented brain for only 4 hours by very easy way!  Learner can understand Why OO?  OO Application Behavior, OO Applications Architecture.\\n\\nIn Japan, Many people have gotten Object Oriented brain since 2006 by this method. and Join Agile Teams! even CEO can understand OO Application  behavior. AMAZING! In this hands-on, you can understand and experience that methods to make OO Brain!\\nSee: http://slidesha.re/ogo5mJ\\n	Hands-on Learning	Clinic	2011
10005	Making Metaphors that Matter	In this paper and talk we'll present our experiences with using architecture metaphors, how they helped us, and some tips we learned for making great metaphors that improve team communication and architectural discussions. Our experience grew out of the IVET project, a collection of software tools to help shoppers of a regional grocery store chain plan menus, find recipes, create shopping lists, and clip e-coupons.  The team built a set of web services in addition to a web client and iPhone app.	Insights - Experience Reports	Experience report	2011
10030	The Agile Scaling Model (ASM): Be as Agile as You Need to Be	The Agile Scaling Model (ASM) provides the context and advice for effectively tailoring agile strategies.  It describes how to extend the agile construction life cycle into a full-fledged disciplined agile delivery life cycle from project initiation to production.  It then describes how to tailor agile practices to address eight scaling factors: team size, geographical distribution, domain complexity, organizational distribution, regulatory compliance, organizational complexity, technical complexity, and enterprise disciplines (such as enterprise architecture, reuse, and governance).  	Enterprise Agile	Talk	2011
10113	Beyond Planning Poker - The Planning Poker Party	People across the world keep discovering Planning Poker. It's a helpful technique, but Planning Poker is not the only game in town.  By itself, it's not the right game when confronted with a large batch of un-estimated stories.  In this session we'll review Planning Poker and some of the underlying principles, and some other uses of them. Then we'll scale the ideas of planning poker and affinity grouping to handle large batches of stories in The Planning Poker Party. We'll walk through the steps needed to get a large backlog sized, and an initial release plan in place.	Working with Customers	Talk	2011
10150	Test-Driven Development in(bed) C	Test-Driven Development is for Java programmers, not for C!  Yes it is!  Roll up your sleeves and test-drive C with us.  We'll start with a short intro to TDD, and quickly get you doing TDD.  Bring your laptop.  If you don't have one,  we'll team you up with another programmer.  You'll see how to make TDD practical for embedded software development.  See <a href="http://cpputest.org/node/42">CppUTest Compilation Environment(http://cpputest.org/node/42)</a> for needed tools. We'll also have a bootable Linux DVD with all the tools so that you can join the experience.\\n	Agile for Embedded Systems Development	Workshop	2011
10201	How to design stuff that matters fast	Too much time is wasted creating that big design upfront only to find that users don't like what you have built once it has been released. Today we are in danger of not only over designing, but also designing solutions to the wrong problems. \\n\\nSee how I experiment with rapid design techniques to ensure design solutions for the **right business problems** are delivered to the **right target audiences** *rapidly* and *continuously*. Learn how to create design solutions fast as a team and work with a client to get products that really matter out into market early that will delight users.\\n\\n	User Experience & Interaction Design	Workshop	2011
10202	Cracking the Agile Big Rocks	Agile solves many problems with software, but presents a new set of challenges for management - the big rocks.  For example, personnel evaluation, agile in a waterfall business, agile and PMO, poor emergent design and more.\\n\\nThis is a highly interactive session.  Before the session, conference participants can post thier big rocks.  During the session the facilitator will present expert opinions on solving those problems.  Participants will form teams and pick their hot issues,  develop potential solutions by medling experience and expert opinions, and present thier solutions to the group.\\n	Enterprise Agile	Workshop	2011
10580	How Functional Programming Changes Developer Practices	Functional programming (FP) is going mainstream. First seen as a better approach for concurrency, we are finding that FP has pervasive benefits, often supplanting OOP for many purposes. This talk explores how FP aligns with, but also changes developer principles and practices.\\n\\n1. FP emphasizes mathematical rigor and rich types, which change TDD.\\n2. Capturing your domain model in code has serious drawbacks.\\n3. *Pure* functions and immutable data structures are more modular and reusable than objects.\\n4. FP introduces new "design patterns".\\n5. *But*, FP can be hard to master.	Development Languages Practices & Techniques	Talk	2011
10596	Exploratory Testing in an Agile Context	Exploratory Testing (ET) isn't new; the term was coined before "Agile." But ET and Agile fit together hand-in-glove. The disciplined Agile engineering practices like TDD and CI mean the code is constantly checked against expectations. But does it also do things we don't expect? Are there lurking risks and surprises? That's what ET can help us discover. And that's why stories aren't really Done until they're both checked and explored. This session explains ET in the context of Agile and gives participants an opportunity to try it out by exploring a hand held electronic game.	Testing & Quality Assurance	Clinic	2011
10636	Leadership Agility in a VUCA World 	Participants will apply leadership agility tools throughout this presentation that combine the leadership agility research and experience of an **Organizational Psychologist, Dr. Nick Horney** with **AGILE Expert, Jim Highsmith**.  Dr. Horney will share his 20+ years in the application of leadership agility with senior leaders from multiple industry sectors and global locations.  Jim Highsmith will provide the commentary and perspective from the AGILE community, reflecting his recommendations about combining the learning from AGILE methods with insights from strategic leadership agility.  	Leadership	Talk	2011
10686	Embedded Storycrafting: Key to controlling Risk and Schedule	In embedded development, much infrastructure must be built before the first user feature can be delivered. Customer-value stories will often be too big. But breaking them down risks losing the focus on delivering functionality. The answer? Let your evolving user stories be the catalyst that drives hardware-software co-development in the early iterations, and then draws in each related engineering discipline as naturally as an acorn develops into an oak tree. Many examples from real embedded teams will be given, and sessions will be offered in open space to practice the technique hands-on.	Agile for Embedded Systems Development	Talk	2011
10782	Acceptance testing in the land of the startup 	Songkick is a web based music startup which operates in a new market place full of unknowns, developing a free service. Focusing on user experience as one of the most critical features of the product. Continuously iterating and experimenting with features based on user observations and metrics. Unusually we adopted Acceptance tests and BDD while still in the early startup phase. Having spent more than 2 years growing our system and learning the pain points both technically and culturally we have lots of interesting lessons we would like to share about startups and Acceptance testing.	Testing & Quality Assurance	Talk	2011
10877	Kaizen Lego Game	After revolutionizing the automobile industry, Lean principles have been applied to different knowledge areas, such as software development. However, many people are using this ideas without having been introduced to the concepts that made Lean successful.\\n\\nIn this interactive session the participants will work in a small Lego production line, trying to improve their own process using different kaizen techniques. Up to 30 participants divided in small teams will learn about Kaizen, PDCA, standardized work, 5 Whys, Genchi Gembutsu, A3 reporting value stream mapping in a hands-on experience.	Hands-on Learning	Workshop	2011
10905	Agile Clojure	This session is a hand-on immersion into an agile development project using Clojure.  If you're new to Clojure, not a problem.  The nature of the project will educate you in the language as well as a toolkit for agile development.  If you're new to Agile, perfect!  You'll experience all the facets of an agile project possible in a half-day session.  If you're experienced in Agile and/or Clojure, awesome! \\n\\nWe'll work in micro-iterations, with customers, stories, acceptance tests, pair programming, etc...  It's sure to be a fun filled adventure that'll get you waist deep in Clojure action.	Development Languages Practices & Techniques	Tutorial	2011
10908	Tests as a Means of Abstraction	The different nature of functional languages can lead to a different perspective on test-driven design: 1) that the soul of the program is a network of relationships among facts-about-functions, 2) that tests are a usefully more abstract way of describing that network than is the program itself, and 3) that data structures should not be designed because they are better viewed as an epiphenomenon--froth thrown off by the network as it computes.\\n\\nIn this session, we'll show these claims in action and question them. The example will be in Clojure, but knowledge of Clojure is not required.	Development Languages Practices & Techniques	Talk	2011
10914	Experimentation: a Missing Agile Practice	Your initial Agile transition had great results. However, now you find the process has problems of its own. It doesn't fit your company, team, or domain perfectly. There's no advice for what to change. Now what?\\n\\nYou already know a safe, effective, and constructive way to explore an unknown domain: do explicit experiments.\\n\\nI will show how to identify the problem and contributing factors, develop and perform a set of experiments to see what might work better, and then follow through on any process changes that you deem fit. We will take on one or two problems from the audience as examples.	Collaboration Culture & Teams	Talk	2011
10915	Code Sense	Does reading code make us better?  Can we recognize good code when we see it?  Do developers agree on on what good code looks like?\\n\\nIn this session we'll try to answer these questions.  Together we'll take a momentary glance at dozens of code snippets and secretly decide if we like them or not.  Then, tempers will flare and fireworks will fly when we compare notes with each other.  There are endless lessons that you will learn and your foundational beliefs about code will be challenged as we develop our code sense.	Open Jam	Workshop	2011
10918	Simple Methods for Reliable User Involvement	One of the difficult problems faced by an Agile team is that of getting reliable user input. Since Agile projects depend on minimal up-front planning and specification, user feedback is critical. But product owners are rarely users themselves and the actual end-users are often located elsewhere and may be highly diverse. This session introduces participants to Contextual Inquiry (CI), a proven field research method for understanding users and their needs. We introduce CI, show how it fits into Agile development, and give participants practice in gathering data and then writing user stories.\\n	Working with Customers	Tutorial	2011
10932	Agile and Kanban In Coordination	A review of the results of running two teams side by side inside the same development organization one traditional Agile iterative development the other Kanban.  Both teams are fully coordinated with each other in a simple and effective system that optimizes responsiveness without compromising quality.  I will detail my experience taking a 30 person development team from a rudimentary agile implementation to a fully Agile organization running both Agile / Iterative and Lean / Kanban models of development side by side.	Insights - Experience Reports	Experience report	2011
10951	Courageous Curiosity: Agile from the Inside Out	Agile isn't just another methodology. 'Becoming agile' isn't about learning a set of tools. The _process_ is the easy part. Here, we'll tackle the hard part: putting love at the center of how you work.\\n\\nThe values of the Agile Manifesto & Extreme Programming encourage us to practice courageous curiosity, changing how we move in the world. In this workshop, we'll explore technologies--technique--for working compassionately.	Adoption & Transformation	Workshop	2011
124	APPLYING XP TOOLS TO J2EE FOR THE EXTREME PROGRAMMING UNIVERSE	Abstract Summary\nApplying XP Tools to J2EE for Extreme Programming is a half day technical tutorial that focuses\non using Open Source Software tools to apply XP to Enterprise Java development, specifically for\ntesting web components. This session will mainly encompass automating the build & integration\nprocess and automating the testing process.\nEssentially this tutorial is a cookbook on how to implement XP methodology in an Enterprise Java\nshop. XP is the methodology, i.e., the philosophy. Ant, JUnit, etc., that helps developers realize\nthe XP philosophy in a J2EE environment.\nXP is comprised of much more than testing, integration & build tools, but testing and integration\ntools are one way that XP materializes in the development process. This tutorial covers the day-to-\nday application of XP tools - not the full XP process and methodology. Specifically, this\nsession will cover testing web components with JUnit, Cactus, JUnitPerf, HttpUnit, Ant, and\nJMeter.\nAims and Intended Audience\nMany books and papers on XP are focused on theory and methodology. Fewer publications,\nhowever, focus on practical application in a Java Enterprise Environment. XP is extremely\npopular! However, many development shops fail in instantiating the abstract concepts of XP in\ntheir Java development process. This tutorial is geared to address the gap between XP theory\nand real world application for automated testing and continuous integration in a J2EE\ndevelopment shop.\nThis educational session is geared for developers using J2EE and XP. This includes developers\nwho want ways to perform some level of testing and automated builds, as well as developers\nthat use testing as a central role in their development due to the XP.\nApplying XP Tools to J2EE for Extreme Programming Universe has been designed for designed\nfor an audience experienced in Java, as well as XP programmers who want to ease the\ndevelopment of Java web applications. These developers would be enterprise Web application\nspecialists with a grasp of Enterprise Java (J2EE) technologies: EJB, JDBC, JSP and Servlets.\nHowever, they would not have to be J2EE experts.\nAbout the Presenter\nRick Hightower, CTO of Triveratech, has over a decade of experience as a software\ndeveloper. In the past, he has helped development teams adopt new processes like Extreme\nProgramming, and technology adoption like J2EE.\nRick's publications include Java Tools for eXtreme Programming, which covers deploying and\ntesting J2EE projects (published by John Wiley, 2002); contributions to Java Distributed\nObjects (published by Sams); and several articles in Java Developer's Journal. Rick also\nwrote a three part tutorial series on EJB CMP/CMR for IBM developerWorks (published in\nMarch 2002).\nCurrently, Rick is involved in course development, mentoring, consulting and training on\nJava, J2EE, Web Services and XP projects. In his spare time, he does J2EE development.\nRcik’s detailed resume is attached.\nRick can be reached at 520-290-6855 or at RHightower@triveratech.com.\nOutline\nEach major concept will have supporting sample code. Code samples provided upon request.\n Introduction\n Complexities with J2EE development\n   The JAR file\n     Jar Files and Applets\n     Executable Jar Files\n     Web Applications and WAR Files\n   Enterprise Beans and EJB Jar Files\n   Enterprise Applications and EAR Files\n Continuous integration with Ant\n   Ant Basics\n   Projects, Targets and Tasks\n   Working with Properties\n   Path and Filesets\n   Conditional Targets\n   Using Filters\n   Nested Builds\n   Unit Testing with JUnit\n   Writing a test case\n   Integrating JUnit with Ant\n   In container testing with Cactus and HttpUnit\n   In container testing\n   Cactus Architecture\n     Testing Tags\n     Testing code for use with JSP\n     HttpUnit\n   Combining HttpUnit with Cactus\n   Load Testing with JUnitPerf and JMeter\n   JUnitPerf Concepts\n   Timed Test\n   Load Test\n   JMeter Concepts\n   Combining JMeter, JUnitPerf and more\n   Using performance monitoring tool to find problems (e.g., JProbe)	Main conference	Tutorial	2002
10957	Writing Maintainable Automated Acceptance Tests	Test automation is software development. As with other software development efforts, most of the cost of test automation occurs during maintenance after the tests are first written. Automated tests can become brittle, so that a small change in a requirement or in the software renders scores of tests obsolete in the blink of an eye. How can we reduce the high cost of inevitable change? Dale Emery demonstrates key principles for writing adaptable automated tests: remove duplication, focus on the essence of the test, and name every important test idea.	Testing & Quality Assurance	Demonstration	2011
10959	Stages of Practice: the Agile Tech Tree	There are many stages of practice for each practice. These are the details that get lost in most discussions. What does it mean to practice Continuous Integration, TDD, or Pairing? If you use a CI server, are you doing CI?\\n\\nThat depends.\\n\\nThe Civiliation games have a "Tech Tree" that show the hundreds of technologies available. They are broken into branches (sea exploration, flight, etc), with dependencies between the branches. We will build a similar tech tree for agile practices, showing how the agile practices interleave and how they change as you develop each branch further.	Adoption & Transformation	Workshop	2011
11028	Breaking the Rules to Increase Customer Satisfaction	This is a story of on-going improvement in both process and culture.  With queue times upwards of 120 days, customers were becoming more upset and the divide between support and engineering seemed to be growing.  Nearly twice as many defect reports were being created than were able to be fixed with a few dedicated pairs.  In four months we have cut our lead time in half, established greater predicibility, and have continued to gain back the trust of our support organization.	Insights - Experience Reports	Experience report	2011
11031	Enter the Bubblesphere:  You and Your Agile Project Portfolio	Bubble charts, seriously?  Yes!  Even the best agile development teams may have yet to mind meld with a professional product portfolio manager, and vice versa.  This simulation gives product managers some new agile bubbles to use when charting their portfolio performance, and provides developers with new tools for collaborating with business owners.  All attendees will focus on how to maximize long- and short-term ROI for IT portfolios, along with learning to evaluate per-iteration team value delivery.\\n\\nThe simulation was be fine-tuned at Agile Games 2011 in Cambridge, MA.	Business & Project Management	Workshop	2011
11037	Teaching Kids Programming with Agile Techniques 	In this workshop, attendees will experience our Intentional Method of introducing children (ages 10+)\\n to programming using recipes (lessons at  www.TeachingKidsProgramming.org ).  We use Agile techniques such as pair programming, randoris, short iterations, re-factoring & test-driven development in teaching.  Pair instructors model Agile practices while teaching. \\nLearn how to teach technical processes using Agile techniques.  \\n\\nAlthough we ve mostly used our method with children, we have also successfully taught adults using similar methodologies.<img src="http://bit.ly/gSTsDY"/>  \\n  	Coaching & Mentoring	Workshop	2011
11055	Complexity at Cisco Voice Technology	In this article we'll tell our story of changing a waterfall culture into an iterative and incremental delivery system. We will talk about the principles of the agile software development life cycle we created, and the steps we had to take to embed this new process into the organization. We have managed portfolios and product teams, this article will tell you how we did it, and how we won't do it again. We have trained teams, project managers, product managers and saw how training an exec team can fail and cause disastrous results. \\n	Insights - Experience Reports	Experience report	2011
11062	Resistance as a Resource	When people resist change, change agents both new and experienced can become confused, stuck, and frustrated. Dale Emery describes how you can turn resistance into a resource. Whatever else it may be, resistance is information information about the values and beliefs of the people you are asking to change, about the organization, about the changes you propose, and about yourself as an agent of change. In this session, you will learn and create ways to tap into that information to translate resistance into effective action to move forward with change.	Coaching & Mentoring	Talk	2011
11074	What We Have Learned So Far: what we got right & what we got wrong	Many of the established ideas and practices of Agile had their first public exposure through Ron and Chet.  They helped take Agile from an underground movement to the mainstream.\\n\\nIn this talk, Ron and Chet will bring you up-to-date on their current thinking on how to best do software \\nin the Agile style.  They will explain why you should stop doing some of the things they recommended in \\nthe past and what to replace them with.  They will take one more run at getting you to do some of the \\nbasics of success that many teams neglect.\\n	Coaching & Mentoring	Talk	2011
11103	When the VP is a Scrum Master, You Hit the Ground Running	In early 2010, the new VP of Unisys Cloud Engineering was chartered with implementing agile methods in a department of engineers with decades of waterfall successes.  He was also an experienced Scrum Master.  One year later, we had completed over 200 sprints for 20 products across four geographies.  I ll tell the story of how we implemented Scrum, what we learned, and what we would have done differently.  	Insights - Experience Reports	Experience report	2011
11104	Applying the lean startup model to the Enterprise	Much is wrong with the way enterprises model the delivery of software projects, starting with the fact they use the project model. What if enterprises treated the software delivery lifecycle based on the concept of products instead of projects? A useful model exists for this paradigm - Eric Ries' lean startup movement.\\n\\nJez will discuss applying lean startups to the enterprise, using examples such as Amazon. He'll also demonstrate how oft-sited blockers to such a model (and to the DevOps vision) such as SOX, ITIL and COBIT, can in fact be made compatible with this model.	New Horizons & New Voices	Talk	2011
11105	Continuous Delivery	This talk will focus on the engineering practices required to achieve the goal of agile development: satisfying the customer through early and continuous delivery of valuable software. I'll cover the importance of good configuration management, automated testing at all levels, and continuous integration.\\n\\nThere will be a particular focus on why feature branching is considered harmful, and alternative techniques which allow for continuous deployment while developing functioanlity incrementally such as branch by abstraction, feature bits, and dark launching.	Open Jam	Talk	2011
11108	The empirical process - at the very core of Agile	Agile is all about empirical processes, controlled by feedback loops. But what does it mean?\\n\\nMost agile practices and principles are rooted in control theory. Knowing these concepts will improve the skills of any coach or mentor. In this  popular science -session, software development will be described as a (simplified) mathematical process. It will teach how feedback, sensors, noise and delays affect outcome, error, robustness and other properties of our process.\\n\\nBoth people with 10+ years of agile experience and absolute beginners are likely to get something out of this session.\\n	Coaching & Mentoring	Tutorial	2011
11110	Scrum in Sales	In the fall of 2010 the iSense sales and account management teams adopted Scrum for their sales processes. In this presentation, one of the sales managers will share his experiences by presenting the processes, lessons learned and main achievements, of using Scrum in sales. The most stringent effect of using Scrum in sales was the insight that the direct cause and effect for closing a sales deal, can be detected and as such controlled. 	Insights - Experience Reports	Experience report	2011
11121	CREATING  CUSTOMER  DELIGHT	The failure of traditional management has led to the reinvention of management: the whole organization must be focused on creating a stream of additional value to customers through continuous innovation. The reinvention reflects an application of Agile thinking to the whole organization.\\n\\nWith the growing power of customers, it is no longer enough to *satisfy* customers with early and continuous delivery of valuable software. Now customers must be *delighted*. In effect, the bar has been raised. The workshop will show how this more strenuous objective can be attained: http://bit.ly/ihcVL2 	Working with Customers	Workshop	2011
11122	MAKING THE ENTIRE ORGANIZATION AGILE 	The failure of traditional management has led to the reinvention of management: the whole organization must be focused on creating a stream of additional value to customers through continuous innovation. The reinvention reflects an application of Agile thinking to the whole organization. \\n\\nThe session shows how applying Agile thinking to the whole firm involves five fundamental shifts in terms of the firm's goal, the role of managers, the way work is coordinated, the shift from value to values and the shift in communications shift from command to conversation: http://bit.ly/bryJHX	Leadership	Workshop	2011
11136	Experiments: how does team structure affect behavior?	When several teams work within the same codebase they share a lot responsibilities. For example, all teams are equally responsible for keeping the build green. However, teams are also committed to sprint goals that are independent from each other. So what happens when the build breaks and the sprint is nearing its end? Let's experiment how structure affects behavior and try to find structures that enhance responsibility. 	Collaboration Culture & Teams	Workshop	2011
11137	Three Months from Idea to Implementation: Jumpstarting Agile in Nuclear Power	We had 3 months to plan the production for 80 control systems intended for a Westinghouse nuclear power plant simulator.  We were on the critical path and our delivery dates were quickly approaching.  A chance introduction to agile principles offered a beam of light.  Within 3 months we held our first Sprint planning meeting, and, in 3 months, we delivered our first software release on-time. It was a significant team achievement that combined Scrum with complex embedded systems development.  Join us to learn what we did and what we learned from our mistakes.  \\n	Adoption & Transformation	Talk	2011
11140	The Fundamental Agile Apologetic	A talk based on the "big four" series by Jeff Langr and Tim Ottinger (from Pragmatic Bookshelf: http://agileinaflash.blogspot.com/2011/02/big-four.html ), this session tells us why the fundamental concepts of software design virtually require us to adopt agile practices.  The fourth in the series shows how software volatility further motivates automated testing, pair programming, continuous testing, continuous integration and constant attention to code quality.	Open Jam	Talk	2011
11141	How a Traditional Project Leader Transitions to Scrum	Transitioning from a traditional project manager to Scrum is challenging. The PMI Project Manager manages the project by ensuring that intermediate deliverables are delivered at various stages of the project. Agile development emphasizes the need for producing tangible results as soon as possible and as often as possible. The resulting role of an Agile project manager is fundamentally different from a PMI Project Manager. We will map the PMI responsibilities to Scrum and show a project manager how to more easily make the transition to an agile practice.	Adoption & Transformation	Talk	2011
11142	To Make a Long Story Short: Splitting User Stories	Large stories mix different levels of functionality, risk, and value. Large stories are disproportionately hard for teams to understand, estimate, and implement. There _is_ a way out: split stories to a manageable size, while keeping them valuable to customers. \\n\\nWe'll examine splitting and merging stories using a variety of concrete techniques. We'll see why splitting on technical lines sounds easy, but gives poor results. Finally, we'll practice applying splitting techniques. You will leave with a toolkit of 20 or more ways to split stories, directly applicable to your project.	Hands-on Learning	Tutorial	2011
11144	Applying Agile to the Operations of a Training Organization	ThoughtWorks Studios Workshops group has decided to  eat its own dog food  by running its training group using Agile practices.   This session will discuss the challenges of a training organization and how we successfully applied Agile practices to our operations.  Our training organization has two distinct tracks of work:  1) creating and managing our content and 2) managing training engagements.  Each track has its challenges, but we have found a way to apply Agile practices to both tracks of work.\\n	Business & Project Management	Talk	2011
11146	Seeing and Steering Systems:  Three Pragmatic Tools	When managers get out of the day to day work and focus on leading and improving the organization, they need a different set of tools.  These tools aren t new; but, they haven t been widely taught in management training programs. These tools help leaders at all levels move beyond "telling & selling," and provide a way to influence patterns of behavior, understand causes and effects, and generate options for action..\\n\\nIn this session, I ll cover three pragmatic tools:  Eoyang CDE, Expand the Problem Horizon, and Finding Factors.\\n	Leadership	Tutorial	2011
11147	Team Traps	Some teams soar; others wallow, bicker and slog their way to uncertain results.  Teams that soar have a few things in common: they have a shared goal, interdependent work, complimentary skills, mutual accountability.  Slogging teams have a few things in common, too.  They fall into predictable traps.  What are those traps and how can you help your team climb out of them?  That s what Esther is here to talk about.\\n	Collaboration Culture & Teams	Talk	2011
11152	The Vision Thing: How Do _You_ Charter?	User stories describe features - _how_ a system will work - and may even describe value or purpose ("in order to..."). But stories are not the starting point: there's a deeper reason and deeper context for projects, often framed as some sort of _charter_. Charters (by whatever name) define projects' vision and mission, measures of success, boundaries.\\n\\nHow do you handle the chartering aspects of _your_ projects? Come to this peer-to-peer workshop, prepared to share what you do, and prepared to learn from others.  We'll work in small groups, then share results with the larger group. 	Open Jam	Workshop	2011
11165	A Transformation Path to Enterprise Agility: Change Levers, Leaders & Culture	Organizational transformation is a journey, not a destination. It requires discipline, patience & courage, leaders at every level, insight on culture, a stomach for change. It requires real teams & the will to endure for years.\\n\\nIn a fishbowl style consultation, one organization (will you volunteer?) will provide a realistic context to explore models of leadership, team dynamics, culture & change: the framework for deep, ongoing enterprise transformation. Meanwhile, participants organized into table teams will craft their own transformation plan, using a template & feedback from colleagues.	Adoption & Transformation	Tutorial	2011
11166	Agile and Kanban Work Together to Deliver Maintenance Releases	Agile and Kanban together to create maintenance releases separates the unpredictable job of fixing defects from the predictable work to validate them. Defect resolution times are hard to forecast because the environment may be hard to recreate and a safe fix may take analysis. Very short Agile sprints manage the constant prioritization of defects and team coordination. Defect validation time is more predictable and Kanban provides a reliable way to verify small batches of fixes for a maintenance release. Come learn how to use these processes together to improve your maintenance deliveries.	Agile Show & Tell - Lightning Talks	Demonstration	2011
11176	Leading Continuous Improvement in Established Agile Organizations	Many organizations believe they have successfully completed the transition to agile thinking. They follow a standardized "agile" process by rote, and they boast of horrifying process smells, like "We never miss a commitment!" Lost in the flurry of self-congratulation: The notion of continuous improvement. Lean thinking brings new models and analytical tools to the table. In this session we examine conventional agile practices through a lean lens to discover opportunties for improvement (mura, muda, muri) that are hiding within the canonical ceremonies of first-generation agile practice. 	Leadership	Talk	2011
11210	Overcoming Self-organization Blocks	We know that self-organization is a critical aspect of every successful Agile project and we know that it takes trust, respect, openness and responsibility; so why many teams have a hard time to achieve it? Self-organization changes the manager/team dynamics and the teammate/teammate ones. Resistance may arise and the source is frequently rooted in mental habits, such as  a latent blaming culture, confusing guidance and command, fear of taking responsibility or losing status, unconscious agendas. Attend this session to learn, through demos and exercises, how to deal with these kind of issues.	Collaboration Culture & Teams	Talk	2011
11212	Geek Leadership in Deep Legacy	The overwhelming majority of development is legacy work, and much of that is deep: 4 years or more. Geek leaders in legacy need reliable techniques for helping teammates develop skills and attitudes to tame the legacy Cthulhu.\\n\\nHere are five proven techniques geek leaders can use to slay the beast: __Tight-Focus Refactoring__, __Lottery Learning__, __Noob Spinning__, __Pressure Bottlenecking__, and __Blind Baby Stepping__.\\n\\nAs a technical leader in a legacy setting, you get to charm your team toward agile practice. Here are some tricks to bring with you.\\n	Leadership	Tutorial	2011
11215	Enterprise Scrum at Belgacom	Belgacom (Euronext: BELG), the largest telecommunications company in Belgium, is transitioning to Agile with sponsorship from senior management. In this session we will give a recount of the fronts that have been successfully tackled so far: Running pilot projects, building an Enterprise Scrum transition team, combining waterfall with Agile, distributed Agile, financial governance, fix-priced projects and RFPs (agile contracts), PMO, project governance, training, technical practices, busting silo thinking within operations, and Agile with large packages such as Siebel, PeopleSoft and SAP.	Enterprise Agile	Talk	2011
11219	Agile Adoption in a non-Western cultural context: Is it any different?	The Agile Manifesto s values and principles need to be applied differently in different cultural contexts. Raya Software made the decision to transform its practices to those of agile software development in early 2008. As an Egyptian company, it was faced with challenges specific to Egypt s cultural context.\\n\\nThis session aims to share adoption insights with non-US companies that want to embark on the journey towards becoming an agile organization, describing a mental model to plan for such a transformation. It also has relevance for US-based companies working with offshore partners.\\n	Adoption & Transformation	Talk	2011
11254	Zero to Agile in 3 to 5 years - It's a Marathon, not a Sprint	Transforming mid-to-large-sized organizations requires much more than an introduction of agile principles and practices to teams.  Any agile introduction is the start of a cultural, structural, political, and personal transformation, and to be successful requires understanding, commitment  to focus on all of these dimensions...and...time.\\n\\nStories abound about large companies starting agile transformations and resulting in reversion to the old ways, or some other state of "hybrid" agility.  This talk is about an effort to change a large company holistically.	Adoption & Transformation	Talk	2011
11266	Architecture and Design Evolution	How do we evolve the architecture and design of a product iteratively and incrementally in Agile? Without a complete and robust architecture and design upfront, would the product not run significant risks? These are some of the questions that challenge a team that is new to Agile. In this talk, we shall learn the practices and principles of agile architecture and design.\\n\\nWith examples taken from real projects, the talk will illustrate how incremental architecture and design decisions are built into a product across iterations, through stories where they are required.	Agile Boot Camp	Talk	2011
11270	Anatomy and Physiology of an Agile Transition	Starting as a coach of a team with almost no agile experience and an release pending was quite daunting. Change was slow and at first it seemed like we might not succeed in converting the team and delivering the product. It took patience, support at many different levels of the organization, and hard work from many different people to put this team on the path to becoming a functional and productive agile team. Now the team is growing as a successful and productive agile team. I am proud to have been a part of going from mostly offshore waterfall development to a local agile development team.	Insights - Experience Reports	Experience report	2011
11272	Undoing Performance Review Damage - Coaching towards Customer Purpose	The Performance Review survives almost intact in most organizations despite the ever increasing rate of adoption of agile and lean techniques. Unfortunately attempts at motivating and engaging employees from such a mindset is more likely to cause damage. Help your coaching clients to understand the pain of the Mass Production mindset with an experiential simulation. And then see within the simulation how coaching can help adjust the process to use intrinsic motivation through more deep understanding of customer purpose.	Coaching & Mentoring	Workshop	2011
11304	Building Great Teams	In coaching, I generally find teams assembled with some thought to colocation and skills. At best they ve been through agile training, picked a team name, and created team norms. Then it s time to get to work.\\n\\nThese steps can produce high performing teams. More often they produce average performance. \\n\\nRather than hope for greatness, helping teams form can ensure team members become equipped to deal with identity, trust, and task issues thereby generating agreement and commitment between the team members.\\n	Collaboration Culture & Teams	Tutorial	2011
11305	Making Hard Choices about Technical Debt	The technical debt metaphor acknowledges that teams sometimes accept compromises to meet an urgent demand. Although unmanaged debt can have disastrous results, strategically managed debt can help businesses take advantage of time-sensitive opportunities. During this session,we will play the Hard Choices game. In your quest to release a quality product, you must decide in the face of uncertainty whether to take shortcuts and incur penalties, or to traverse more of the board to potentially earn more value. At the end, we ll compare strategies and share practices to help make these choices.	Hands-on Learning	Workshop	2011
11309	What Makes Agile Great and How Can We Get More Of It?	As a successful practitioner of Agile, you are interested in the events that created our fantastic community. You have success stories to share. You are interested in future improvements. Come share your unique successes and help shape the future of agile.\\n\\nImagine it is the year 2022. What happened in 2011 that created the second, golden decade of agile? What monumental successes have we had since 2011?\\n\\nIn this workshop, inspired by the events at Snowbird in 2001 and 2011, you will create a manifesto or a call to action that will inspire our future community. \\n\\n	Hands-on Learning	Workshop	2011
11321	Growing Embedded Applications Organically with Ceedling and Friends	Our group of scientists have formulated a suite of open-source tools that make growing robust C applications an enjoyable endeavor. These tools facilitate organic growth of robust and maintainable applications. Unity, Ceedling, CMock and CException are open-source projects whose aim is to make setting up and growing embedded C applications a trivial effort so that developers can focus on features and content. A full overview of these tools will be given, followed by a demonstration of how these tools are used collaboratively to facilitate an efficient TDD workflow in C.	Agile for Embedded Systems Development	Demonstration	2011
11326	There is No Spoon: When Agile Becomes One with the World of Work	When we look at the Agile Manifesto we talk about people, interactions, collaboration and responding to change.  However, we fail by only relating it to software and customers.  It is time we started to embrace entire organizations being agile.  Even then it requires entire communities, systems and society to collaborate towards a common purpose.  When we move in that direction there is no agile only evolution.	New Horizons & New Voices	Talk	2011
11327	Getting beyond 'good enough' - a user goal based framework for Agile Delivery	Agile delivery typically focuses on the prioritisation and development of atomic user stories. Often the focus is on developer throughput and misses the overall value proposition of the software from the perspective of the end user. This session will introduce a user goal based framework for setting up and managing Agile projects for success. It will introduce an approach to Goal Driven Development that will allow stakeholders/Product Owners to take a user centered approach to delivery from requirements capture, through planning and into development to deliver software that delights the user.	User Experience & Interaction Design	Talk	2011
11343	The PO Role - Can you hear me now?	Transition from the PM & BA role to the PO role can be challenging but rewarding. In our organization, the PO role has tremulously evolved and we have made it a role that does not have very specific boundaries. The PO role has empowered and enabled traditional PM & BA to take ownership and be decision makers.  When they speak teams and sponsors listen.  However, with great power, comes great  responsibility.  In this session, I will highlight how the PO role has evolved in our organization and some lessons learned of the role .\\n	Agile Show & Tell - Lightning Talks	Talk	2011
11344	Managers vs. Agile Teams: Who Makes the Decisions?	Agile teams face daily decisions in a dynamic environment. Participants in this workshop will learn key strategic & tactical decisions agile teams make, including how they draw on experience to drive decisions. This is an interactive session that reviews how decision quality is assessed, how decision quality metrics are implemented and how metrics can be improved on their teams. Participants will rate their own levels of decision quality around particular agile activities. Participants should have some experience working on agile teams,e.g. as scrum master, product owner, tester, developer.	Collaboration Culture & Teams	Workshop	2011
11350	Get to CMMI ML3 Using Agile Development Processes For Large Projects	This session will discuss how VSTI, a SAS Company, obtained their CMMI Maturity Level 3 rating while doing agile development processes for large projects (over 30 developers). This will cover automation of documentation and best practices for obtaining a rating of CMMI ML 3 with a large development project, while adopting Agile and Scrum processes. Agenda:\\n\\n1) The major points where Agile and CMMI seem to conflict \\n2) How to get past this conflict and still be productive by: \\n   a) Using proper tools to help save time \\n   b) Automating documentation \\n   c) Daily scrums are critical!	Agile Show & Tell - Lightning Talks	Talk	2011
11352	Increasing Learning in an Agile Environment: Lessons Learned in an Agile Team	Learning and agile are highly related. In the last 3 years, the knowledge of the team increased in all aspects: technically and socially. Everyone in the team, from interns to more experienced programmers, ended up as high-skilled programmers, using (and understanding) all recommended best practices. In this report we will present some techniques we used to enhance learning in our work environment, such as Book Club, Brown Bags, Dojo sessions, Pair Programming, Open Spaces, etc.	Insights - Experience Reports	Experience report	2011
11369	Next Generation Model-Driven Development for Agile Projects	An overview of model-driven development and the new concept of "continuous model transformation" within the context of agile projects accompanied by real-world examples based on an open source MDD toolkit.  A discussion of how using MDD and Agile together results in higher quality results though continual shortening of the development-feedback loop and template-based evolutionary architecture methods. How to use MDD to generate automated tests to jump-start test development. This talk will present a case study of two successful projects that demonstrate the MDD-Agile value proposition.	Development Languages Practices & Techniques	Talk	2011
11370	Cultural Architecture	If our business culture was a product, how would we re-architect it? Culture influences everything. So how can we influence culture? What tools help us understand cultural influences, from the implicit, the elements we don't even think about, to the visible, the artifacts that lead to stereotypes? Adopting an Agile culture, when it is under-laid with the cultures of the world is challenging. Reconciling cultural dilemmas drives collaboration and innovation. Culture is the core of it all. Knowing this, you can create a pull for cultural change in your organization.\\n\\n	Collaboration Culture & Teams	Talk	2011
11376	Why Can t We All Just Get Along? Improving Designer/Developer Collaboration	The relationship between designers and developers is often portrayed as adversarial but it doesn t have to be that way! User experience (UX) professionals and engineers have a golden opportunity to work closely throughout the entire Agile development cycle to build better products. In this session Agile team members will identify breakdowns in their own teams  collaboration and learn practical solutions that help designers and developers work more efficiently and more happily. Through interactive exercises attendees will share their own experiences and learn from other practitioners.  	User Experience & Interaction Design	Talk	2011
11379	The Only Agile Tools You'll Ever Need	Do you need a high-end agile project management tool to support your growing agile adoption? Or do you need a high-end tool because your adoption has strayed from agile values?\\n\\nLow-tech tools such as information radiators and index cards can provide great results, but how do you use them most effectively? What's the sweet spot for high-end tools, and how do you prevent them from sapping productivity? What tools are missing from the spectrum of software-based tools? \\n\\nDisclaimer: This is *not* a vendor pitch, and the speaker owns no stock in companies that produce index cards. :-)	Adoption & Transformation	Tutorial	2011
11382	Agile Office Spaces - Enabling Collaboration and Agility	Your Agile team has the right processes, engineering practices, tools, people, and technology, but what about your office space? Sure, you have a prominently displayed Scrum board, but does your physical environment enhance your collective Agility? \\n\\nDrawing from experiences at Agile shops and government offices, and in collaboration with his wife (Conni Gutierrez Cheng, a professional interior designer specializing in collaborative office spaces), Richard Cheng will lead a workshop session to bring together experiences of the attendees to create a shared learned experience.\\n\\n\\n	Collaboration Culture & Teams	Talk	2011
11391	Will Pair Programming Ruin Your Team?	A lightning talk based on the article at :\\nhttp://agileotter.blogspot.com/2011/01/pairing-competence-and-recognition.html\\n\\n	Agile Show & Tell - Lightning Talks	Talk	2011
11393	Acceptance Test Design Principles	Are you designing your agile acceptance tests (ATs) well? I've derived (with the help of Tim Ottinger) and used a list of seven principles to vet the quality of ATs. I've found these principles very useful in helping agile teams improve their tests. Good ATs are:\\n\\n* Abstract\\n* Bona fide\\n* Cohesive\\n* Decoupled\\n* Expressive\\n* Free of duplication\\n* Green\\n\\nYou'll see ATs (based on real agile team examples) that show violation of the principles and subsequently improved tests that adhere to the principles. One minute per principle, and one minute to wrap up!	Agile Show & Tell - Lightning Talks	Tutorial	2011
11431	Beyond Metrics	NOTE: There is a size limit for 2MB for presentations, so tweet either @adhondt or @ravindar to get the full slide deck.\\n\\nMetrics should only be used to measure progress until a specific goal is reached, after which we no longer track it. Instead, we learn to focus on more holistic goals and intangible indicators that keep a team humming along smoothly. Team energy, communication patterns, slack and reflection are much more important to increasing productivity than any myopic set of metrics.	Adoption & Transformation	Tutorial	2011
11432	Definition of Ready	Definition of Ready is a set of agreements that lets everyone know when something is ready to begin, e.g., when a user story is ready to be taken into a sprint, or when all necessary conditions are right for a team to start a sprint. Definition of Ready does not attempt to turn a user story into a specification, but instead creates an interesting social agreement between the various stakeholders involved in delivering a product or system. 	Agile Show & Tell - Lightning Talks	Talk	2011
11436	The Story of the Wall	Do agile teams really still use index cards, PostIt notes and walls for planning and managing projects? Yes, absolutely. Even in this age of sophisticated tool support it is hard to beat the raw power and efficiency of working with physical media and using walls to display information. Using photos, videos and music, this talk describes the experiences of several teams from the perspective of the walls in the room. From architecture, requirements, planning, and sizing, to tracking project progress, see how teams use paper, markers and walls to foster collaboration, innovation and teamwork. 	Agile Show & Tell - Lightning Talks	Talk	2011
11440	From 'Team' to 'Wow team': an agile team's journey	Our department had been practicing Agile for three years. In the first two years, we learnt how to be really good. Then we began to plateau...complacency crept in, we drifted away from the spirit of agile and began to skip the basics. In this talk we describe we overcame this. How we went from being a team on the slide to a "wow team" by seeing every problem as an opportunity, converting small thoughts into great ideas and finding innovative solutions for problems.\\n\\nDo you want to know the simple yet powerful basics that can make a huge impact and make your team a Wow Agile Team?	Insights - Experience Reports	Experience report	2011
11447	Refactoring in the 4th Dimension	Time is the 4th dimension. We don't pay enough attention to it. We \\nmake assumptions about how changes occur in our code based upon static analysis \\nand tools like the Open/Closed Principle, but we can make our decisions \\nbased on actual data: we have version control histories of our code.\\n\\nIn this workshop, we will mine several projects and look for \\nearly indicators of souring code and evidence of effective refactoring.  We will \\nexplore the notion that we can learn from the history of our own code.\\n\\nParticipants should bring a laptop with git and Ruby 1.8.7 or higher installed	Development Languages Practices & Techniques	Workshop	2011
11449	10 Minutes to a Better Standup	OK, you know the standup is supposed to last 15 minutes, but yours' last 45 minutes or more.  You wonder, how can we say anything useful in 15 minutes? \\n\\nIn this 10 minute lighting session, which by the way is shorter than your standup, we will use a sample Team Board (I did say Team Board, not Task Board) to demonstrate how to hold an effective standup that will allow your team to quickly coordinate, and thus self manage their efforts.\\n\\nWe will also learn more about the Almost Daily Sit Down, and learn how sit downs, can be the cure for your sick standups!\\n	Agile Show & Tell - Lightning Talks	Demonstration	2011
11452	Scaling and Failing - The Human Limits of Effective Software Development	In this lightning talk, Michael Feathers will make the argument that most Agile adoption problems are fundamentally scaling problems. He will then relate two case studies which point toward the sort of advantage we might gain if we thoroughly embrace the limits of scale rather than trying to finesse them away.	Agile Show & Tell - Lightning Talks	Talk	2011
11455	Enterprise Coaching - Practical Lessons Learned	Coaching in the enterprise requires creative initiatives and appreciation of the long view of organizational change. This discussion reveals the story of one company's ongoing agile adoption from a coaching perspective and invites participation from attendees to add to the conversation, ask questions and challenge ideas. I intend to provide several practical concepts for other coaches and attendees from large organizations to take back with them to try in their own context.	Coaching & Mentoring	Talk	2011
11473	Building an Agile Culture in a Regulated Environment	Omnyx, a GE Healthcare venture, has implemented scrum ground up, intentionally shaping the organization, cadence, and office space and focusing strongly on culture, core values, and team building activities. Writing a new Quality System allowed bridging the traditional divide between agile and regulated environments. Using a continuous Alpha/Beta process, we effectively incorporated stakeholder feedback while still working on our initial product launch for 2+ years. We firmly believe that culture is the most underestimated aspect of agile and it needs to be #1 priority for any agile leader.	Collaboration Culture & Teams	Talk	2011
11479	Slackers and Debtors: Meet Commitments, Reduce Debt, and Improve Performance	Does your team have trouble finishing its stories every iteration? Is your "done done" actually a "maybe maybe?" Are you constantly removing stories from your plan? If so, this session will help. We take a close look at the relationship between technical debt, velocity, and iteration slack. We teach you how to use slack to achieve a stable iteration velocity, increase team performance, and get your stories "done done" every time.	Hands-on Learning	Tutorial	2011
11482	Raconteur: luring programmers into testing and testers into coding	Raconteur is an acceptance test framework inspired by Fitnesse and Cucumber. Its goal is to help shorten the developer-tester gap. It lures programmers into writing ATs in the comfort of their IDE and favorite xUnit. The testers get to share the same tool, enjoying intellisense and refactorings, while keeping the test syntax that they are used to.\\n\\nThis session will demonstrate the main capabilities of the tool from the perspective of what is innovative in the approach. Fundamentally, we will provide a glimpse at how IDE integration blurs the boundaries between testing and coding.\\n\\n\\n	Testing & Quality Assurance	Talk	2011
11493	Faster Usability Testing in an Agile World	The sheer speed of an Agile project can be frightening to even the most experienced UX practitioner. In this session you will learn how usability testing can be conducted very quickly, without sacrificing quality. We will cover strategies and techniques that can be used for speeding up traditional usability testing, on-site, remote and Rapid Iterative Testing and Evaluation (RITE) methods. We will cover usability testing from planning through analysis, and ways to provide useful and usable recommendations to the team. 	User Experience & Interaction Design	Tutorial	2011
11494	10 Minutes to Testable Specifications	Come to one of Agile 2011's fastest paced workshop and learn the basics of creating testable specifications that drive requirements clarity, engender collaboration, increase estimation accuracy, and cure many of the ills that plague agile projects today.  \\n\\nWe won't make you an expert, but our acceptance criteria for this session is that you will leave with an understanding of how testable specifications improve your requirements and how the approach varies from the Test Drive Development that developers do.	Agile Show & Tell - Lightning Talks	Workshop	2011
11502	Bad-Assed Double-Loop Learning: From Judgmental to Good Judgement	"We all know" Agile leaders foster self-organization, so why do many have little effect on their teams, or worse, actually harm their effectiveness?\\n\\nPeople act in ways that are rational to them, but differences in mental models can make people seem irrational. By uncovering your team s mental models, you can help them achieve a common rationale. This leads to stronger, integrated teams.\\n\\nScrumMasters, Coaches, Managers, & Team Members will participate in robust scenarios based on team simulation in aviation and healthcare. You will leave experience directly applicable in your workplace.	Coaching & Mentoring	Workshop	2011
11517	Agile and the 21st Century Corporation	**The new economic and social century** is pressing on organizations from every side. What conditions will make demands and how will we adapt? Will Agile provide a long term delivery capability and business solution in the face of a frantic economic reality? Will our competitive nature give us the freedom to build partnerships, even with those outside of our organizations who have heretofore been our enemies? Can we build a creative ecosystem that will last beyond fads and overcome fear of change? Join us for a dialog & workshops on preparing to meet these challenges in our own organizations.	Business & Project Management	Workshop	2011
11536	Telling Better Stories with User Story Mapping	User story maps help us understand the product we're building, break in down into small pieces to build iteratively and incrementally, and effectively plan minimal viable product releases in holistic product slices.  In this quick tutorial participants will learn the basics of user story mapping by building their own story map quickly and collaboratively.  They'll see examples and hear stories of a wide variety companies who've used story maps to simplify backlog building, planning, and delivery.\\n	Working with Customers	Tutorial	2011
11537	Agile Methods Influencing Non-IT Projects	One software development team has found that its agile team practices have been emulated by several of its clients and admirers for non-software projects.  Learn how practices such as short iterations, daily standup, storycards, early releases, and pairing have been adopted in organizations for projects that might surprise you.  These organizations include a law office, manufacturing plant reconfiguration, architecture, industrial lighting, and book publishing.	Business & Project Management	Talk	2011
12633	Making team flow and progress business readable	The last two years we adopted BDD/ATDD, including automated acceptance criteria validation while preserving their business readability (using specification-by-example). \\nAs a side effect of this practice, progress became more transparent:instead of just seeing remaining work and stories done, we track individual ACs showing progress in a business readable form.  This helps testing and early feedback.\\nThe talk shows how automated AC validation increased transparency in our project and briefly walks through our AC refinement flow, how we monitored progress and merged into living documentation.	Agile Show & Tell - Lightning Talks	Talk	2011
12637	Agile won't work here... really?	In this session, the presenters will share their experiences implementing Agile in what many people believe to be incompatible environments. In the first half of this session, Candi Rai will discuss how they adopted Agile in their mainframe COBOL environments in order to save $500,000 in costs while simultaneously increasing customer satisfaction. In the second half of this session, Marc-Ellan Begin will discuss how the European Space Agency (ESA) is adopting Scrum with industrial contractors in a fixed-price contracts context, replacing their traditional waterfall processes.	Adoption & Transformation	Talk	2011
12639	Refactor Your Wetware	You are used to working with software and hardware, but what about working with wetware your own brain? Do you know the best ways to learn, or to think about solving problems? In this one workshop we ll journey through bits of cognitive science, neuroscience, learning and behavioral theory.\\nYou ll see surprising aspects of how brains work and see how to beat the system, improving your own learning and thinking skills.\\n	Collaboration Culture & Teams	Tutorial	2011
12642	Climbing and Governing the Enterprise Agile Mountain	   It s too risky for our financial institution customers; No requirements - no way!, Regulatory auditors will eat us alive ,&   2 Years Later:  these concerns & more were solved to move to Enterprise Agile.  With a strong vision, a worker-derived roadmap, heavy change management lifting, and internal agile coaches, we did it.  What did those look like?  How were  hearts & minds  won?  What teams, tools, training, & rewards, drove the change through?\\n	Enterprise Agile	Talk	2011
12643	New Ideas and Emerging Results workshop	The workshop will provide an excellent opportunity to present and discuss opinions, ideas and suggestions for future research. We aim to bridge the gap between research and practice through presentation of position papers, alongside partners from the agile practitioner community.\\nSix position papers will add to the body of knowledge on agile methods and processes, agile teams and people, and the tools and practices that support them. Presentations of position papers with first authors: Mark Mahoney, Morgan C. Benton, Celio Santana, Yaser Ghanam, Renan de Melo Oliveira and Bill Curtis.	Research at Work	Workshop	2011
12644	Research Methods Workshop	To produce research results of importance it is crucial to apply the right research method. This workshop focuses on the challenges of applying research methods to study agile software development. Authors of accepted full papers in studies of agile software development are invited to give a short presentation of their research method, and there will be discussions on how to apply case studies, experiments, surveys and literature reviews. This workshop is intended for researchers.	Research at Work	Workshop	2011
12646	The home ground of Automated Acceptance Testing: Mature use of FitNesse	The concept of automated acceptance testing (AAT) has had nearly a decade to mature. While it has their score of supporters, it has not been embraced as a silver bullet for software development. The problem is that knowledge of when and where to fruitfully apply such a tool and method is scarce. In this article we describe a project group where the developers by their own account successfully use FitNesse. By describing how they select the appropriate places to use FitNesse, and how they use it, other practitioners can apply this to their domain. This corresponds and adds to recent research.\\n	Research at Work	Talk	2011
12647	Reconciling Perspectives: How People Manage the Process of Software Development	Social factors are the significant cost driver for software development and in this field study we develop a grounded theory of how people manage the process of software development. We discovered the main concern of those involved in the process of software development is getting the job done and to get the job done, people engage in a constant process of Reconciling Perspectives.  What this theory reveals is the importance of individuals  ability to reach out and engage in negotiations to the success of a software project.	Research at Work	Talk	2011
12648	Collaborative Events and Artefacts in Agile Teams with Interaction Designers	We studied 4 agile teams including interaction designers, since the integration of interaction designers on agile teams is an open issue. We found some designer-developer collaborations were for planning, but most were for enacting plans.  These latter collaborations took three forms:  scheduled, impromptu and chats. Regardless of the form, all designer-developer collaborations were mediated by twelve categories of artefacts.  These helped to determine, more precisely what to create.   We discuss implications of our observations for theory and practice. 	Research at Work	Talk	2011
12649	User-Centered Design and Agile Methods: A Systematic Review	This paper presents the results of a systematic review of existing literature on the integration of agile software development with user-centered design approaches. Through systematic and rigorous research methods and data analysis, this paper shows that a common process model underlies such approaches and discusses which artifacts are used to support the collaboration between designers and developers.	Research at Work	Talk	2011
12650	There's Something About Lean: A Case Study	An idea gaining significant interest at the moment is  how can we apply lean manufacturing principles to software development?  There is however, limited information on how Lean is being used by industry practitioners and if the principles and practices are as effective as current interest levels suggest it might be. We have used a case study to explore the practicalities of how one high-performing, open source team, has adopted Lean practices. We found that the existing\\nmeritocratic culture of the team under study appears to have greatly assisted the team s adoption of Lean principles.	Research at Work	Talk	2011
12652	An Agile approach to optimising our digital strategy	 Today, the most popular way people prefer to make contact with organizations is online as customers embrace new digital channels. We needed to modernize our digital presence to take the conversation to the channels where those conversations are taking place. Utilizing an Agile approach allowed us to increase site usability and responsiveness to consumer needs.	Agile Show & Tell - Lightning Talks	Talk	2011
12653	Understanding Post-Adoptive Agile Usage   an Exploratory Cross-Case analysis 	The widespread adoption of agile methodologies raises the question of their continued and effective usage in organizations. An agile usage model consisting of innovation, sociological, technological, team, and organizational factors is used to inform an analysis of post-adoptive usage of agile practices in two major organizations. Analysis of the two case studies found that a methodology champion and top management support were the most important factors influencing continued usage. Both horizontal and vertical usage was found to have significant impact on the effectiveness of agile usage. 	Research at Work	Talk	2011
12655	The Combination of Agile and Lean in Software Development 	Recently there has been a noticeable focus shift from agile methods such as XP and Scrum to lean, indicated as  from agile to lean . However, the reality may not be as linear as the term implies. To better understand the combined use of both, the experience reports published in the past agile conferences were examined. The study shows that the two can be combined in different manners for different purposes. Lean is often applied as guiding principles for agile development. When combined at the practice level, flow-based lean processes tend to substitute time-boxed agile processes.	Research at Work	Talk	2011
12656	IEEE Best Paper - Decision Making in Agile Development: A Focus Group Study	Abstract This research defines decisions made across four periods of the sprint cycle based on input from a focus group conducted with 43 people on agile teams. Results indicate that Sprint Planning includes decisions about planning work for the subsequent sprint, Sprint Execution includes tactical implementation and development decisions, Sprint Review includes decisions about continuing future sprints based on customer product satisfaction, and Sprint Retrospective includes decisions for improving the sprint process. Six key decision making obstacles were also identified.	Research at Work	Talk	2011
12657	Enacted Routines in Agile and Waterfall Processes	Agile methods form an alternative to waterfall methodologies. Little is known about activity composition, the proportion of varying activities in agile processes and the extent to which the proportions of activities differ from  waterfall  processes. In the current study, we examine the variation in performative routines in one large agile and traditional lifecycle project using an event sequencing method. Our analysis shows that the enactment of waterfall and agile routines differ significantly suggesting that agile process is composed of fewer activities which are repeated iteratively.	Research at Work	Talk	2011
12659	Survey of Agile Tool Usage and Needs	The usage of and satisfaction with tools supporting Agile methods has been and remains an unexplored area. Most existing tool surveys have been subjectively conducted by tool vendors, clearly focusing on company structure and a specific Agile method rather than on tool usage and needs. In this paper, we report on a vendor-independent survey on tool usage covering 121 responses from 35 countries. Our results show that the most and least satisfactory tool aspects are ease of use and lack of integration with other systems, respectively. We report on desired tool features and received comments.	Research at Work	Talk	2011
12661	Rule-Based Exploratory Testing of Graphical User Interfaces	This paper introduces rule-based exploratory testing, an approach to GUI testing that combines aspects of manual exploratory testing with rule-based test automation. This approach uses short, automated rules to increase the bug-detection capability of recorded exploratory test sessions. A preliminary evaluation found that this approach can be used to detect both general and application-specific bugs, but that rules for general bugs are easier to transfer between applications. Also, despite the advantages of keyword-based testing, it interferes with the transfer of rules between applications.	Research at Work	Talk	2011
12662	Agile Team Perceptions of Productivity Factors	In this paper, we investigate agile team perceptions of factors impacting their productivity. We here conducted two case studies\\nin the industry and analyzed data from two projects that we followed for six months. From the perspective of agile team members, the three most perceived factors impacting on their productivity were appropriate team composition and allocation, external dependencies, and staff turnover. Pair programming and collocation were the main agile practices impacting productivity. Finally, most team members did not share the same understanding of the concept of productivity.	Research at Work	Talk	2011
12665	Why Scrum works	Scrum seems to work extremely well as an agile project management approach. An obvious question is why. To answer that question, we carried out a longitudinal case study of a distributed project using Scrum across Denmark and India. In our analysis of case study data we used three selected theoretical frameworks. We conclude that Scrum works so well because it provides communication, social integration, control, and coordination mechanisms that are especially useful for distributed and agile project management.	Research at Work	Talk	2011
12666	How to Save Your Industry $1.9B using Agile Methods	My Industry was faced with Legislation to reduce Govt Rebates to the Health Industry by $1.9B. As the key lobby group, we embarked on a digital strategy to support the campaign. We adopted an Agile approach in order to have a skinny website and mobile app up and running as soon as possible. Weekly sprint planning allowed us to build iterative changes into the release strategy in order to respond to stakeholders and the political debate. Kanban was utilised to prioritize widgets we required on the website and ensure our campaign remained responsive to stakeholders.	Agile Show & Tell - Lightning Talks	Talk	2011
12692	Why Care about Positive Emotions?	Dr. Barbara Fredrickson and her colleagues have found that positive emotions literally change the way the human brain works, widening people's perspectives, and their outlooks on life. According to Fredrickson s broaden-and-build theory of positive emotions, this shift in mindset drives people to discover and build new traits, skills, and resources, and over time become better versions of themselves. In this presentation, Dr. Fredrickson will describe the science that backs up these claims and and describe the nonconscious upward spiral processes that enable people to thrive with agility.	Keynote	Talk	2011
12693	Code	Code is the stuff of software. It is the definition of the software. It is the enabler of functionality, the realizer of business value, the expression of understanding. It is also an expression of misunderstanding, a resister of change, a source of sunk costs.\\n\\nBut the word code has meanings beyond source and binary. In a broader sense, code and codes are also the stuff of software development. There are cultures of programming, principles of practice, manifestos of desire. Code refers to a set of conventions by which a group of people will govern themselves.\\n\\n	Keynote	Talk	2011
12694	 The Power of an Agile Mindset	I've wondered for some time whether much of Agile's success was the result of the placebo effect, that is, good things happened because we believed they would. The placebo effect is a startling reminder of the power our minds have over our perceived reality. Now cognitive scientists tell us that this is only a small part of what our minds can do.\\n\\nResearch has identified what I like to call "an agile mindset," an attitude that equates failure and problems with opportunities for learning, a belief that we can all improve over time, that our abilities are not fixed but evolve with effort. 	Keynote	Talk	2011
12706	Making the most of manual testing in a quality focused Agile team	Atlassian is an agile shop, with heavy emphasis on the quality of our products. With the increased focus on great UX, we have focused in the past few years on growing a QA testing function which complemented the automated testing in development. In this talk, I will share some of the challenges we faced, including:\\n\\n* Incorporating manual testing into two-week iterations, while achieving the goal of having shippable products at every iteration.\\n* Ensuring clear communications between QA, developers and PMs, and providing visibility of testing in a script-free testing environment.	Agile Show & Tell - Lightning Talks	Talk	2011
12709	Leading the Agile Release Train	The Agile Release Train (ART) is a scaling model for enterprise Agile programs.  How can the key event -- the Release Train Planning Meeting -- be kept on track?  Enter: The Release Train Conductor, a strong leader with the tools to run a two day meeting of 100+ people to synchronize large-scale planning!	Agile Show & Tell - Lightning Talks	Talk	2011
12711	The Three Ingredients of a GREAT Product Owner	One of the most important components of successfully applying an Agile approach is ensuring that the right product owner is identified.  This attempt to find the right business representative has proven to be challenging in most organizations because they are uncertain about what they should be looking for.  This short session will review the 3 most important ingredients you should consider when seeking to fill the role of product owner.	Agile Show & Tell - Lightning Talks	Talk	2011
12712	When User Stories Just Don't Fit in a Short Sprint	In a complex environment, it can be impossible to write user-valued, end-to-end user stories that fit in a short sprint. In this talk, we'll understand the potential waste of trying to make stories _too_ small. I'll explain ways for teams to keep the value and fast feedback of short sprints without sacrificing the goal of having end-to-end user stories. Hint: you may have to set aside some of your Scrum dogma.	Agile Show & Tell - Lightning Talks	Talk	2011
12715	Design, Style, and Flavors   Their Influence on Agility (BoF)	Join us for a group discussion on how languages and coding idioms influence agility. Bring your favorite examples that influence your code, in any language. We'll set up a projector so we can demonstrate our ideas to the group.\\n\\nHere are some of our favorites:\\n\\n1) Filter, Map, and Fold: the power tools of modular, reusable code.   \\n2) Alternatives to the Visitor Pattern\\n3) Avoiding Nulls with the Option Type\\n4) Concurrency Models: Actors, Software Transactional Memory, etc.\\n\\n	Development Languages Practices & Techniques	Workshop	2011
12716	Three Ways UX Gives You Better Story Sizing and Coverage	Stories give the customer what they asked for, but not always what they really wanted. Learn three practical tips for how to integrate UI design work with story development, to both get more realistically sized stories, and the user experience that the customer wanted but didn't know how to ask for.	Agile Show & Tell - Lightning Talks	Talk	2011
12718	Does Agile Focus on Value Delivery	Lean process has an exceptional focus on providing value to the customer. I ve often seen when groups are considering an agile transformation they are focusing on faster iterations, but faster iterations of what? An agile team can certainly deliver faster iterations of what the customer doesn t want. This lightning talk shows simple methods to ensure that Agile teams are focusing on value delivery along with speed. I will show how the user story/acceptance process can also focus on customer value. We will focus on Kanban and Kaizen as methods to utilize in the Agile value stream.	Agile Show & Tell - Lightning Talks	Talk	2011
93	THE CURRENT CONVERSATION IN AGILE SOFTWARE DEVELOPMENT	Every 3-6 months, the conversation around the term "agile software\ndevelopment" changes. First it was, "What is 'agile'?", then "How do I do\n'agile'?", then it went to "How can / cannot 'agile' coexist or be mixed\nwith plan-centric approaches?" As of May (2002), the conversation was:\n"Contrast project strategies if the project's dominant priority is agility, or\nlaid-backness, or fun, or cost, or predictability." In this invited talk,\nAlistair Cockburn will describe the dominant conversation he is involved\nwith at the time of the conference. Current prediction has it that the May 2002\ntheme will still be current in early August.	Main conference	Featured Talk	2002
94	"You say you want a revolution ... "	XP/Agile are "revolutionary" approaches to software development.  The\nlatest in a distinguished lineage of such innovations.  A revolutionary\ninnovation does not, however, a revolution make.  What forces are at\nwork that will prevent XP/Agile from becoming truly revolutionary?  How\nmight the revolution be won?  Within the context of these questions we\nwill explore a bit of history, cultural anthropology, mysticism, and\nMaoism and outline future strategy.	Main conference	Featured Talk	2002
95	Triggers and Practice: How Extremes in Writing Relate to Creativity and Learning 	Several XP principles are used by creative writers all the time. Creative\nwriting is about exploration and learning. In this talk I examine the\nrelationships between learning and making things. We will see that\neverything worth anything is extreme.	Main conference	Educator's Symposium Special Presentation	2002
96	EDUCATOR SYMPOSIUM: XP AS A TEACHING PROCESS	Moderator\nJ. Fernando Naveda\njfn@cs.rit.edu\nPanelistsKent Beck, Three Rivers Institute\nkent@threeriversinstitute.org\nRichard P. Gabriel, Sun Microsystems\nrpg@dreamsongs.com\nJorge Diaz Herrera, Southern Polytechnic State University\njdiaz@spsu.edu\nWatts Humphrey, Software Engineering Institute\nwatts@sei.cmu.edu\nMichael McCracken, Georgia Institute of Technology\nmike@cc.gatech.edu\nDave West, New Mexico Highlands University\ndwest@cs.nmhu.edu\nAbstract:	Main conference	Panel	2002
97	EDUCATOR SYMPOSIUM:  EXTREME TEACHING -- AN AGILE APPROACH TO EDUCATION	Extreme Programming is built around core values, principles, and practices designed to align the experience of developing software with reality. You can set out to design your application with the assumption that you can anticipate all issues that will arise in a world of static requirements. What do you do when you come across an unforeseen problem or when the requirements change over time? What happens when new and better solutions become apparent in the course of development? Similarly, as instructors, we begin each new term armed with a syllabus and an idea of how the course will run. Then reality rears its ugly head. The software that was supposed to be installed in the lab for the first day of classes isn't installed. The textbook looked better when you evaluated it last spring than it does now that you are actually trying to teach from it. The students are either much quicker, much slower, or much more diverse than you anticipated. In this workshop we'll begin the process of selecting core values, principles, and practices that we can use to guide us in the classroom the same way that XP can help guide developers. We do not expect the practices of XP to map over. On the other hand, as an example, much of XP benefits from quick, accurate feedback. Several of the practices are based around this idea. Quick, accurate feedback obviously applies in the classroom as well and may suggest other values, principles, or practices.	Main conference	Workshop	2002
98	eXtreme Programming (XP)		Main conference	Special Presentation	2002
99	DSDM	DSDM	Main conference	Special Presentation	2002
100	Crystal	Crystal	Main conference	Special Presentation	2002
101	Agile Software Development and the Rational Unified Process(r)	There are some basic principles and values that make a software development project, or process, agile. Using the agile values and principles, we look at how a process framework such as the Rational Unified Process (r) can be configured to be agile. The presentation is based on examining a specific configuration of RUP and how it supports the agile characteristics. We look at common misconceptions about a process like the RUP, and show that most of the problems come from the different words used to describe the process, and the misapplication of the process.\nWe examine how a framework can be used to grow with a project and organization by providing a consistent set of best practices that may be applied as needed. All you need to do is add a healthy dose of common sense.	Main conference	Special Presentation	2002
102	FEATURES, USER STORIES, AND USE CASES: GATHERING REQUIREMENTS IN AN AGILE PROCESS	Choosing the right requirements vehicle can affect the dynamics of your software development process. Use cases continue to dominate the enterprise while features and user stories are gathering momentum. But which vehicle is right for your project? How can Feature-Driven Development and other agile processes be adapted to use other requirements vehicles? This presentation examines the changing dynamics of the use case, the value of the user story beyond extreme programming, and the increasing role of features in the development of software.\nGranville Miller\nSenior Technical Product Manager, TogetherSoft\nGranville has over a decade of experience in the object-oriented community. He is coauthor of the Advanced Use Case Modeling series and A Practical Guide to Extreme Programming. He has presented tutorials at various object-oriented technology conferences worldwide. His hands-on approach to object-oriented development has been the result of his work with companies that range from startups in the very early stages to some of the most established software giants. He is currently teaching seminars, tutorials, and classes in agile processes, methodology, and Java technology, as well as mentoring and helping to deliver aggressive projects.	Main conference	Special Presentation	2002
103	SCRUM -- AGILE MODELING	SCRUM\nAgile Modeling	Main conference	Special Presentation	2002
104	EMPIRICAL STUDIES I	EMPIRICAL STUDIES I\nExtreme Programming Used to Establish the Culture of a High Performance Team: Management Case Study,\nCircle of Life, Spiral of Death: Are XP Teams Following the Essential Practices?,\nTracking Test First Pair Programming -- An Experiment\nClement James Goebel III, Vinay Ramachandran, Anuja Shukla, Matevz Rostaher and Marjan Hericko	Main conference	Presented papers	2002
105	PAIR PROGRAMMING	PAIR PROGRAMMING\nPair Programming: Addressing Key Process Areas of the People-CMM,\nExtreme Interviewing,\nWhen Pairs Disagree 1-2-3\nGopal Srinivasa and Prasanth Ganesan, Clement James Goebel III, Thomas Meloche, Richard Sheridan, Roy Miller	Main conference	Presented papers	2002
106	INTRODUCING EXTREME PROGRAMMING AND AGILE METHODS	INTRODUCING EXTREME PROGRAMMING AND AGILE METHODS\n\nStrategies for Introducing XP to New Client Sites,\nTurning the Knobs: A Coaching Pattern for XP Through Agile Metrics\nTailoring XP for Large System Mission Critical Software Development\nJonathan Rasmusson, William Krebs, Jason Bowers, John May, Erik Melander, Matthew Baarman, Azeem Ayoob	Main conference	Presented papers	2002
107	TESTING	TESTING\nAcceptance Testing HTML,\nAn Informal Formal Method for Systematic JUnit Test\nCase Generation,\nA Light in a Dark Place: Test-Driven Development with 3rd Party Packages\nNarti Kitiyakara, David Stotts, Mark Lindsey, Angus Antley, James Newkirk	Main conference	Presented papers	2002
108	EXPERIENCE REPORTS	EXPERIENCE REPORTS\nAgile Project Management Methods for ERP: How to Apply Agile Processes to Complex COTS Projects and Live to Tell About It ,\nExtreme Programming in a Research Environment, \nEstablishing an Agile Testing Team: Our Four Favorite "Mistakes", \n Glen Alleman, William Wood, William Kleb, Kay Johansen, Anthony Perkins	Main conference	Presented papers	2002
109	EMPIRICAL STUDIES II	EMPIRICAL STUDIES II\nAgile Meets CMMI: Culture Clash or Common Cause?\nHow to Get the Most out of Extreme Programming/Agile Methods(wed only), \nEmpirical Findings in Agile Methods\nApurva Jain, Richard Turner, Donald J. Reifer, Mikael Lindvall, Vic Basili, Barry Boehm, Patricia Costa, Kathleen Dangle, Forrest Shull, Roseanne Tesoriero, Laurie Williams, and Marvin Zelkowitz	Main conference	Presented papers	2002
110	DISTRIBUTED TEAMS	DISTRIBUTED TEAMS\nSupporting Distributed Extreme Programming,\nExploring the Efficacy of Distributed Pair Programming\nFrank Maurer, Prashant Baheti, Edward Gehringer, and David Stotts	Main conference	Presented papers	2002
111	ARE TESTERS EXTINCT? HOW CAN TESTERS CONTRIBUTE TO XP TEAMS?	Moderator:\nKen Auer\nRoleModel Software\nPanelists\nRon Jeffries\nObject Mentor (www.objectmentor.com, www.Xprogramming.com)\nJeff Canna\nRoleModel Software\nGlen Alleman\nLisa Crispin\nAbstract:Format:	Main conference	Panel	2002
112	XP BEYOND LIMITATIONS	Panelists:\nKen Auer \nWard Cunningham \nRob Mee \nDon Reifer \nOrganizers:\nSteven Fraser (sdfraser@acm.org)\nRachel Reinitz (rachel@reinitzconsulting.com)\nModerators:\nBill Caputo \nBill Pyritz \nAbstract:Session Format:	Main conference	Panel	2002
113	EXTREME FISHBOWL	Directed by:\nZhon Johansen\nSymantec\nwith celebrity guest programmers and commentators including:Ken Auer\nRoleModel Software\nBrian Button\nObjectMentor\nAlistair Cockburn\nHumans & Technology\nJames Grenning\nObjectMentor\nKay Johannsen\nDuff O'Melia\nRoleModel Software\n\nAbstract:http://www.xputah.org/cgi-bin/wiki?ExtremeFishbowlAtXpUniverse	Main conference	Panel	2002
114	AGILE EXPERIENCES	Moderator:\nDave Thomas \nBedarra Corporation,\nCarleton University and University of Queensland\n\nPanelists\nJohn Manzo\nGeneer\nNarti Kitiyakara\nNOLA Computer Services\nRussell Stay\nSymantec\nAldo Dagnino\nABB\nAbstract:	Main conference	Panel	2002
115	Using Risk to Balance Agility and Discipline 	At the USC Center for Software Engineering we have found that risk analysis is a good way to address "how much is enough?"  questions for a given project situation.  This enables you to balance a project's mix of agility and discipline by considering the risks of having too little or too much of each.  I will illustrate this on several projects situations, show some ways in which hybrid agile and disciplined methods can be combined, and discuss the results of some recent workshops which have addressed this question.	Main conference	Keynote Address	2002
116	XP IN A LEGACY ENVIRONMENT	Summary \n        Extreme Programming is not just for the lucky few projects where applications \n        are built from scratch. Learn how XP's practices can be brought to bear \n        on a poorly designed and untested legacy code base in need of salvation. \n        The audience will operate on a J2EE version of the famous "Bowling \n        Score" application, developed under a waterfall methodology and set \n        within a living environment populated with convincingly nervous clients. \n        Duration: Full day Background\n        To implement new functionality and better usability on legacy systems, \n        XP practitioners must begin with a "recovery and stabilization" \n        phase, in which they erect the scaffolding of unit tests, continuous integration, \n        and other technical infrastructure essential to supporting XP's central \n        value of courage. Of course, this is easier said than done, because the \n        code was never designed to be unit-tested, and there is no continuous \n        integration. To top it all off, the client needs new functionality soon, \n        in order to realize their ROI, and the user interface needs to be overhauled \n        to meet basic standards of usability. How can all of this be accomplished \n        while managing risk?By completing this hands-on interactive tutorial, \n        participants will learn how to:  Structure technical infrastructure tasks within the overall release \n        plan.  Identify which XP practices can be implemented immediately on legacy \n        code systems, and which ones must be gradually introduced.  Use techniques for coping while XP practices are only partly implemented. \n         Establish when and how to proceed to deep information-flow refactoring \n        as the XP support infrastructure comes online.  Improve the legacy code base so that new functionality can safely \n        be added. Enhance the usability and user interface of the application \n        with minimal risk. \n        AudienceContent Outline\n       PrologueThe journey begins…\n          Participants will be introduced to a land under siege by a beastly application, \n          and an intrepid tribe of developers fearing for their livelihoods. These \n          are dangerous times, indeed. Chapter I: Hunting the Beast Scouring the land in search of the monster…\n          Using a legacy implementation of the ubiquitous "Bowling Score" \n          application as a J2EE project on the brink of failure, participants \n          will probe for weaknesses such as lack of testability and overly complex \n          design, answering questions such as: Why is it untestable, and how can \n          this be changed? Is this much complexity necessary? What's wrong with \n          its information flow and presentation?  Chapter II: Laying the Trap The beast is captured and immobilized…\n          Through role playing in a simple release plan, participants will seek \n          to establish control of the project. This will include stabilizing the \n          system with an automated build and unit tests, bolstering communication \n          between teams through the planning game, and introducing usability tests \n          into the user acceptance process. Chapter III: Taming the Beast The beast is taught not to bite the hand that feeds it…\n          Using control established in stabilization phase, participants will \n          begin to add value to the application, making it more usable and crushing \n          bugs mercilessly underfoot. This will be accomplished by means of acceptance \n          tests, code refactoring, and examination of the information flow and \n          visual presentation of the application. Chapter IV: Domesticating the Beast The beast is compelled to return its stolen value…\n          Participants will discuss how to implement new functionality while minimizing \n          risk, expand XP's influence by introducing previously subdued practices, \n          and introduce usability and GUI enhancements into the system, while \n          discussing how these practices can be cleanly integrated into XP and \n          increase project velocity. Epilogue And they lived happily ever after?\n          Participants will engage in a process reflection to review intricacies \n          and implications of the lessons learned.\n      About the Presenters Kuryan Thomas is a Technical Director at C.C. Pace Systems in Fairfax, \n        Virginia. Currently he is a Lead Developer and XP coach, and works with \n        developers and managers to help maintain and enhance a large J2EE application \n        using XP. Kuryan has over 15 years of experience with Object Technology \n        applications ranging from embedded real-time systems to enterprise-class \n        business applications. His professional interests include XP as a development \n        methodology, object oriented design and implementation, web services, \n        and mobile computing.Arlen Bankston is a Senior Consultant and User Experience Manager \n        for C.C. Pace Systems in Fairfax, Virginia. He is currently engaged as \n        a Usability & User Interface Design Mentor, in which capacity he works \n        with business managers and analysts to gather requirements and translate \n        them into usable interfaces, then with developers to implement these designs. \n        His professional interests include the integration of usability and UI \n        design best practices into agile methodologies, as well as the continuing \n        advancement of usage-centered design methods and processes in general. \n        Prerequisites:  \n        A laptop with JBoss 2.4.4 integrated with Tomcat 4.0.1. The combination \n        can be downloaded at http://jboss.org/binary.jsp.	Main conference	Tutorial	2002
117	SCRUM AND AGILE 101	Summary\nAgile processes are different. They not only increase productivity, they bring focus and pleasure back to systems development. This tutorial explains the underlying theory and practices of all agile processes, and then explains how they are implemented in Scrum. A case study is presented. An exercise is then conducted to give the tutorial attendees a feel for the flow, practices, and rules of Scrum. Tutorial attendees are organized into teams that collaborate with the customer to formulate an iteration, self-organize to identify the work in the iteration, report on progress and impediments during the iteration, and present the results of the iteration to the users. \nIf you are attending this tutorial and want to see Scrum applied to a product or system development at your organization, contact Ken Schwaber (ken.schwaber@verizon.net) prior to July 15. The most appropriate project will be selected and used in the tutorial.\n\nDuration: 3 hr (half day) \n\nAims\nTo provide the audience with a description of Scrum, why it works, and how it works. To describe the underlying basis and theory of agile processes, including emergence, self-organization, collaboration, iterations, and incremental delivery. To provide a first hand experience being in a Scrum team highlighting the different feel between agile and traditional processes.\n\n\nAudience\nIndividuals that want to use Scrum's high-productivity, agile methods for a project, and individuals that want to understand Scrum and agile practices. \n\nOutline\nPart 1: Scrum theory and practices discussion (75 min)\nLecture style delivery\nSpeaker introduction \nDefined control vs empirical control \nIncremental functionality, emergence, and self-organization \nScrum process overview \nProduct/ system vision \nWhat is the product backlog and who is the product owner? \nWhat is a Scrum team? \nHow do you plan a Sprint (iteration)? \nHow does a team commit to a Sprint goal? \nWhat is Sprint backlog? \nWhat are daily Scrums? \nHow does a team balance its committments within a fixed Sprint in light of emerging requirements, technology, and team dynamics? \nWhat does it mean to abnormally termate a Sprint? \nWhat happens at the end of Sprint review? \nPart 2: Case Study Overview (15 min)\nPresentation of case study\nVision \nTechnology \nRequirements \nRisks \nAssumptions \nPart 3: Translation of Case Study to First Sprint (90 min)\nFacilitated workshop\nSynthesize vision into product goal \nDevelop product requirements list \nSelect first Sprint product backlog and define Sprint goal \nBreak into Scrum teams \nEach team defines its Sprint backlog - self-organization \nEach team has a daily Scrum to report progress \n \n\nPresenter Resume\nKen Schwaber is one of the developers of the Scrum agile process and has extensively used agile processes over the last seven years. Ken is one of the founders of the AgileAlliance and helped setup the AgileAlliance organization. In 2001, Ken co-authored "Agile Software Development with Scrum" with Mike Beedle. With over thirty years of software development, management and consulting experience, Ken is currently working with organizations to develop software with Scrum and a combination of Scrum and Extreme Programming, as well as helping the organizations plan and execute the required change management.\nKen maintains information related to Scrum at www.controlchaos.com, and can be reached at ken.schwaber@verizon.net.\n\nSuggested readings and documentation\nBasic readings in agile processes recommended. Puruse the materials located at www.controlchaos.com, and look at the material in the books Agile Software Development with Scrum, Schwaber and Beedle, Prentice Hall, 2001; Adaptive Software Development, Highsmith, Dorset House, 1998, and Agile Software Development, Cockburn, Addison-Wesley, 2001.	Main conference	Tutorial	2002
118	HOW TO BE A COACH	Tutorial Summary\nIt's difficult to start a new process, but a coach can make this easier. A coach is part\ndeveloper and part manager. Coaches help a team stay on process and they help the team\nlearn. A coach brings in some outside perspective to help a team see themselves more\nclearly.\nWe'll use a combination of lectures, games, and exercises to explore and practice skills\nthat coaches (and team members!) can use.\n\nDuration: Half-day\n\nAims\nGive students:\nA deeper look at the coach's role\nTools to help communicate better\nPractice with charts, retrospectives, and other feedback tools\nPractice diagnosing team problems\n\n\nAudience\nCoaches, budding coaches, and developers on XP or agile teams.\nContent OutlineThe coach's role\nTeam formation \nBig Visible Charts \nRetrospectives \nWorking yourself out of a job\nPresenter Resumes\nWilliam C. Wake is a software coach, consultant, and teacher. He's the inventor of the\nXP Programmer's Cube, and the author of Extreme Programming Explored and the\nforthcoming Refactoring Workbook. He can be reached at\nWilliam.Wake@acm.org or http://www.xp123.com.\nRon Jeffries has been developing software since 1961, when he accidentally got a\nsummer job at Strategic Air Command HQ, and they accidentally gave him a FORTRAN\nmanual. He and his teams have built operating systems, language compilers, relational\nand set-theoretic database systems, manufacturing control, and applications software,\nproducing about a half-billion dollars in revenue, and he wonders why he didn't get any\nof it. For the past few years he has been learning, applying, and teaching the Extreme\nProgramming discipline. Ron is the primary author of Extreme Programming Installed.\nRon is a trainer and consultant at Object Mentor, Inc, and can be reached at\n RonJeffries@acm.org\n\nExamples of Supporting Material \nChart Reading: \nGiven a problem, what chart might you introduce? Given the data on a chart, what does it\ntell you about the team, its product, and process? We'll provide charts, and ask small\ngroups to interpret them.\nRetrospective: \nXP teams value feedback because it gives them an opportunity to learn. By holding end-\nof-iteration retrospectives, a team can learn from recent mistakes and tune its process.\nWe'll help small groups hold quick retrospectives.	Main conference	Tutorial	2002
119	PAIR PROGRAMMING: EXPERIENCE THE DIFFERENCE	Tutorial Summary\nAbstract: Pair programming is emerging as an important technique for developing higher quality\ncode, faster. With pair programming, two software developers work on one computer,\ncollaborating on the same design, algorithm, code, or test. This tutorial examines pair\nprogramming research results and anecdotal experiences of programmers who have\ntransitioned to pair programming. It will discuss what works and what doesn’t and will also\nexplain techniques for fostering support in making a transition to pair programming – support\nfrom management and support from peers. Hands-on activities will be used to demonstrate pair\nprogramming benefits.\nObjective: Participants will experience the difference between working alone and working in\npairs. They will understand the research results that show pair programming works, learn how\nto pair program, what not to do when pairing, and how to transition to pair programming.\nLevel:: Beginner\nAttendee Background: This tutorial is targeted toward software developers and technical\nsoftware development managers who are interested in transitioning to pair programming.\nPresentation Formal: About half of the tutorial time will be presentation based. The remaining\ntime will be spent on activities and discussion.\n\nPresenter Resumes:\nDr. Laurie Williams is an assistant professor at North Carolina State University. In 2000, she\ncompleted her dissertation which demonstrated statistically that pair programmers were able to\nproduce higher quality produces in essentially half the time when compared to individual\nprogrammers. Prior to her recent academic career, Laurie worked at IBM for nine years.\nDr. Robert Kessler is a full professor at the University of Utah. He has a BS, MS and PhD in\nComputer Science from the University of Utah. He has founded several companies and is on\nthe board of several others.\nDr. Williams and Dr. Robert Kessler are currently collaborating on a book entitled Pair\nProgramming Illuminated, to be published by Addison-Wesley in July 2002.\nRepeat: Yes\n\nContent Outline for Half-Day Tutorial (3 Contact Hours):\nI. Welcome and Tutorial Objectives (5 min.)\nII. Activity I: Individual design (25 min.)\nIII. Research Results in Pair Programming Presentation (30 min.)\nIV. Activity II: Individuals working on a team (25 min.)\nV. BREAK – 20 minutes\nVI. Adoption of Pair Programming Presentation (20 min.)\nVII. Activity III: Pairs rotating around a team (25 min.)\nVIII. Pair Programming Implementation Items Presentation (20 min.)\nIX. Summary and Conclusion (10 min.)\nTutorial Resume:\nThis tutorial was given at OOPSLA in October 2001 and at the NASA Software Engineering\nWorkshop in November 2001.\n\nTutorial Notes:\nTutorial participants are divided into teams of four. The three exercises proceed as follows:\nActivity One:\n1. A problem statement for a design is provided.\n2. Each participant individually produces a working design.\n3. Teams convene and review each of the designs, enumerating the features that are\ncommon among the designs and those that are unique.\n4. All tutorial participants discuss:\na. Observation – When engineers work individually on a design, there will be some\nsimilarities among the designs. However, each engineer will typically incorporate\na larger number of unique features.\nb. What conclusions can be drawn from this experience?\nActivity Two:\n1. A problem statement for the design of a device is provided.\n2. Each participant is given a role in the design of one module of the device. Each\nparticipant must complete his or her assignment without collaborating with the team.\n3. Each participant must then draw his or her current view of the team’s device without\ncollaborating with the team.\n4. Participants integrate their designs into one team device.\n5. All tutorial participants discuss:\n   a. How far away their initial knowledge of the entire device was from the integrated\nteam drawing (step 3 vs. step 4).\n   b. How the pieces they designed individually did not really fit together into a\nmeaningful device.\nActivity Three:\n1. A problem statement for the design of a device that is enhanced from the previous\ndevice is provided.\n2. Each participant is given a role in the design of the device. This participant is given\nultimate authority over this aspect of the system in the upcoming collaboration.\n3. Each participant is assigned a partner to work with. Together the pair work on the two\nthings they were assigned.\n4. Partners rotate so that each person is paired with a team member they did not work with\nyet. Together the pair work on the two things they were assigned.\n5. Partners rotate again so that each person is paired with the last team member they did\nnot work with yet. Together the pair work on the two things they were assigned.\n6. Each participant must then draw his or her current view of the team’s device without\ncollaborating with the team.\n7. Participants integrate their designs into one team device.\n8. All tutorial participants discuss:\n   a. How much they now knew about the overall team design before integration.\n   b. How the pieces they designed in pairs generally fit together into a meaningful\ntransportation device.\nNote: The same amount of time is allotted for each activity. With each successive activity,\nmore time is spent on initial designing and less integration time is necessary.	Main conference	Tutorial	2002
120	HOW TO START AN XP PROJECT: THE INITIAL PHASE	Abstract\nWithin Extreme Programming, the initial phase of a project is the exploration phase. This phase should establish\na common view of the system to be built and provide the base for what XP calls “productionizing” – the full-fledged\nXP development iterations. Therefore this phase is of crucial importance to the whole project. While\nthere is a lot of documented experience with the XP process itself, little has been said about the initial phase.\nThis tutorial presents a number of best practices and experiences to structure and master the exploration phase.\nThey will guide the team from the kick-off meeting to the first implementation of the system skeleton. The\ntechniques presented have been adapted to XP from experience gained in twelve years of consulting in\nprofessional object-oriented development projects. They have been successfully applied in numerous XP\nprojects, ranging from high-pressure short-term to large-scale long-term, from finance to the health domain, and\nfrom greenfield development to legacy system replacement.\n\nTutorial Objective\nAfter the tutorial the participants will have a clearer idea of which concepts are helpful and which pitfalls should\nbe avoided in starting an XP project. They will be equipped with a number of practice-proven techniques for\ngaining first insights into the problem domain and finding a system metaphor. They will have learned to use\nspike solutions and prototypes effectively. Finally, they will have a better idea when to end the exploration phase\nand to move on to the well-described XP development iterations.\n\nLevel: Intermediate\n\nAttendee Background\nThe tutorial is targeted at (potential) XP project managers and experienced developers interested in the extreme\nprogramming process. It is assumed that the audience has some familiarity with the basic concepts of extreme\nprogramming or similar agile processes. The typical attendee is thinking about starting an XP project or has\nalready faced the challenges of the exploration phase.\n\n\nPresentation Format: Lecture with slides, discussion\n\nDuration: Half Day\n\nSupporting Material: Handouts containing the slides\n\nPresenters\nHolger Breitling is a research assistant at the University of Hamburg and a professional software architect and\nconsultant at APCON Workplace Solutions. He is a senior architect of the JWAM framework, which is\ndeveloped applying most of the XP techniques. He has several years’ experience with extreme programming\ntechniques working on several projects and is currently acting as a project coach and trainer in this domain.\nbreitling@jwam.org\nMartin Lippert is a research assistant at the University of Hamburg and a professional software architect and\nconsultant at APCON Workplace Solutions. He has several years’ experience with XP techniques and XP project\ncoaching for various domains and has given a number of talks, tutorials and demonstrations (e.g. ICSE, XP,\nOOPSLA, HICSS, ICSTest), especially XP tutorials at ECOOP 2001 + 2002, OOP 2002 and ICSTest 2002. He\nis a member of the XP 2002 program committee. Among his publications are articles for “Extreme Programming\nExamined” and “Extreme Programming Perspectives” and he authored the book “Extreme Programming in\nAction”, which is due to be published by Wiley in July 2002.\nlippert@jwam.org	Main conference	Tutorial	2002
121	EFFECTIVE JAVA TESTING STRATEGIES	Summary\nThis tutorial will address common problems and introduce several mechanisms that will increase the effectiveness and speed of writing Java unit tests.  In this tutorial, attendees will learn (a) how to effectively use the JUnit testing framework, (b) several patterns and practices of implementing mock behavior in Java and (c) techniques for identifying and structuring unit tests that are effective, communicate clearly what is being tested and are easy to understand and change by other members of a software team.\n\nDuration, Aims and Audience\nThis is a half-day tutorial that aims to introduce attendees to writing effective Java unit tests and thereby increasing the speed at which they develop software in a test-first environment like XP.  \nTutorial Content Outline\n\nIntroduction to Junit\nWhat is JUnit?\nA simple Junit example.\nJunit Assertions\nCreating TestSuites in Junit\nAssembling Dynamic TestSuites\nWhat do we test?\nUnit Tests vs. Functional Tests\nTest-first vs. Code-first development\nDesigning By Contract and Unit Tests\nUsing pre/post conditions to guide test case creation\nStaying focused and fast with Mock Objects\nMock objects\nStub implementations\nClass Isolation With Mocks\nMocking to Reduce Pain.\nEffective Mock Object implementation patterns\nSimple mocks\nData mocks\nMocks with memory\nMock Factory pattern\nOverriding Mock Method pattern \nProper use of setUp() and tearDown() for Mock object initialization\nMocking Java API’s\nMocking a Socket\nImpossible Mock Situations\nAbstracting Around Impossible Mock Situations\nUsing Semaphores to coordinate threads and their tests.\nFine Tuning Your Testing\nCommon test case refactorings\nSubstitutability Abstract Test Cases\nAchieving High Code Coverage\nIntroduction and Background of the Tutorial and support materials\nThe tutorial content and materials are based upon Java development workshops that I have been running and guidance that I have been providing as an XP consultant on in-house and outsourced projects over the last 3 years.  The final tutorial materials will be slides taken from our workshops and modified as necessary to meet the needs of this 3 hour tutorial.\n\nInstructor Short Bio/Resume\nMr. Goodsen is the President and founder of RADSoft, a software engineering consulting firm specializing in rapid software development techniques since 1996.  He has worked on a variety of large-scale software projects over the last fifteen years, the most notable projects highlighted below:\nGlobal Positioning Systems, Rockwell International , 1986-1989.  User Equipment software engineer, responsible for design and development of GPS software in the early stages as the GPS satellite constellation was still being deployed.\nSoftware Research Engineer, Rockwell International, 1989-1991.   Representative to consortiums, including the Software Engineering Institute (SEI) and Software Productivity Consortium (SPC).  Primary role was integrate new research in incremental software process and testing/verification back into Rockwell projects, primarily commercial avionics software deployed on Boeing commercial aircraft.\nObject-Oriented Design Instructor, EVB Software Engineering 1991-1993.   Developed software and courses and taught OOD courses for EVB Software Engineering, founded by Edward V. Berard, now with The Object Agency.\nSoftware Consultant, The Dalmatian Group, 1993-1995.   Consulted with many clients to help them adopt a rapid software delivery process, primarily focused in the area of user-centered design and object-oriented graphical user interfaces.  Clients included Mitchell International, The Legent Corporation, J.P. Morgan (Wall St.), Motorola Cellular and Motorola Space Systems Division (IRIDIUM).\nRADSoft, 1996-present.  Founder and President. \nIncremental Software Process and Architecture consulting for large scale software projects, including IRIDIUM ground control systems and Capital One Billing Products.\nIn the last 3 years, we have adopted Java and XP exclusively as our development language and process.  I have brought together teams that have used Java and XP successfully in both outsourced software projects and in-house projects.  We have consulted with several XP projects and developed 2 systems in their entirety using XP with teams of 5-10 developers.  This experience in building teams from scratch, teaching them the practices of XP and the skills of test-first coding, OOD and Refactoring within an XP process has provided a wealth of experience that we would like to share with the rest of the software community.\nWe can provide excellent references on these projects upon request.\nEducation\nB.S. Computer Science and B.S. Applied Mathematics, University of Idaho, 1986.\nA.S. Computer Science, North Idaho College, 1983.\nContact Information\nJohn Goodsen, President and Principal Consultant of RADSoft.\nEmail: jgoodsen@radsoft.com / Office: 208-665-0516	Main conference	Tutorial	2002
125	XP FOR A DAY	Summary\nAttendees will practice XP for a day. Students will experience the XP development cycle\nand many of the practices in the context of an XP iteration plan and two development\niterations. \nStudents will: \n* Form XP development teams\n* Participate in an iteration plan\n* Accept new stories\n* Identify development tasks\n* Sign up for tasks\n* Experience Pair Programming\n* Program stories using test first design\n* Write and Run automated acceptance tests\nDiscussions occur through out the day to reflect on experiences and lessons learned.\nPrerequisites:\nFamiliar with XP concepts\nJava programming experience\nStudents download and perform XP for a Day preparation exercises.	Main conference	Tutorial	2002
126	REFACTORING: IMPROVING THE DESIGN OF EXISTING CODE	Summary\nAlmost every expert in Object-Oriented Development stresses the importance of iterative development. As you proceed with the iterative development, you need to add function to the existing code base. If you are really lucky that code base is structured just right to support the new function while still preserving its design integrity. Of course most of the time we are not lucky, the code does not quite fit what we want to do. You could just add the function on top of the code base. But soon this leads to applying patch upon patch making your system more complex than it needs to be. This complexity leads to bugs, and cripples your productivity. \nRefactoring is all about how you can avoid these problems by modifying your code in a controlled manner. Done well you can make far-reaching changes to an existing system quickly, and without introducing new bugs. You can even take a procedural body of code and refactor it into an effective object-oriented design. With refactoring as part of your development process you can keep your design clean, make it hard for bugs to breed and keeping your productivity high. \nIn this tutorial we'll show you an example of how a lump of poorly designed code can be put into good shape. In the process we'll see how refactoring works, demonstrate a handful of example refactorings, and discuss the key things you need to do to succeed.\n\nDuration: Half Day\n\nLevel: Intermediate\n\nPresenter's Resume\nMartin Fowler is the Chief Scientist for ThoughtWorks, Inc., a leading custom e-business application and platform development firm. For a decade he was an independent consultant pioneering the use of objects in developing business information systems. He’s worked with technologies including Smalltalk, C++, object and relational databases, and EJB with domains including leasing, payroll, derivatives trading and healthcare. He is particularly known for his work in patterns, the UML, lightweight methodologies, and refactoring. He has written four books: Analysis Patterns, Refactoring, the award winning UML Distilled, and Planning Extreme Programming. \nMartin has been giving this tutorial in various forms since around 1997. It has been presented at a wide range of commercial and academic conferences including OOPSLA (where it was one of the top 5 tutorials in 1999), Software Development,  and JavaOne.\nThe tutorial is based on the early chapters of Martin’s book “Refactoring: improving the design of exisiting code”. The tutorial is either presented by Martin alone or in collaboration with Josh Mackenzie.\nContact information\nMartin Fowler\nThoughtWorks, Inc.\n651 W. Washington Blvd.\nSuite 600\nChicago, IL  60661\nT: 312.373.8564\nF: 312.373.9564\nfowler@acm.org	Main conference	Tutorial	2002
127	THE AGILE DATABASE	Summary\nDoes your development team’s database strategy suck? Does your team even have a database strategy, or is this vital portion of your enterprise application - the repository of the data upon which your entire application rests - in the hands of some guy who sits on another floor or two buildings down the street? Is he even a member of your team?\nThe tutorial’s presenters do not have their sights trained on your database administrator, but they do intend to lay waste to the inefficiency and backward thinking inherent in the database-related practices of most development teams.\nThe tutorial will present a proven plan for adding agility to the database (starting with making the DBA a true member of the team). Participants will be shown how the application database can be structured to provide each team member with control of their own data space (similar to individual application instances). The presenters will explain, in detail, how processes and tools can be used to make the database more manageable and open to refactoring. Finally, the presenters will address the issue of applications that are already in production, and detail how the above topics still can apply to production environments.\n\nObjective\nAttendees will receive both (1) a thorough introduction to the concepts behind an agile database strategy, and (2) implementation-specific details that will allow them to introduce these concepts onto a development team.\n \nAttendee Background\nDevelopers, DBAs and project managers are encouraged to attend. Experience on a development team of eight or people is strongly recommended. Experience with an agile development methodology is recommended, but not required. A general understanding of relational databases and/or SQL is, similarly, recommended but not required.\n \nExperience Level: Intermediate\n \nPresentation Format: Lecture with slides\n\nDuration: Half Day\n\nOutline\n\nThe Development DBA\nManaging the Database: What Makes It So Complicated?\nThe Database Instance\nThe File System Metaphor\nThe Strategy\nThe Bifurcated Database\nThe Lineage of Instances\nThe Master Instance\nThe Update Log\nThe Update List\nImplementation\nThe Rules\nWho Gets to Play DBA\nTools and Automation\nTips and Tricks\nKnown Pitfalls\nLimitations\nAgile Database Development in a Production Environment\nPresenters\nPramod Sadalage, ThoughtWorks, Inc.\npramod@thoughtworks.com\n(312) 373-8555\nPramod Sadalage works as a Data Architect and Lead DBA at ThoughtWorks, Inc, a leading custom e-business application and platform development firm. At present, he is working on a large J2EE application, which uses XP, an agile methodology, may not have been sufficiently discussed in the context of databases.\nWhile on this project, Pramod pioneered the practices and processes of Agility in the database. He has worked with a variety of Relational Databases including Oracle, MS SQL, Informix, and Sybase. Pramod has more than eight years of experience with domains including financial, leasing, material management, and insurance. \nPeter Schuh, Independent Consultant\nagile@peterschuh.com\n(312) 373-8433\nPeter Schuh is an independent consultant, specializing in system analysis and project management. He has more than five years experience participating in and managing projects in the leasing, health care and e-commerce fields. Peter has written and spoken about Extreme Programming, the adoption of agile processes, agile development's impacts upon database administration, and the ObjectMother pattern.	Main conference	Tutorial	2002
128	CHANGE WIZARDRY: TOOLS FOR GEEKS	Duration: Half-Day (3 hours)\nAudience: Agile/XP folks who are trying to make change happen\nAbstract:\nHave you noticed that it can be difficult to get your colleagues and/or your\norganization to adopt agile methodologies? "What's wrong with our current process?"\n"We don't have time for change." "I’ll never pair-program." "It's not in the budget."\n"We've never done that before."\nUnderstanding the organizational dynamics of change is critical to influencing the\nchangeover from traditional software development to XP or other agile\nmethodologies. This tutorial will introduce you to four change tools, which the\npresenters have found helped people and organizations actually effect a change.\nIn this tutorial you’ll apprentice as a change wizard, learning about:\n· Change Readiness Assessments\nConjuring up the right assessment tool will help you determine answers to\ncritical questions like: "Is there a chance for change?" “Do pockets of\nreadiness exist in my organization?” "What would need to be different around\nhere for change to occur?" Will the path to change in my organization be a\nmulti-step process or one transformational leap?"\n· Project Retrospectives\nCast the spell of learning. Change cannot happen without learning and\nretrospectives help organizations learn. The examination of past performance\ndata, which happens during a retrospective, yields a climate that fosters\nreadiness for change.\n· Paradoxes\nAmaze and astound your colleagues with paradox voodoo. Agile\nMethodologies are filled with paradoxes, contradictory conditions that must be\nresolved for effective and harmonious development. Once you tap in to the\npower of personal and team paradoxes you are better equipped to understand\nand work with resistance to change.\n· Chartering\nLearn a little piece of magic called a Charter and you'll know how to make a\ncommitment to change actually stick. A charter is a reference point or shared\nagreement between team players that provides direction during the course of\na project.\nJoin us and learn to do your own change magic.\nOutline:\n\nIntroductions\n Presenters\n Topic Overview\n Participants \n Understanding Change Dynamics – The Trances of the Status Quo\n Change Models\n Change Formula\n Practice experiencing and influencing change – interactive activities\n How does this relate to software development?\n Change Readiness Assessments – Divining the Source\n Examples and Anecdotes\n Interpreting the Assessment – experiential\n Project Retrospectives – The Spell of Learning\n End of Project Reviews and Norm Kerth\n The benefit of a retrospectives\n A mini-retrospective experience\n Paradox Voodoo\n Introducing paradoxes\n Finding where they live – interactive\n How to break the enchantment\n  Chartering – Change Wizardry That Sticks \n Chartering what and why\n Develop a charter – simulation\n What works?\n Wrap-Up\n Review - Earn your official apprentice wizard’s wand\n Resources for wizards\n Closing\n Presenters:\nJoshua Kerievsky is a software development coach and programmer. After\nprogramming on Wall Street for nearly 10 years, in 1995 he founded San Francisco\nBay Area-based Industrial Logic (http://industriallogic.com), a company that\nspecializes in Extreme Programming (XP). Since 1999, Joshua has been\nprogramming and coaching on small, large and distributed XP projects and teaching\nXP to people throughout the world. He regularly speaks about XP, has authored\nnumerous XP and patterns-based articles, simulations and games and is hard at\nwork on the forthcoming book, Refactoring to Patterns\n(http://industriallogic.com/xp/refactoring/).\nDiana Larsen, a senior consultant with FutureWorks Consulting LLC, works with\nleaders of high tech companies, engineering teams, and development groups to\nstrengthen their ability to manage organizational changes (e.g., a migration to\nXP/Agile methods) and capture the learning from their development experiences for\nfuture projects. Based in Portland, OR, she has over twelve years experience with\nsupporting effective interaction, planning, and review, as well as managing projects.\nClients work with Diana because of her experience and expertise, but also because of\nher candor and her willingness to explore uncharted territory and innovative\nsolutions. She is a co-sponsor of the upcoming Project Retrospectives Facilitators'\nGathering and a speaker at conferences.\n\nSupporting Material:\nDiana and Joshua’s experience with Change Wizardry is the supporting material. As\nalways, we plan on conducting a highly interactive session. We will be providing\nhand-outs, which are still under development.	Main conference	Tutorial	2002
129	BEYOND THE CUSTOMER: AGILE BUSINESS PRACTICES FOR XP	AbstractThe role of the Customer/Product Owner in an Agile project is challenging. While much has been written about the Customer practices that address the interface with the Developers, a vital area of the product development process lies beyond that boundary in the business and product management domains. \nCustomers are faced with many tough questions: Are the stories supporting the real business goals? Do the release plans address the needs of all of my users? How can I determine the value and priority of the stories? How can I turn high-level business and product strategies into stories and release plans? How can I make sure that I'm using my Developers' time to produce the most business value? \nIn this tutorial we will explore some specific Agile solutions that we've successfully applied to the business side of real-world projects in concert with XP. Through a combination of light lecture, hands-on exercises, and group discussions, tutorial participants will learn new techniques and practices to introduce and apply to their projects. \nIn this tutorial, we'll cover: \nApplying Agile values and principles to create a relatively simple set of business practices that start with defining the corporate business objectives, and follow through to setting strategic product initiatives and developing specific product feature sets.Practices for identifying and resolving the often-competing interests of multiple stakeholders and user constituencies to create a single, cohesive product plan.Techniques for turning product initiatives and features sets into appropriate stories and release plans, using lightweight essential use cases and breadth-and-depth breakdowns.Valuing stories based on tangible, testable business value, such as revenue or customer satisfaction, and applying that valuation to the release planning and story prioritization practices.Creating a seamless, traceable link from high-level strategic business objectives to Developer's individual tasks. Image being able to point to a Developer and say "she is writing code right now that supports our corporate revenue growth initiative by adding $10,000 in monthly revenue."Providing test-like metrics-based feedback to evaluate if release plans are fulfilling the product strategies and in turn the business objectives.\n\n\nAudienceThis tutorial is intended for team members who are interested in expanding the adoption of Agile practices to the entire product development process. Although no prerequisites are required, knowledge of the business, strategic product planning, and product management aspects of the overall development cycle may be helpful. Familiarity with Agile development processes such as XP or Scrum is recommended.\n\n\n\nContent Outline\nWhy Agile Business Practices?\nOur Experiences with XP/Agile Development Adoption\nWhat Do We Do When the Development Group Outperforms the Business?\nGetting the Entire Business to Spin at the Same Rate\nThe Scope of Product Development\nOverall Business Objectives – What is the business trying to accomplish?\nProduct Initiatives – What kind of product development supports business objectives?\nProduct Feature Sets – What does the product have to deliver to realize the initiatives?\nStories and Plans – How will we go about implementing the features?\nWhat Parts of This Scope Do XP and Agile Processes Cover?\nThe Core Values and Principles of Agility\nCollaboration, Rapid & Concrete Feedback, and Simplicity\nResponding to Change, Learning, and Empowered, Self-Motivated Teams\nWhat This All Means to the Business Side of Things\nTowards an Overall Agile Product Development Process\nAdding A Business Cycle Around XP’s Three Cycles\nThe Business Planning Cycle\nEstablishing the Cycle Charter through Business Stories\n    Generating Product Strategies from Business Stories\n    Generating Product Feature Plans from Product Strategies\n    Release Planning and Strategic Feedback\n    Strategic Investment and Resource Commitments\n    Implementing Releases\n    Business Retrospectives\nConcrete Feedback – Avoiding Guesswork and Pet Projects\nExamples of Business Stories and Product Strategies\nMeasuring with Metrics\nThis Is Business, Not Science – Keep It Simple\nTraceability in The Process\nWhy Bother? Competitive Advantages and Motivation\nDeveloper Episodes Trace Back to Tasks\nTasks Trace Back to Stories\nStories Trace Back to Features\nFeatures Trace Back to Product Strategies\nProduct Strategies Trace Back to Business Stories\nViola! “Jane is working to generate $10K in revenue in support of our quarterly target.”\nWhat To Do When There Isn’t One Customer?\nXP’s “Customer” Is Not Necessarily the End-User\nMultiple End-User Constituents\nMultiple Stakeholder Interests\nWorking with Multiple Stakeholders\nTeam Development of Product Strategies, Features, and Stories\nEstablishing a Customer Board\nEach Board Member Has Their Stories\nMapping and Merging Stories\nOrganizing Stories Based on Strategic Priorities\nEstablishing Normative Priorities\nA Single Customer/Product Owner Represents the Results\nGenerating Stories from Product Strategies and Features\nGenerating Features from Product Strategies – A Little Leg Work\nDescribing Feature Requirements with Lightweight Essential Use Cases\nA Story Is Not a Use Case – Stories As Change Requests\nExtracting Stories from the Use Cases\nStory Depth and Breadth – A Multi-Dimensional Thing\nIssues in Adopting Agile Business Practices\nThe Value of Leaders and Mentors\nA Bit of Preparation and Education Never Hurts\nRespect Everyone’s Turf – This Isn’t Just a Programmer Thing\nCountering Fear and Resistance One Small Step at a Time\nPilot Projects and Adoption on a Shoestring\nThe Challenge of Building and Sustaining Momentum\nThe Fall of Empires and the Rise of the Collective\nAdapting and the Learning Organization\n\nPresenter Bio and Contact InformationPaul Hodgetts is the founder and principal consultant of Agile Logic, a professional services company focusing on Agile development processes and enterprise development technologies. He has more than 19 years of experience in all aspects of software development from in-the-trenches coding to technical project management, on a wide variety of projects from embedded real time control to distributed internet business applications. His recent focus has been on expanding the application of Agile values and principles to the business side of product development, and on the organizational change aspects of adopting Agile processes. Paul has presented at conferences including JavaOne and XP Universe, and has taught software courses both privately and at California State University, Fullerton, where he is a member of the Java, J2EE, and C++ advisory boards.\nPaul can be contacted at:\nPaul Hodgetts\nAgile Logic\n1519 East Chapman Ave. #254\nFullerton, CA, USA 92831\nPhone: (714) 269-7401\nEmail: phodgetts@AgileLogic.com\nWebsite: www.agilelogic.com	Main conference	Tutorial	2002
130	XP RELEASE PLANNING AND USER STORIES	The "Circle of Life" in XP is the cycle: On-Site Customer, Planning\nGame, Small Releases, Acceptance Tests. This cycle, repeated for every\nrelease, and for every iteration, is the heartbeat of an XP project.\nIt provides the requirements that the programmers need in order to\nprogram, the development velocity and quality information that\nmanagement needs in order to steer the project, and the connection\nbetween wish and reality that the customer needs in order to choose\nwhat to do next and when to release. We don't call it the Circle of\nLife lightly.\n\nIn this half-day tutorial, you'll have the opportunity to experience\nthe same project three ways: with very low information, part of the\ninformation that XP can provide you, and with all the cost and value\ninformation that XP provides. You'll experience the highs and lows of\nworking on such a project, and learn hands-on why the XP planning\nprocess is so powerful within such a simple framework.\n\nThe session is based on Ann, Chet, and Ron's popular "small card"\ngame, where we simulate an important valuable project. This is the\nsame experience that we have offered at XP Immersions, Smalltalk\nSolutions, XP200n, and various on-site courses.\n\nWe use the release planning game to explore various project planning\nstrategies. The game is played in small groups of approximately four\nto eight players. Both programmers and customers may play, in any\ncombination.\n\nIn each cycle of the game, the players plan and "implement" a product.\nEach time through, they learn some new lessons enabling them to plan\nand implement better next time. Scoring is based upon each team?s\ntotal return on investment.\n\nBased on that experience, we'll then discuss how teams\nlike yours can get the cost and value estimates needed to run your\nproject the XP way. The session has been rated as valuable and\nenjoyable by all those who have taken part in it. If you haven't yet\nsuffered the joys and agonies of the "Small Card" game, this is your\nchance!	Main conference	Tutorial	2002
131	STEERING THE BIG SHIP: SUCCEEDING IN CHANGING AN ORGANIZATION'S PRACTICES	“Welcome, welcome!, we’re so glad you’re here.  We just have so many problems here at Mock Corporation.   Our software development has been a problem as long as we can remember.  We really thought we had it licked with the last process change we made.  It was kinda structured, but the plans looked great at the start of the project!   Now, some programmers are experimenting with this XP and Agile stuff and they really like it, but lots of people think it won’t work.”\nWelcome to Mock Corp.  In this tutorial, YOU are the coach, helping Mock Corp. over come the challenges of changing the practices they use to create software.   You’ll study Mock Corp’s people, teams, and the organization as a whole.  Common challenges in adopting new practices will be explored as Mock Corp. encounters them.  Resistance behaviors will be identified and tools to over come them will be presented.   Mock Corp. is a generalization of real people and companies that have undergone transition to XP.   Individuals from companies that have or are going through the transition will participate to tell their stories.\nChanging the way individuals work is a big challenge.  Changing the way teams work is an even bigger challenge.  Changing the way organizations work is harder still.  Moving to an Extreme or Agile way of developing software tests the ability of individuals, teams, and organizations to change.  The degree to which an XP or Agile transition is successful long term will primarily depend on this ability to change.  This tutorial will teach the participants about change at different levels in the organization and techniques to make change successful.   Special emphasis will be placed on the organization level change issues and the infrastructure required to make change stick.  \nDuration: half-day\nContent outline\n• Models of Organizational Change\n• Specific change issues caused by the transition to Extreme Programming or other\nAgile methods\n   o Programming Team Changes\n   o Customer Team Changes\n   o Management Changes\n• Mock Corp\n• Individual Change and Techniques (exercise)\n• Team Change and Techniques (exercise)\n• Organizational Change and Techniques (exercise)\n• Tales from the Trenches: Case Studies from Real World Transitions\nPresenter resume with contact information\nLowell Lindstrom has been involved in the teaching, coaching, and transitioning of\nnumerous XP projects in organizations of all sizes and varying domains. He is currently\nresponsible for the business development and strategy at Object Mentor and coaches\norganizations on customer skills and the organizational change aspects of Extreme\nProgramming. He has been professionally involved across of the spectrum of software\nbusiness for 17 years. After many years of developing and managing software projects,\nhe took on organizational change, marketing, and sales roles at a large technology\nproduct company. He has a BSCS from Northwestern University and a Masters in\nManagement from Northwestern's Kellogg GSM.\nLowell Lindstrom\nlindstrom@objectmentor.com\nPhone: 847-573-1565 x20\nMSN Chat: omlowell	Main conference	Tutorial	2002
132	AGILE ACCEPTANCE TESTING	The goal of this workshop is to discuss and develop practices for\nsupporting effective acceptance testing on agile projects. (Some refer\nto acceptance testing as system testing, functional testing, customer\ntesting or GUI testing).\nWhat skills are required for acceptance testing? How should acceptance\ntesters they interact with other members of the team? How can agile\nprojects support the automation of these tests?\nThis workshop will survey the participants experiences and\nunderstandings of what does and doesn't work. Participation is\nencouraged from testers, developers and anyone with an interest in\ntesting and experience with testing on agile projects.\nMore details are available at http://www.pettichord.com/agile_workshop.html	Main conference	Workshop	2002
133	DISTRIBUTED PAIR PROGRAMMING	Agile methodologies stress the need for close physical proximity of team\nmembers. However, circumstances may prevent a team from working in close\nphysical proximity. For example, a company or a project may have development\nteams physically distributed over multiple locations. As a result,\nincreasingly many companies are looking at adapting agile methodologies for\nuse in a distributed environment.\nThe aim of this workshop is to bring together practitioners who have\nexperiences with distributed pair programming.  In addition, the workshop\nwill be especially valuable to participants who are involved in development\nactivity that is geographically distributed and are interested in applying\ndistributed pair programming.  We further want to incorporate experiences\nand research in Computer Supported Collaborative Work (CSCW) environments.\nOverall, the workshop will discuss how to make this type of distributed work\nas effective as possible and will help guide future research.\nFor more information http://dxp-cs.cs.unc.edu/XPU-DPP-workshop/	Main conference	Workshop	2002
134	EMPIRICAL EVALUATION OF AGILE METHODS	Imagine the benefits of knowing that an XP project expends more effort\nunderstanding software requirements than does a team using a typical\ntraditional, or waterfall approach. Imagine the benefits of being able to\npredict that for this particular combination of customer, product, and\nproject team, agile modeling is going to benefit the team more than a strict\nXP implementation. The world we seek is one that de-mystifies the success of\nagile methods and supports everyday practitioners to apply the right method\nat the right time. We believe measurements are key to making these decisions\nand to making agile methods more accessible.\nPresently, there is a lot of anecdotal evidence and very little empirical\nand validated data of agile methods effectiveness. Much of the evidence is\nbased on the stories and preferences of those who practice it. The workshop\nparticipants are expected to share keen interests in finding practical\napproaches to measuring the effectiveness of agile software techniques in\nvarious project situations (both industrial and academic).\nMore	Main conference	Workshop	2002
135	LSO WORKSHOP	This is a full day workshop\nThe theme of the Fourth Workshop on Learning Software Organizations (LSO) is "Balancing Agile Processes and Long-Term Learning in Software Organizations". The LSO Workshop series focuses on technical, organizational, and social solutions to problems of learning from past experiences and codifying the resulting best practices so they can be systematically used in subsequent software development efforts \nThis workshop will explore the issues of managing knowledge in dynamic domains requiring significant levels of improvisation within each repetition of the process. The challenge is not one of capturing and finding complete solutions to problems, but the more difficult task of finding and integrating partial solutions that can serve as a baseline for continuous improvement, and hence, organizational learning. Techniques need to be explored that couple process and workflow management with knowledge management to capture and build an experiential body of knowledge for software development activities, while enhancing the ability of an organization to quickly adapt its processes to new technologies and market pressures.\nLearn More	Main conference	Workshop	2002
136	Setting the Agile Context	The use of agile software methods requires a proper context.  As with\nother methods, a poorly managed and disordered environment makes\ncreative technical work difficult and often impossible.  In this talk,\nWatts Humphrey discusses the environmental characteristics required for\ncomplex creative work, how the working situation is typically\nestablished, and what the software professional can do to influence the\ncontext of his or her work.  He then describes the experiences of\ndevelopment teams in establishing and directing the environment for\ntheir own work.  He also provides data on how this affected the quality\nif their products and the productivity of their projects.  In\nconclusion, Mr. Humphrey discusses the factors that determine the\nability of professionals to set the contexts for their own work and how\nthis relates to the use of agile methods.	Main conference	Keynote Address	2002
137	XP FEST (Monday)	XP FEST\nOne of the core values of XP is feedback, which involves going beyond just talking about something to actually doing it as quickly as possible, because only then do you know if it makes any sense. So, instead of just coming to XP/Agile Universe and talking about XP, why not do some XP, too? It seems fitting to go beyond just talking about abstract concepts to actually implementing them in a simple format.\nIn the style of OOPSLA's AnalysisFest, DesignFest and CodeFest, with their waterfall view of software development, you can participate in XPFest at XP/Agile Universe.\nGoals:\nLearn XP by doing.\nBe exposed to different views of XP. \nTry out XP if you haven't tried it yet. \nCompare how different teams adapt XP. \nHave fun doing something you enjoy: programming using XP! \nMondayTuesday(1) Customer - someone who has a small problem they'd like solved. All sessions will work with this customer.\n\t(1-2) Coaches - people qualified to help the team implement XP. \n\t(up to 8) Developers - people who want to do XP.\n\t(1+) Observer - to record how the team implements XP.\nContact:domelia@rolemodelsoft.comhttp://www.xpfest.org	Main conference	Workshop	2002
138	XP FEST (Tuesday)	XP FEST\nOne of the core values of XP is feedback, which involves going beyond just talking about something to actually doing it as quickly as possible, because only then do you know if it makes any sense. So, instead of just coming to XP/Agile Universe and talking about XP, why not do some XP, too? It seems fitting to go beyond just talking about abstract concepts to actually implementing them in a simple format.\nIn the style of OOPSLA's AnalysisFest, DesignFest and CodeFest, with their waterfall view of software development, you can participate in XPFest at XP/Agile Universe.\nGoals:\nLearn XP by doing.\nBe exposed to different views of XP. \nTry out XP if you haven't tried it yet. \nCompare how different teams adapt XP. \nHave fun doing something you enjoy: programming using XP! \nMondayTuesday(1) Customer - someone who has a small problem they'd like solved. All sessions will work with this customer.\n\t(1-2) Coaches - people qualified to help the team implement XP. \n\t(up to 8) Developers - people who want to do XP.\n\t(1+) Observer - to record how the team implements XP.\nContact:domelia@rolemodelsoft.comhttp://www.xpfest.org	Main conference	Workshop	2002
139	METHODS AND SUPPORTING TOOLS	METHODS AND SUPPORTING TOOLS\n\nDesigning Requirements: Incorporating Usage-Centered Design into an Agile SW Development Process\nUsing Ant to Solve Problems Posed by Frequent Deployments\nSupporting Adaptable Methodologies to Meet Evolving Project Needs\nJeff Patton, Steve Shaw, Scott Henninger, Aditya Ivaturi, Krishna Nuli, Ashok Thirunavukkaras	Main conference	Presented papers	2002
140	SHARPENING THE AXE FOR TEST DRIVEN DEVELOPMENT	Summary\nAbraham Lincoln is famously (mis-) quoted:\n"If you showed me a big tree and an axe and\ngave me eight hours, I’d spend the first 6 hours sharpening the axe.” Software shops all over the world are now\npracticing XP, and specifically Test Driven Development. The tutorial below sets out to accomplish\nthree goals: 1) Offer information on known axe-sharpening efforts in XP-Land. \n2) Provide a demonstration of a small set of hand-rolled tools for TDD\nin real-world projects. 3) Advocate the\nkind of deep laziness that gives making and refining tools its proper value in\nthe framework of XP.\n\nDuration and Target Audience\nThis is a half-day tutorial whose target is intermediate or\nadvanced programmers who feel they are not getting maximum value from the TDD\napproach. Anyone who is trying TDD\nis welcome. Anyone who has understood\nthe urgency of adopting TDD but who is still using crude and ineffectual\ntools should benefit. The presenters particularly welcome new\nadopters and those working with or leading them.\n\n\nOutline\nNote: The tutorial will be handled in true XP style. What follows is a\nrelease plan, and as the class develops, it will surely flex to meet the\nattendees' needs. The real point of the tutorial is to provide a focused topic\nand bring TDD adopters face to face with an experienced practitioner for our\nmutual entertainment and edification. The presentation includes working programs, sample code, and a variety\nof tips, tricks, and techniques.\nThere are Axes and Axes:  It’s Better Than Using A Plastic Knife\n\nThe xUnit Family\n What a Dull xUnit Does, and How\n   The Three Pieces of All xUnits\n   A One-Day xUnit for Language X\nWhat a Sharp xUnit Does, and How\nA Very Sharp xUnit\nIntegrated xUnit\nDeep Laziness:  Preparing And Refining A Good Axe\nIntroducing Tool Smells\n   Learning Not To Type\nCreating Inaccesible Engines\nMaking Your Tool Yours\nBuy, Borrow, or Build?\nxAT, xVersion, xGUI, xProcess:  Attacking The Rest Of The Forest\nWhat xUnit Doesn’t (and Shouldn’t?) Do\nCompleting the Integration\nAcceptance Testing Around the Clock\nTools for Writing Tests\nHard Questions\nOpen season on TDD and tools. The last hour of the tutorial will be focused on the questions and answers that the attendees offer. Real challenges from real applications are the order of the day. \n\nPresenter's Resume\nMichael Hill\n994 Shannon Farm Lane\nAfton, VA 22920\nhill@objectmentor.com\nMichael Hill has been testing first for three years, against a background of twenty+ years as an independent contractor. He is a senior mentor at Object Mentor, Inc., a job that has brought him into contact with literally dozens of differents projects and platforms. He is presently at work on a book on Test Driven Development.  For a more complete bio see Object Mentor - Michael Hill.	Main conference	Tutorial	2002
\.


--
-- Data for Name: speakers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY speakers (name) FROM stdin;
Jeff Gothelf
Jennitta Andrea
Jonathan Rasmusson
David Dalka
Leah Buley
Patrick Kua
Willem Larsen
Skip Angel
Max Guernsey
Bob Galen
Yi Lv
Abby Fichtner
Jim  Highsmith
Karl Scotland
Ahmed Sidky
Greg Smith
Lisa Crispin
Janet Gregory
Joe Fecarotta
Samantha Laing
Craig Smith
Adrian Smith
Michael DePaoli
Leeann Berner
David Chilcott
Paul Dolman-Darrall
Karen Greaves
Jenni Jepsen
Roger Brown
Mark Levison
Mary Poppendieck
Bas Vodde
Pollyanna Pixton
Richard Lawrence
Carlton  Nettleton
Gil Broza
Luiz Claudio Parzianello
Jonny LeRoy
Matt Simons
George Dinwiddie
Ravindar Gujral
D. André Dhondt
Carsten Jakobsen
Thushara Wijewardena
Tom Poppendieck
Venkat Subramaniam
Portia Tung
Pete Behrens
John Maxwell
Michael Kaiser
Guy Royse
Aaron Sanders
Pat Maddox
Elizabeth Keogh
Howard Deiner
Sanjiv Augustine
arlen bankston
Dan LeFebvre
Israel Gat
Markku Åhman
Timo Punkka
Emmanuel Gaillot
Jonathan Perret
Ted Layher
Kealy Opelt
Tom Perry
Jason Little
Mike Cottmeyer
Dennis Stevens
Tim McCoy
Chris Sims
Amr Noaman
Mohamed Amr
Dean Leffingwell
Julien Mazloum
Jim Ungar
Todd Zaki Warfel
Adam Light
Ken Power
Johanna Rothman
William Rowden
Satoshi Kuroiwa
Kazumasa Ebata
Ken Clyne
Julie Chickering
Simon Bennett
Eric Willeke
Mike Russell
Brian Sobus
Jason Fair
Gary Bernhardt
Jeremy Lightsmith
Patrick Debois
Julian Simpson
Amr Elssamadisy
David Bland
Lyssa Adkins
Michael Spayd
Katherine Kirk
Sonya Lowry
Lars Skaar
Doug Bradbury
Lisa Ho
Tracy Beeson
Agustín Villena
Philippe Camacho
Judy Wankerl
Gerry Kirk
Eric Sink
Ainsley Nies
Diana Larsen
Mary Gorman
Ellen Gottesdiener
Ralph Miarka
Marc Bless
Christian Vindinge Rasmussen
Cathrine Lippert
Michele Sliger
Perry Reid
Martin Heider
Bernd Schiffer
Christopher Avery
Ashley Johnson
Carol Morton
Clement "James" Goebel
Angela Druckman
Jimi Fosdick
Alistair McKinnell
Bob Payne
Ronen Rubinfeld
Mik Kersten
Dan Mezick
Michael Sahota
Jean Tabaka
Olaf Lewitz
Kenny Rubin
David Hussman
Simon Orrell
Jaron Lambert
Damon Poole
Declan Whelan
Bryan Beecham
neil johnson
Val Scott
Michael Elbaz
William Krebs
Jim McCarthy
Alan Shalloway
John Haniotis
Scott Dunn
Steven "Doc" List
Jon Innes
Matt Block
Ian Ratner
Jack Harvey
Steve Ropa
Joel Tosi
Robert Martin
Marian Willeke
Shane Hastie
Steve Adolph
Don McGreal
Keith Nottonson
Michael McCullough
Jon Stahl
Tsuyoshi Ushio
Emerson Mills
Michael Keeling
Mike Velichansky
Scott Ambler
James Grenning
Eewei Chen
Charles Suscheck
Dean Wampler
Elisabeth Hendrickson
Nick Horney
Nancy Van Schooenderwoert
Joseph Wilk
Francisco Trindade
Micah Martin
Colin Jones
Brian Marick
Michael Feathers
Arlo Belshee
Hugh Beyer
Ryan Polk
Angela Harms
Dale Emery
James Shore
Mike Prior
Cory James Hohs
Elena M Yatzeck
Lynn Langit
Llewellyn Falco
Kathleen  Rilliet
Hubert Smits
Chet Hendrickson
Ron Jeffries
Lynn Cowan
Jez Humble
Daniel Brolund
Denny de Waard
Jeff Sutherland
Stephen Denning
Sami Honkonen
Arto Eskelinen
Charles Roman
Tim Ottinger
Nafis Ahmad
Bill Wake
Patti Mandarino
Esther Derby
Leslie Ekas
Scott Will
Dave Nicolette
Andrea Provaglio
Michael Hill
Xavier Quesada Allue
Ali Zewail
George Schlitz
Sean Buck
Pradyumn Sharma
Chris OConnor
Harold Shinsato
Don Gray
Nanette Brown
Robert Nord
Zhon Johansen
Greg Williams
Derek  Neighbors
Darius Kumana
Jeremy Sutherland
Belkis Vasquez
Meghann Drury
Catherine Clark
Mauricio Aniche
Guilherme Silveira
Steve Andrews
Raj Mudhar
Allison Corbett
Jeff Langr
Richard Cheng
Gourav Tiwari
Zainab Alikhan
David Bulkin
Barninder Khurana
Jason Tanner
Michael  Meissner
Mike Suarez
Isel Fernandez Diez
Carol Smith
Derek W. Wade
Jason Dean
Jeff Patton
Christian Hassa
candi rai
Marc-Elian Begin
Andrew Hunt
Alan Padula
Nils Brede Moe
Torgeir Dingsøyr
Børge Haugset
Geir Kjetil Hanssen
Philippe Kruchten
Judith Brown
Gitte Lindgaard and Robert Biddle
Tiago Silva
Angela Martin
Laura Bocock
Mia Horrigan
Mali Senapathi
Ananth Srinivasan
xiaofeng wang
Kieran Conboy and Ken Power
B Veeresh Thummadi
Omri Shiv and Kalle Lyytinen
Gayane Azizyan
Miganoush Magarian and  Mira Kajko-Mattsson
Theodore Hellmann
Frank Maurer
Claudia Melo
Daniela S. Cruzes, Fabio Kon and Reidar Conradi
Lene Pries-Heje
Jan Pries-Heje
Barbara Fredrickson
Kevlin Henney
Linda Rising
Edwin Wong
Drew Jemilo
Bill Gaiennie
Brad Swanson
Anders Ramsay
Patrick Phillips
Kuryan Thomas
Arlen Bankston
Martin Fowler
Pramod Sadalage
Peter Schuh
Joshua Kerievsky and Diana Larsen
Paul Hodgetts
Ann Anderson
Bret Pettichord and Brian Marick
Lowell Lindstrom
Ken Schwaber
William Wake and Ron Jeffries
Laurie Williams
Robert Kessler
Holger Breitling and Martin Lippert
BARRY BOEHM
Watts S. Humphrey
Alistair Cockburn
Dave West
Richard P. Gabriel
J. Frenando Naveda
Daniel Steinberg
Tom Kubit
Alan Airth
Gary Pollice
Granville Miller
Ken Schwaber -- Scott Ambler
Hakan Erdogmus
Ward Cunningham
Fernando Naveda
Bill Kleb
James Caristi
Randy Miller
Ken Auer
Steven Fraser and Rachel Reinitz
Dave Thomas
Barry Boehm
John Goodsen
Tip House
Jutta Eckstein
Richard Hightower
David Stotts and Laurie Williams
Grigori Melnik
Adam Geras
Scott Henninger and Frank Maurer
Duff O'Melia
\.


--
-- Name: session_speakers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY session_speakers
    ADD CONSTRAINT session_speakers_pkey PRIMARY KEY (session_id, speaker_name);


--
-- Name: sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id);


--
-- Name: speakers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres; Tablespace: 
--

ALTER TABLE ONLY speakers
    ADD CONSTRAINT speakers_pkey PRIMARY KEY (name);


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

